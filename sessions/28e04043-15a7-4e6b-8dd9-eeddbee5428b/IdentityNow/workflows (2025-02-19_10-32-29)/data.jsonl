{"id": "032887bb-1955-47af-9b83-62e37508c166", "name": "Don Test Workflow2", "description": "test workflow", "created": "2024-09-26T13:58:58.679574344Z", "modified": "2024-10-11T19:08:12.389426195Z", "modifiedBy": {"type": "IDENTITY", "id": "a5c91ed8e54b4d8b8feab1ece875f710", "name": "dcoltrain"}, "definition": {"start": "Get Identity", "steps": {"End Step - Success": {"displayName": "", "type": "success"}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "", "displayName": "", "nextStep": "Send Email", "type": "action", "versionNumber": 2}, "HTTP Request": {"actionId": "sp:http", "attributes": {"authenticationType": "basic", "basicAuthPassword": "$.secrets.25476482-6c7c-40c1-bf9f-de980c498792", "basicAuthUserName": "dcoltrain", "method": "post", "requestContentType": "json", "requestHeaders": {}, "url": "https://008b0219-5038-4bb8-bb55-587fc7ff78db.mock.pstmn.io/philosophers"}, "displayName": "", "nextStep": "End Step - Success", "type": "action", "versionNumber": 2}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "<p>email triggered by attribute change in RL SailPoint ISC</p>\n<p>&nbsp;</p>\n<p>Identity ID for affected record is $.trigger.identity.id</p>", "context": {}, "from": "", "recipientEmailList": ["dcoltrain@radiantlogic.com"], "replyTo": "", "subject": "triggered workflow in RL ISC"}, "displayName": "", "nextStep": "HTTP Request", "type": "action", "versionNumber": 2}}}, "enabled": true, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "a5c91ed8e54b4d8b8feab1ece875f710", "name": "dcoltrain"}, "owner": {"type": "IDENTITY", "id": "a5c91ed8e54b4d8b8feab1ece875f710", "name": "dcoltrain"}, "trigger": {"type": "EVENT", "attributes": {"attributeToFilter": "title", "filter.$": "$.changes[?(@.attribute == \"firstname\")]", "id": "idn:identity-attributes-changed"}}}
{"id": "42843aa9-296f-4771-b464-3b56d640e3d9", "name": "Don Test Workflow", "description": "", "created": "2024-09-16T17:07:04.423191338Z", "modified": "2024-09-18T13:24:33.505127467Z", "modifiedBy": {"type": "IDENTITY", "id": "a5c91ed8e54b4d8b8feab1ece875f710", "name": "dcoltrain"}, "definition": {"start": "Get Identity", "steps": {"End Step - Success": {"displayName": "", "type": "success"}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "", "displayName": "", "nextStep": "Send Email", "type": "action", "versionNumber": 2}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "<p>email triggered by attribute change in RL SailPoint ISC</p>\n<p>&nbsp;</p>\n<p>Identity ID for affected record is $.trigger.identity.id</p>", "context": {}, "from": "", "recipientEmailList": ["dcoltrain@radiantlogic.com"], "replyTo": "", "subject": "triggered workflow in RL ISC"}, "displayName": "", "nextStep": "End Step - Success", "type": "action", "versionNumber": 2}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "a5c91ed8e54b4d8b8feab1ece875f710", "name": "dcoltrain"}, "owner": {"type": "IDENTITY", "id": "a5c91ed8e54b4d8b8feab1ece875f710", "name": "dcoltrain"}, "trigger": {"type": "EVENT", "attributes": {"attributeToFilter": "title", "filter.$": "$.changes[?(@.attribute == \"firstname\")]", "id": "idn:identity-attributes-changed"}}}
{"id": "6fdb1ed5-f179-477b-ab25-6d433971fd44", "name": "New Employee Update Emergency Contact info v5 multi-value form", "description": "This fires for each new employee and requests (using a form) emergency contact information.  This information is saved into the Identity Profile using an API call.   Note that this info could be saved into a database or some other system.  Also, if the person is in the Engineering Dept, then a confirmation email will not be sent.", "created": "2024-09-09T15:32:59.080786731Z", "modified": "2024-09-09T15:32:59.080786731Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Form", "steps": {"Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "HTTP Request", "variableA.$": "$.trigger.attributes.department", "variableB": "Engineering"}], "defaultStep": "Send Email", "description": "If the employee is in Engineering department, do not send a confirmation email.   This seems to annoy the engineers...", "displayName": "Is Dept = Engineering?", "type": "choice"}, "End Step - Success": {"displayName": "", "type": "success"}, "Form": {"actionId": "sp:forms", "attributes": {"deadline": "1h", "formDefinitionId": "a1a929df-3336-43a2-85f5-c57a1bcf9ab1", "inputForForm_formEmployeeName.$": "$.trigger.attributes.displayName", "notificationBody": "Hello {{$.trigger.attributes.displayName}},\n<br><br>\nPlease add your emergency contact information ASAP. Select the link below to enter your information. \n<br><br>\nThank you.\n<br>", "notificationSubject": "Please Update Your Emergency Contact Info", "recipient.$": "$.trigger.identity.id", "reminder": "1h", "reminderBody": "This is a reminder - Please add your emergency contact information ASAP."}, "description": "Request that the new employee add his/her  emergency contact information.", "displayName": "Form - Requests Emergency Info from new employee", "nextStep": "Compare Strings", "type": "action", "versionNumber": 1}, "HTTP Request": {"actionId": "sp:http", "attributes": {"authenticationType": null, "jsonRequestBody": {"Contact Name.$": "$.form.formData.contactName", "Contact Relationship.$": "$.form.formData.relationshipField", "Contact Telephone Number.$": "$.form.formData.telephoneNumber", "Employee Info.$": "$.form.formData.InputFormEmployeeInfo", "Full Info Dump.$": "$.trigger", "Insurance Policy Number.$": "$.form.formData.insurancePolicyNumber", "LifeInsuranc (yes/no).$": "$.form.formData.toggleLifeInsurance", "New Employee Email.$": "$.trigger.attributes.email", "New Employee Name.$": "$.trigger.attributes.displayName"}, "method": "get", "requestContentType": "json", "url": "<<PUT YOUR WebHook.site URL HERE>>", "urlParams": null}, "description": "Call an API and send the info to a system.", "displayName": "Update the System using HTTP Request", "nextStep": "End Step - Success", "type": "action", "versionNumber": 2}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "This is a confirmation email with your updated contact information:\n<br><br>\nEmployee = ${newemployee}<br>\nEmail = ${email}<br><br>\n\n\nContact Name = ${contactName}<br>\nRelationship = ${contactRelationship}<br>\nContact Phone Number = ${contactTelephoneNumber}<br><br>\n\nContact Info = ${contactInfo}<br><br>\n\nThank you for providing this important information.", "context": {"contactInfo.$": "$.form.formData.InputFormEmployeeInfo", "contactName.$": "$.form.formData.contactName", "contactRelationship.$": "$.form.formData.relationshipField", "contactTelephoneNumber.$": "$.form.formData.telephoneNumber", "email.$": "$.trigger.attributes.email", "newemployee.$": "$.trigger.attributes.displayName"}, "from": "noreply@sailpoint.com", "recipientEmailList.$": "$.trigger.attributes.email", "replyTo": "noreply@sailpoint.com", "subject": "${newemployee}, Thank you for Updating your Emergency Contact Information "}, "description": "Confirmation Message", "displayName": "Send Email Confirmation to Recipient ", "nextStep": "HTTP Request", "type": "action", "versionNumber": 2}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"attributeToFilter": "uid", "description": "A new employee was just added to the system.", "id": "idn:identity-created", "operatorToFilter": "operatorUid", "operatorUid": "StringContains", "operatorValue": "StringContains"}}}
{"id": "0ad23132-335b-48e7-adbd-aafea56b426a", "name": "Workflow Mover Access History", "description": "Workflow when an identity moves within an organization to another team, changing managers, etc.\n\nSend access history to new manager.", "created": "2024-09-09T15:32:58.883479256Z", "modified": "2024-09-09T15:32:58.883479256Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "IsJobTitleChange", "steps": {"Get Identity History": {"actionId": "sp:get-identity-history", "attributes": {"eventTypes": null, "from.$": null, "id.$": "$.trigger.identity.id"}, "description": null, "nextStep": "Send Email", "type": "action"}, "IsJobTitleChange": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Get Identity History", "variableA.$": "$.changes[?(@.attribute=='jobTitle')].attribute", "variableB": "jobTitle"}], "defaultStep": "success", "type": "choice"}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": null, "recipientId.$": null}, "type": "action"}, "success": {"type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"id": "idn:identity-attributes-changed"}}}
{"id": "7cafa32a-7b54-41b1-8e60-c5bbe1733c78", "name": "Update and Certify Access When an Identity Changes Departments", "description": "Workflow to update a user's access during a mover scenario, such as when a user changes departments or teams.", "created": "2024-09-09T15:32:58.697159627Z", "modified": "2024-09-09T15:32:58.697159627Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Wait", "steps": {"Activate Certification Campaign": {"actionId": "sp:activate-campaign", "attributes": {"id.$": "$.createCertificationCampaign.id"}, "description": "Activates the certification campaign created in the previous step.", "nextStep": "success", "type": "action", "versionNumber": 1}, "Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Get Identity", "variableA.$": "$.trigger.changes[?(@.attribute=='department')].newValue", "variableB": "Sales"}], "defaultStep": "success", "description": "Determines whether the identity's department attribute was updated to Sales. If so, the workflow proceeds. Otherwise, the workflow ends.\n\nNOTE: This template makes an assumption in later actions/nodes about the identity's former department. You could use an additional operator with branching steps for different departments for more flexibility.", "type": "choice"}, "Create Certification Campaign": {"actionId": "sp:create-campaign", "attributes": {"description": "Department Change", "duration": "1w", "emailNotificationEnabled": true, "identityId.$": "$.trigger.identity.id", "name.$": "$.trigger.identity.name", "reviewerId.$": "$.getIdentity.manager.id"}, "description": "Creates a certification campaign so that the identity's new manager can review their access, to ensure they have the access they need and don't have access they don't need.", "nextStep": "Activate Certification Campaign", "type": "action", "versionNumber": 1}, "Get Access": {"actionId": "sp:access:get", "attributes": {"accessprofiles": false, "entitlements": false, "getAccessBy": "searchQuery", "query": "name: \"Product Role\"", "roles": true}, "description": "Gets all roles with \"Product Role\" in their name.\n\nIn this example, the identity needs to retain this access despite their department move. If the access gets removed because they no longer meet the role criteria, it must be put back by this workflow. This step retrieves the access for the Manage Access step to add.", "nextStep": "Manage Access", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "Retrieves available details about the identity.", "nextStep": "Get Access", "type": "action", "versionNumber": 1}, "Get Identity 1": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.getIdentity.manager.id"}, "description": "This node is used to gather information about the user's manager to populate their email.", "nextStep": "Send Email", "type": "action", "versionNumber": 1}, "Manage Access": {"actionId": "sp:access:manage", "attributes": {"addIdentities.$": "$.trigger.identity.id", "comments": "Automatically requested as transitory access by workflows", "removeDuration": "2w", "requestType": "GRANT_ACCESS", "requestedItems.$": "$.getAccess.accessItems"}, "description": "Adds the access from the Get Access step to the identity.", "nextStep": "Get Identity 1", "type": "action", "versionNumber": 1}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "Attention, \n\nUser ${name} has recently changed departments and is now a member of the ${newDepartment}.", "context": {"name.$": "$.trigger.identityId", "newDepartment.$": "$.trigger.changes[?(@.attribute=='department')].newValue"}, "recipientEmailList.$": "$.getIdentity1.attributes.email", "recipientId.$": "$.getIdentity.manager.id", "subject": "Department Change"}, "description": "Sends an email to the identity's manager. Configure details about this email below.", "nextStep": "Create Certification Campaign", "type": "action", "versionNumber": 2}, "Wait": {"actionId": "sp:sleep", "attributes": {"duration": "1h", "type": "waitFor"}, "description": "Pauses to wait for all other provisioning activities to complete, such as automated role or access profile removals.", "nextStep": "Compare Strings", "type": "action", "versionNumber": 1}, "success": {"description": "Ends the workflow and marks it as a success.", "type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$.changes[?(@.attribute == \"department\")]", "id": "idn:identity-attributes-changed"}}}
{"id": "1c4fc2f5-f2a0-489f-a8cf-a319483e8bd7", "name": "Service Now ticket-Initiate Onboarding Process ", "description": "Workflow to begin the process of onboarding a new identity.", "created": "2024-09-09T15:32:58.505074994Z", "modified": "2024-09-09T15:32:58.505074994Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Manage ServiceNow Ticket", "steps": {"Comparar cadenas": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Send Email 2"}], "defaultStep": "Send Email 4", "type": "choice"}, "Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Send Email", "variableA.$": "$.httpRequest.statusCode", "variableB": "200"}], "defaultStep": "Send Email 1", "description": "Determines whether the HTTP Request step was successful.", "type": "choice"}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.attributes.manager.id"}, "description": "This node is used to gather information about the user's manager to populate their email.", "nextStep": "Compare Strings", "type": "action", "versionNumber": 2}, "Manage ServiceNow Ticket": {"actionId": "sp:snow", "attributes": {"action": "create"}, "nextStep": "Get Identity", "type": "action", "versionNumber": 1}, "Manage ServiceNow Ticket 1": {"actionId": "sp:snow", "attributes": {"action": "get"}, "nextStep": "Comparar cadenas", "type": "action", "versionNumber": 1}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "Dear ${manager},<br><p>An ITSM request has been submitted for a new employee named <b style=\"\">${employee}</b> Here are the details of the request:<br>${body}</p><br><p>Thank you,<br> Your Access Team</p>", "context": {"body.$": "$.httpRequest", "employee.$": "$.trigger.identity.name", "manager.$": "$.getIdentity.attributes.firstname"}, "recipientEmailList.$": "$.getIdentity.attributes.email", "replyTo": null, "subject": "New Employee"}, "description": "Sends an email to the new-hire's manager informing them of the service desk ticket creation.", "nextStep": "Wait", "type": "action", "versionNumber": 2}, "Send Email 1": {"actionId": "sp:send-email", "attributes": {"body": "The creation of the service desk ticket for physical assets failed. Please create this ticket manually and verify all other onboarding tasks for the following new identity:\n\nAttributes:\n- Email: ${email}\n- Name: ${displayName}", "context": {"email.$": "$.trigger.attributes.email", "name.$": "$.trigger.attributes.displayName"}, "recipientEmailList.$": "$.getIdentity.attributes.email", "replyTo.$": "", "subject": "Service Desk Ticket Creation Failed"}, "description": "Notifies the new identity's manager that the HTTP request failed.", "nextStep": "failure 1", "type": "action", "versionNumber": 2}, "Send Email 2": {"actionId": "sp:send-email", "attributes": {"context": {}}, "nextStep": "success", "type": "action", "versionNumber": 2}, "Send Email 4": {"actionId": "sp:send-email", "attributes": {"context": {}}, "nextStep": "failure 2", "type": "action", "versionNumber": 2}, "Wait": {"actionId": "sp:sleep", "attributes": {"duration": "2d", "type": "waitFor"}, "nextStep": "Manage ServiceNow Ticket 1", "type": "action", "versionNumber": 1}, "failure 1": {"description": "Ends the workflow in a failure state.", "failureDetails": "The automated joiner workflow failed to create a service desk ticket for physical assets.", "failureName": "Failed service desk ticket", "type": "failure"}, "failure 2": {"description": "Ends the workflow in a failure state.", "failureDetails": "The automated joiner workflow failed to create a service desk ticket for physical assets.", "failureName": "Failed service desk ticket", "type": "failure"}, "success": {"description": "Ends the workflow after all access has been requested and the certification has been activated.", "type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$[?($.attributes.department == \"sales\")]", "id": "idn:identity-created"}}}
{"id": "e3fcd4f8-a119-420b-9ed9-7e1f4d1abbe2", "name": "Service Now- ticket generation Example", "description": "Creates a ticket on every access request", "created": "2024-09-09T15:32:58.314958308Z", "modified": "2024-09-09T15:32:58.314958308Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Manage ServiceNow Ticket", "steps": {"Manage ServiceNow Ticket": {"actionId": "sp:snow", "attributes": {"action": "create"}, "nextStep": "Wait", "type": "action", "versionNumber": 1}, "Manage ServiceNow Ticket 1": {"actionId": "sp:snow", "attributes": {"action": "update", "stateUpdate": "6"}, "nextStep": "failure", "type": "action", "versionNumber": 1}, "Wait": {"actionId": "sp:sleep", "attributes": {"duration": "20m", "type": "waitFor"}, "nextStep": "Manage ServiceNow Ticket 1", "type": "action", "versionNumber": 1}, "failure": {"type": "failure"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"id": "idn:access-request-post-approval"}}}
{"id": "879e5652-ba09-4c4f-84a2-817e927d8c89", "name": "Service Now Sign Off Ticket", "description": "", "created": "2024-09-09T15:32:58.104037397Z", "modified": "2024-09-09T15:32:58.104037397Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Manage ServiceNow Ticket", "steps": {"Manage ServiceNow Ticket": {"actionId": "sp:snow", "attributes": {"action": "create"}, "nextStep": "Wait", "type": "action", "versionNumber": 1}, "Manage ServiceNow Ticket 1": {"actionId": "sp:snow", "attributes": {"action": "update", "stateUpdate": "7"}, "type": "action", "versionNumber": 1}, "Wait": {"actionId": "sp:sleep", "attributes": {"duration": "10m", "type": "waitFor"}, "nextStep": "Manage ServiceNow Ticket 1", "type": "action", "versionNumber": 1}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"id": "idn:certification-signed-off"}}}
{"id": "0f653143-eb86-4f56-9c64-c57e9f4ec19e", "name": "Separation of Duties 2023 Workflow", "description": "This workflow creates a certification campaign each time identities are found in violation. This will ensure access is always reviewed and any inappropriate items are revoked.", "created": "2024-09-09T15:32:57.905829825Z", "modified": "2024-09-09T15:32:57.905829825Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Get List of Identities", "steps": {"Activate Certification Campaign": {"actionId": "sp:activate-campaign", "attributes": {"id.$": "$.getListOfIdentities.identities"}, "nextStep": "Send Slack Message", "type": "action", "versionNumber": 1}, "Compare Strings": {"choiceList": [{"comparator": "StringMatches", "nextStep": "Activate Certification Campaign", "variableA.$": "$.getListOfIdentities.identities", "variableB.$": "$.getListOfIdentities.identities"}], "defaultStep": "success", "type": "choice"}, "Get List of Identities": {"actionId": "sp:get-identities", "attributes": {"inputQuery": null, "inputSavedSearch": "ade6188f-1743-4913-b43a-e5e8e82c7a04", "searchBy": "savedSearch"}, "description": null, "nextStep": "Compare Strings", "type": "action", "versionNumber": 2}, "Send Slack Message": {"actionId": "sp:send-slack-message", "attributes": {"id": "2c91808978ff6f2201790b33559f1d5a"}, "nextStep": "success", "type": "action", "versionNumber": 1}, "success": {"type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "SCHEDULED", "attributes": {"cronString": "0 2 * * *", "dailyTimes": ["02:00"], "frequency": "daily", "timeZone": "America/New_York"}}}
{"id": "3a71f51d-b8d3-455b-b6d6-f7c08f73d270", "name": "Remove Access When an Identity Becomes Inactive", "description": "Workflow to disable the accounts of identities that move into an \"inactive\" lifecycle state.", "created": "2024-09-09T15:32:57.336980032Z", "modified": "2024-09-09T15:32:57.336980032Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Strings", "steps": {"Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Get Identity", "variableA.$": "$.trigger.changes[?(@.attribute == \"cloudLifecycleState\")].newValue", "variableB": "Inactive"}], "defaultStep": "success", "description": "Verifies that the change in cloudLifecycleState is to \"Inactive\".", "type": "choice"}, "Get Accounts": {"actionId": "sp:get-accounts", "attributes": {"getAccountsBy": "specificIdentity", "identity.$": "$.trigger.identity.id"}, "description": "Retrieves the identity's current list of accounts.", "nextStep": "Manage Accounts", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "Retrieves available details about the identity.", "nextStep": "Get Identity 1", "type": "action", "versionNumber": 2}, "Get Identity 1": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.getIdentity.managerRef.id"}, "description": "This node is used to gather information about the user's manager to populate their email in the recipient field.", "nextStep": "Send Email 1", "type": "action", "versionNumber": 2}, "HTTP Request": {"actionId": "sp:http", "attributes": {}, "description": "Initiates a service desk ticket to ensure that physical assets are returned to the organization. This step submits the ticket to your service desk tool and returns the status of that request.\n\nEdit the details of this step to match your ITSM tool and environment.", "nextStep": "Get Accounts", "type": "action", "versionNumber": 2}, "Manage Accounts": {"actionId": "sp:manage-account", "attributes": {"accountIds.$": "$.getAccounts.accounts", "operation": "disable"}, "description": "Disables all accounts returned by the Get Accounts step.", "nextStep": "success 1", "type": "action", "versionNumber": 1}, "Send Email 1": {"actionId": "sp:send-email", "attributes": {"body": "Dear ${manager}<br><p>This email is to notify you that employee <b style=\"\">${displayName}</b> is no longer active.</p><br>Thank you,<br>Your Access Team", "context": {"displayName.$": "$.getIdentity.attributes.displayName", "manager.$": "$.getIdentity1.attributes.firstname"}, "recipientEmailList.$": "$.getIdentity1.attributes.email", "subject": "Employee Leaving"}, "description": "Notifies the users manager that the user is now inactive. This step can also be configured to notify security admins using a distribution list.", "nextStep": "HTTP Request", "type": "action", "versionNumber": 2}, "success": {"description": "Terminates the workflow when the comparison operator indicates the user was changed to any lifecycle state other than \"Inactive.\"", "type": "success"}, "success 1": {"description": "Finishes the workflow in a Success state. Some organizations may want to add a step to create a certification campaign prior to ending the workflow.", "type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]", "id": "idn:identity-attributes-changed"}}}
{"id": "569a4c9f-d75c-41d7-bf3f-c400d2227415", "name": "OnBoarding New Contractor", "description": "", "created": "2024-09-09T15:32:56.747840294Z", "modified": "2024-09-09T15:32:56.747840294Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Strings", "steps": {"Compare Strings": {"choiceList": [{"nextStep": "Send Email", "variableA.$": "$.trigger.attributes.userType", "variableB": "Employee"}], "type": "choice"}, "HTTP Request": {"actionId": "sp:http", "attributes": {"url": null}, "type": "action", "versionNumber": 1}, "Send Email": {"actionId": "sp:send-email", "attributes": {"recipientId": null}, "nextStep": "Send Email 1", "type": "action", "versionNumber": 1}, "Send Email 1": {"actionId": "sp:send-email", "attributes": {"body": "Hey, you have a new employee in your team!", "recipientId.$": "$.trigger.attributes.manager.id"}, "nextStep": "HTTP Request", "type": "action", "versionNumber": 1}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"id": "idn:identity-created"}}}
{"id": "1296ebd2-41e2-4299-a465-f5192738d8e7", "name": "Initiate Onboarding Process When a New Identity is Created", "description": "Workflow to begin the process of onboarding a new identity.", "created": "2024-09-09T15:32:55.922293871Z", "modified": "2024-09-09T15:32:55.922293871Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "HTTP Request", "steps": {"Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Send Email", "variableA.$": "$.httpRequest.statusCode", "variableB": "200"}], "defaultStep": "Send Email 1", "description": "Determines whether the HTTP Request step was successful.", "type": "choice"}, "Create Certification Campaign": {"actionId": "sp:create-campaign", "attributes": {"description": "New Hire certification - This campaign is to verify access for new hires.", "duration": "1w", "emailNotificationEnabled": true, "identityId.$": "$.trigger.identity.id", "name.$": "$.trigger.identity.name", "reviewerId.$": "$.trigger.attributes.manager.id"}, "description": "Creates a new-hire certification campaign so that the new hire's manager can review their access.", "nextStep": "success", "type": "action", "versionNumber": 1}, "Get Access": {"actionId": "sp:access:get", "attributes": {"accessprofiles": false, "entitlements": true, "getAccessBy": "searchQuery", "query": "name: \"Travel Booking\"", "roles": false}, "description": "Finds entitlements this user needs that are not currently provisioned as part of an access profile or role.\n\nThis example finds entitlements related to \"Travel Booking\". Although these entitlements are not part of an existing role or access profile, the new sales team member will need this access, so the workflow gets those entitlements for use in the Manage Access step.", "nextStep": "Manage Access", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.attributes.manager.id"}, "description": "This node is used to gather information about the user's manager to populate their email.", "nextStep": "Compare Strings", "type": "action", "versionNumber": 2}, "HTTP Request": {"actionId": "sp:http", "attributes": {"authenticationType": "OAuth"}, "nextStep": "Get Identity", "type": "action", "versionNumber": 2}, "Manage Access": {"actionId": "sp:access:manage", "attributes": {"addIdentities.$": "$.trigger.identity.id", "comments": "Automatically granted by workflows", "removeDuration": "2w", "requestType": "GRANT_ACCESS", "requestedItems.$": "$.getAccess.accessItems"}, "description": "Takes the results from the Get Access step for Travel Booking entitlements and submit it as an access request for the new identity.", "nextStep": "Create Certification Campaign", "type": "action", "versionNumber": 1}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "Dear ${manager},<br><p>An ITSM request has been submitted for a new employee named <b style=\"\">${employee}</b> Here are the details of the request:<br>${body}</p><br><p>Thank you,<br> Your Access Team</p>", "context": {"body.$": "$.httpRequest", "employee.$": "$.trigger.identity.name", "manager.$": "$.getIdentity.attributes.firstname"}, "recipientEmailList.$": "$.getIdentity.attributes.email", "replyTo": null, "subject": "New Employee"}, "description": "Sends an email to the new-hire's manager informing them of the service desk ticket creation.", "nextStep": "Get Access", "type": "action", "versionNumber": 2}, "Send Email 1": {"actionId": "sp:send-email", "attributes": {"body": "The creation of the service desk ticket for physical assets failed. Please create this ticket manually and verify all other onboarding tasks for the following new identity:\n\nAttributes:\n- Email: ${email}\n- Name: ${displayName}", "context": {"email.$": "$.trigger.attributes.email", "name.$": "$.trigger.attributes.displayName"}, "recipientEmailList.$": "$.getIdentity.attributes.email", "replyTo.$": "", "subject": "Service Desk Ticket Creation Failed"}, "description": "Notifies the new identity's manager that the HTTP request failed.", "nextStep": "failure 1", "type": "action", "versionNumber": 2}, "failure 1": {"description": "Ends the workflow in a failure state.", "failureDetails": "The automated joiner workflow failed to create a service desk ticket for physical assets.", "failureName": "Failed service desk ticket", "type": "failure"}, "success": {"description": "Ends the workflow after all access has been requested and the certification has been activated.", "type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$[?($.attributes.department == \"sales\")]", "id": "idn:identity-created"}}}
{"id": "2533cd7a-4c53-4d7c-97d0-314a0c9582d8", "name": "Workflow Mover Campaign", "description": "Workflow when an identity moves within an organization to another team, changing managers, etc.", "created": "2024-09-09T15:32:55.163458041Z", "modified": "2024-09-09T15:32:55.163458041Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "IsJobTitleChange", "steps": {"ActivateCampaign": {"actionId": "sp:activate-campaign", "attributes": {"id.$": "$.id"}, "description": "Activates a campaign.", "nextStep": "EndState", "type": "action", "versionNumber": 1}, "CreateCampaign": {"actionId": "sp:create-campaign", "attributes": {"description": "This is a test campaign generated by a workflow", "duration": "24h", "emailNotificationEnabled": true, "identityId.$": "$.identity.id", "name": "Workflow Generated Campaign", "recommendationsEnabled": true}, "description": "Creates a campaign.", "nextStep": "IsCampaignGeneratedComplete", "type": "action", "versionNumber": 1}, "EndState": {"description": "This is the final state.", "type": "success"}, "IsCampaignGeneratedComplete": {"choiceList": [{"comparator": "StringEquals", "nextStep": "EndState", "variableA.$": "$.status", "variableB": "COMPLETED"}], "defaultStep": "ActivateCampaign", "description": "Checks to see if the status of the campaign is COMPLETED or STAGED. STAGED will go to activate campaign before ending.", "type": "choice"}, "IsJobTitleChange": {"choiceList": [{"comparator": "StringEquals", "nextStep": "CreateCampaign", "variableA.$": "$.changes[?(@.attribute=='jobTitle')].attribute", "variableB": "jobTitle"}], "defaultStep": "Send Email", "type": "choice"}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "The workflow Failed", "recipientId": "2c91808978ff6f2201790b33559f1d5a", "subject": "Failure"}, "description": "Send email", "nextStep": "EndState", "type": "action", "versionNumber": 1}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"id": "idn:identity-attributes-changed"}}}
{"id": "c629255e-93ee-4f52-801d-aa020c8890f1", "name": "Workflow Mover Campaign Test", "description": "Workflow when identities move between teams - create certification", "created": "2024-09-09T15:32:54.95461501Z", "modified": "2024-09-09T15:32:54.95461501Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Strings", "steps": {"Activate Certification Campaign": {"actionId": "sp:activate-campaign", "attributes": {"id.$": "$.createCertificationCampaign.id"}, "description": "Activate the Campaign", "nextStep": "success", "type": "action"}, "Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "success", "variableA.$": "$.trigger.changes[?(@.attribute == 'jobTitle')].oldValue", "variableB.$": "$.trigger.changes[?(@.attribute == 'jobTitle')].newValue"}], "defaultStep": "Create Certification Campaign", "type": "choice"}, "Create Certification Campaign": {"actionId": "sp:create-campaign", "attributes": {"description": "Workflows-Generated Campaign for job title changes", "duration": "24h", "identityId.$": "$.trigger.identity.id", "name": "Workflows-Generated Campaign"}, "description": "This will create the campaign", "nextStep": "Activate Certification Campaign", "type": "action"}, "success": {"type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"id": "idn:identity-attributes-changed"}}}
{"id": "f9d24f0e-cc25-49af-a704-4d3287351c74", "name": "Movement", "description": "", "created": "2024-09-09T15:32:54.49261567Z", "modified": "2024-09-09T15:32:54.49261567Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Get Accounts", "steps": {"Get Accounts": {"actionId": "sp:get-accounts", "attributes": {}, "nextStep": "Manage Access", "type": "action", "versionNumber": 1}, "Manage Access": {"actionId": "sp:access:manage", "attributes": {"requestType": "REVOKE_ACCESS"}, "nextStep": "Manage ServiceNow Ticket", "type": "action", "versionNumber": 1}, "Manage ServiceNow Ticket": {"actionId": "sp:snow", "attributes": {}, "type": "action", "versionNumber": 1}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EXTERNAL", "attributes": {}}}
{"id": "9e3b2d6f-5577-488c-8aa2-5bda909a6e6c", "name": "Leaver Workflow", "description": "Workflow to disable the accounts of identities that move into an \"inactive\" lifecycle state.", "created": "2024-09-09T15:32:53.791670279Z", "modified": "2024-09-09T15:32:53.791670279Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Strings", "steps": {"Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Get Identity", "variableA.$": "$.trigger.changes[?(@.attribute == \"cloudLifecycleState\")].newValue", "variableB": "Inactive"}], "defaultStep": "success", "description": "Verifies that the change in cloudLifecycleState is to \"Inactive\".", "type": "choice"}, "Get Accounts": {"actionId": "sp:get-accounts", "attributes": {"getAccountsBy": "specificIdentity", "identity.$": "$.trigger.identity.id"}, "description": "Retrieves the identity's current list of accounts.", "nextStep": "Manage Accounts", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "Retrieves available details about the identity.", "nextStep": "Get Identity 1", "type": "action", "versionNumber": 2}, "Get Identity 1": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.getIdentity.managerRef.id"}, "description": "This node is used to gather information about the user's manager to populate their email in the recipient field.", "nextStep": "Send Email 1", "type": "action", "versionNumber": 2}, "HTTP Request": {"actionId": "sp:http", "attributes": {}, "description": "Initiates a service desk ticket to ensure that physical assets are returned to the organization. This step submits the ticket to your service desk tool and returns the status of that request.\n\nEdit the details of this step to match your ITSM tool and environment.", "nextStep": "Get Accounts", "type": "action", "versionNumber": 2}, "Manage Accounts": {"actionId": "sp:manage-account", "attributes": {"accountIds.$": "$.getAccounts.accounts", "operation": "disable"}, "description": "Disables all accounts returned by the Get Accounts step.", "nextStep": "success 1", "type": "action", "versionNumber": 1}, "Send Email 1": {"actionId": "sp:send-email", "attributes": {"body": "Dear ${manager}<br><p>This email is to notify you that employee <b style=\"\">${displayName}</b> is no longer active.</p><br>Thank you,<br>Your Access Team", "context": {"displayName.$": "$.getIdentity.attributes.displayName", "manager.$": "$.getIdentity1.attributes.firstname"}, "recipientEmailList.$": "$.getIdentity1.attributes.email", "subject": "Employee Leaving"}, "description": "Notifies the users manager that the user is now inactive. This step can also be configured to notify security admins using a distribution list.", "nextStep": "HTTP Request", "type": "action", "versionNumber": 2}, "success": {"description": "Terminates the workflow when the comparison operator indicates the user was changed to any lifecycle state other than \"Inactive.\"", "type": "success"}, "success 1": {"description": "Finishes the workflow in a Success state. Some organizations may want to add a step to create a certification campaign prior to ending the workflow.", "type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]", "id": "idn:identity-attributes-changed"}}}
{"id": "2124d6dd-7fc1-42ec-8451-918f456814e1", "name": "Incomplete Campaign Escalation", "description": "", "created": "2024-09-09T15:32:53.490741235Z", "modified": "2024-09-09T15:32:53.490741235Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Strings", "steps": {"Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Create Certification Campaign", "variableA.$": "$.trigger.campaign.status", "variableB": "INCOMPLETE"}], "defaultStep": "failure", "type": "choice"}, "Create Certification Campaign": {"actionId": "sp:create-campaign", "attributes": {"activateUponCreation": true, "description": "Automatically triggered campaign due to uncertified items", "duration": "1w", "emailNotificationEnabled": true, "name": "Escalation for Incomplete Campaign", "recommendationsEnabled": true, "reviewerCertificationType": "IDENTITY", "reviewerId.$": "$.trigger.campaign.campaignOwner.id.manager", "reviewerIdentitiesToCertify.$": "$.trigger.campaign.id", "type": "REVIEWER_IDENTITY", "undecidedAccess": true}, "description": null, "nextStep": "success", "type": "action", "versionNumber": 2}, "failure": {"failureName": "Failure", "type": "failure"}, "success": {"type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"id": "idn:campaign-ended"}}}
{"id": "9fcb441b-52f6-40f8-9b1f-342acf94068e", "name": "Disable Outliers", "description": "A nine-step workflow triggered when an outlier is detected with a score above 0.9. When the score is this high, all accounts for the identity are disabled and an email notification is sent to their manager to review access and investigate the exceptions.", "created": "2024-09-09T15:32:52.53344359Z", "modified": "2024-09-09T15:32:52.53344359Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Numbers", "steps": {"Compare Numbers": {"choiceList": [{"comparator": "NumericGreaterThanEquals", "nextStep": "Get Identity", "variableA.$": "$.trigger.score", "variableB": 0.9}], "defaultStep": "success", "description": "The workflow triggers at or above 0.9. This comparator checks the value to ensure it is at or above 0.9.", "type": "choice"}, "Get Access": {"actionId": "sp:access:get", "attributes": {"accessprofiles": true, "entitlements": true, "getAccessBy": "specificIdentity", "identityToReturn.$": "$.trigger.identity.id", "roles": true}, "description": "This action returns all access associated with the outlier identity.", "nextStep": "Get Identity 1", "type": "action", "versionNumber": 1}, "Get Accounts": {"actionId": "sp:get-accounts", "attributes": {"getAccountsBy": "specificIdentity", "identity.$": "$.trigger.identity.id"}, "description": "This action is used to gather all the accounts associated with the identity. In this workflow, the accounts will be disabled until a review can be conducted.", "nextStep": "Send Email", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "This action returns attributes associated with the identity that triggered the outlier score.", "nextStep": "Get Access", "type": "action", "versionNumber": 2}, "Get Identity 1": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.getIdentity.managerRef.id"}, "description": "This action returns the outlier identity's manager's name and attributes.", "nextStep": "Get Accounts", "type": "action", "versionNumber": 2}, "Manage Accounts": {"actionId": "sp:manage-account", "attributes": {"accountIds.$": "$.getAccounts.accounts", "operation": "disable"}, "description": "This action disables all account found in the prior action \"Get Accounts\".", "nextStep": "success 1", "type": "action", "versionNumber": 1}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "Dear ${manager},<br><p> The SailPoint AI Engine has detected a user that has outlier access resulting in excessive risk. This identity, <b style=\"\"><u style=\"\">${user}</b> </u>, is your direct report and has an outlier score of <b style=\"\"><font color=\"#993300\">${score}</b></font>.<br><br>Please note that <font color=\"#993300\"><b style=\"\"><i style=\"\">all accounts</font></b></i> for <b style=\"\">${user}</b> have been disabled until a full forensic audit can be completed. A complete listing of all access can be found below.<br></p><br>Thank you,<br>Your Security & Compliance Team.<br><p><b style=\"\"><i style=\"\">Access:<br>${access}</b></i></p>", "context": {"access.$": "$.getAccess.accessItems", "manager.$": "$.getIdentity1.attributes.displayName", "score.$": "$.trigger.score", "user.$": "$.getIdentity.attributes.displayName"}, "recipientEmailList.$": "$.getIdentity1.attributes.email", "subject": "Outlier - Excessive Risk notification"}, "description": "This action sends an email notification to the outlier identity's manager. The email informs the manager that the identity had an outlier score that was deemed \"Excessive Risk\" and action has been taken to disable all accounts until a full security review can be completed.", "nextStep": "Manage Accounts", "type": "action", "versionNumber": 2}, "success": {"description": "The outlier score was not at or above 0.9. No further action is required.", "type": "success"}, "success 1": {"description": "This workflow has completed successfully.", "type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$[?(@.score >= 0.9)]", "id": "iai:outlier-detected"}}}
{"id": "0a3fe427-61ef-4aca-b962-cab42d1876ab", "name": "Disable Accounts for Detected Outlier Identities (0.9+)a", "description": "A nine-step workflow to trigger when a detected outlier score is at or above 0.9. When the score is this high, all accounts for the identity are disabled and an email notification is sent to their manager to review access and investigate the exceptions.", "created": "2024-09-09T15:32:51.816659986Z", "modified": "2024-09-09T15:32:51.816659986Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Numbers", "steps": {"Compare Numbers": {"choiceList": [{"comparator": "NumericGreaterThanEquals", "nextStep": "Get Identity", "variableA.$": "$.trigger.score", "variableB": 0.9}], "defaultStep": "success", "description": "The workflow triggers at or above 0.9. This comparator checks the value to ensure it is at or above 0.9.", "type": "choice"}, "Get Access": {"actionId": "sp:access:get", "attributes": {"accessprofiles": true, "entitlements": true, "getAccessBy": "specificIdentity", "identityToReturn.$": "$.trigger.identity.id", "roles": true}, "description": "This action returns all access associated with the outlier identity.", "nextStep": "Get Identity 1", "type": "action", "versionNumber": 1}, "Get Accounts": {"actionId": "sp:get-accounts", "attributes": {"getAccountsBy": "specificIdentity", "identity.$": "$.trigger.identity.id"}, "description": "This action is used to gather all the accounts associated with the identity. In this workflow, the accounts will be disabled until a review can be conducted.", "nextStep": "Send Email", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "This action returns attributes associated with the identity that triggered the outlier score.", "nextStep": "Get Access", "type": "action", "versionNumber": 2}, "Get Identity 1": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.getIdentity.managerRef.id"}, "description": "This action returns the outlier identity's manager's name and attributes.", "nextStep": "Get Accounts", "type": "action", "versionNumber": 2}, "Manage Accounts": {"actionId": "sp:manage-account", "attributes": {"accountIds.$": "$.getAccounts.accounts", "operation": "disable"}, "description": "This action disables all account found in the prior action \"Get Accounts\".", "nextStep": "success 1", "type": "action", "versionNumber": 1}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "Dear ${manager},<br><p> The SailPoint AI Engine has detected a user that has outlier access resulting in excessive risk. This identity, <b style=\"\"><u style=\"\">${user}</b> </u>, is your direct report and has an outlier score of <b style=\"\"><font color=\"#993300\">${score}</b></font>.<br><br>Please note that <font color=\"#993300\"><b style=\"\"><i style=\"\">all accounts</font></b></i> for <b style=\"\">${user}</b> have been disabled until a full forensic audit can be completed. A complete listing of all access can be found below.<br></p><br>Thank you,<br>Your Security & Compliance Team.<br><p><b style=\"\"><i style=\"\">Access:<br>${access}</b></i></p>", "context": {"access.$": "$.getAccess.accessItems", "manager.$": "$.getIdentity1.attributes.displayName", "score.$": "$.trigger.score", "user.$": "$.getIdentity.attributes.displayName"}, "recipientEmailList.$": "$.getIdentity1.attributes.email", "subject": "Outlier - Excessive Risk notification"}, "description": "This action sends an email notification to the outlier identity's manager. The email informs the manager that the identity had an outlier score that was deemed \"Excessive Risk\" and action has been taken to disable all accounts until a full security review can be completed.", "nextStep": "Manage Accounts", "type": "action", "versionNumber": 2}, "success": {"description": "The outlier score was not at or above 0.9. No further action is required.", "type": "success"}, "success 1": {"description": "This workflow has completed successfully.", "type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$[?(@.score >= 0.9)]", "id": "iai:outlier-detected"}}}
{"id": "320fb2fa-6343-4a5d-8e18-9ef97331d9ba", "name": "Template: Create and Activate a Certification Campaign", "description": "Create and activate a certification campaign for every identity that has changed departments.", "created": "2024-09-09T15:32:51.162553615Z", "modified": "2024-09-09T15:32:51.162553615Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Strings", "steps": {"Compare Strings": {"choiceList": [{"comparator": "StringMatches", "nextStep": "Create Certification Campaign", "variableA.$": "$.trigger.changes[?(@.attribute == \"department\")].attribute", "variableB": "department"}], "defaultStep": "success", "description": "Only create the campaign for identities who change departments.  This doesn't look for a specific department.", "type": "choice"}, "Create Certification Campaign": {"actionId": "sp:create-campaign", "attributes": {"duration": "2w", "identityId.$": "$.trigger.identity.id", "name.$": "$.trigger.identity.name"}, "description": "Create an identity certification campaign any identity that changed departments.  Name it after the identity so we know who is being certified.", "nextStep": "Get Identity", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "Get the identity's attributes so we can look up their manager.", "nextStep": "Get Identity 2", "type": "action", "versionNumber": 2}, "Get Identity 2": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.getIdentity.managerRef.id"}, "description": "This node is used to gather information about the user's manager to populate their email.", "nextStep": "Send Email 1", "type": "action", "versionNumber": 2}, "Send Email 1": {"actionId": "sp:send-email", "attributes": {"body": "Dear ${recipName}, <br><p>This notification is to inform you that <b style=\"\">${displayName}</b> has recently changed departments. </p> <br><p>A Certification campaign named <b style=\"\">${campaignName} </b>has been generated for your review. </p> <br><p> Thank you <br>Security & Compliance</p>", "context": {"campaignName.$": "$.createCertificationCampaign.attributes.name", "displayName.$": "$.getIdentity.attributes.displayName", "recipName.$": "$.getIdentity2.attributes.displayName"}, "recipientEmailList.$": "$.getIdentity2.attributes.email", "replyTo": null, "subject": "Direct Report department change"}, "description": "Send an email to the identity's manager so they know there is a certification campaign pending for their employee that they need to complete.", "nextStep": "success 1", "type": "action", "versionNumber": 2}, "success": {"description": "Don't do anything else, since the identity didn't change departments.", "type": "success"}, "success 1": {"type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$.changes[?(@.attribute == \"department\")]", "id": "idn:identity-attributes-changed"}}}
{"id": "8c2900a9-19d6-4c2d-8a47-2c78b8b6373a", "name": "Template: Create and Activate a Certification Campaign time bound", "description": "Create and activate a certification campaign for every identity that has changed departments.", "created": "2024-09-09T15:32:50.538299618Z", "modified": "2024-09-09T15:32:50.538299618Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Compare Strings", "steps": {"Activate Certification Campaign": {"actionId": "sp:activate-campaign", "attributes": {"id.$": "$.createCertificationCampaign.id"}, "description": "Activate the campaign we created.", "nextStep": "Get Identity", "type": "action", "versionNumber": 1}, "Compare Strings": {"choiceList": [{"comparator": "StringMatches", "nextStep": "Create Certification Campaign", "variableA.$": "$.trigger.changes[?(@.attribute == \"department\")].attribute", "variableB": "department"}], "defaultStep": "success", "description": "Only create the campaign for identities who change departments.  This doesn't look for a specific department.", "type": "choice"}, "Create Certification Campaign": {"actionId": "sp:create-campaign", "attributes": {"duration": "2w", "identityId.$": "$.trigger.identity.id", "name.$": "$.trigger.identity.name"}, "description": "Create an identity certification campaign any identity that changed departments.  Name it after the identity so we know who is being certified.", "nextStep": "Activate Certification Campaign", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "Get the identity's attributes so we can look up their manager.", "nextStep": "Get Identity 1", "type": "action", "versionNumber": 1}, "Get Identity 1": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.getIdentity.manager.id"}, "description": "This node is used to gather information about the user's manager to populate their email.", "nextStep": "Send Email 1", "type": "action", "versionNumber": 1}, "Send Email 1": {"actionId": "sp:send-email", "attributes": {"body.$": "$.trigger.identity.name", "context": {}, "recipientEmailList.$": "$.getIdentity1.attributes.email", "subject": "New certification campaign generated for your employee"}, "description": "Send an email to the identity's manager so they know there is a certification campaign pending for their employee that they need to complete.", "nextStep": "success 1", "type": "action", "versionNumber": 2}, "success": {"description": "Don't do anything else, since the identity didn't change departments.", "type": "success"}, "success 1": {"type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"id": "idn:identity-attributes-changed"}}}
{"id": "73fbba11-0d85-4e69-8b77-a675a357edde", "name": "Campaign reminder v2", "description": "This campaign reminder will send a notification to outstanding reviewers every day at 6am.  This covers up to the first 10 reviewers.  This workflow can be duplicated to support as many reviewers as needed.", "created": "2024-09-09T15:32:50.133462163Z", "modified": "2024-09-09T15:32:50.133462163Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "HTTP Request", "steps": {"HTTP Request": {"actionId": "sp:http", "attributes": {"authenticationType": "OAuth", "method": "get", "oAuthClientId": "f4a69d2d1f874bce8aabf72c84644614", "oAuthClientSecret": "", "oAuthTokenUrl": "https://company1072-poc.api.identitynow-demo.com/oauth/token", "requestContentType": "json", "url": "https://company1072-poc.api.identitynow-demo.com/v3/certifications", "urlParams": "filters:phase eq \"ACTIVE\" and completed eq false"}, "description": "Get current certification reviewers for any certifications that are still active.", "nextStep": "Send Email", "type": "action", "versionNumber": 2}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "Please log into SailPoint IdentityNow and review your pending certification decisions.", "context": {}, "from": "", "recipientEmailList.$": "$.hTTPRequest.body[1,2,3,4,5,6,7,8,9].reviewer.email", "replyTo": "no-reply@sailpoint.com", "subject": "Campaign decision reminder"}, "description": "Send Notification email to handle certification decisions that are outstanding.  Supports sending to 10 people.", "nextStep": "success", "type": "action", "versionNumber": 2}, "success": {"type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "SCHEDULED", "attributes": {"cronString": "0 * * * *", "frequency": "cronSchedule", "timeZone": "US/Eastern"}}}
{"id": "2c0b484f-a33e-4faf-8694-2c24cd5f490c", "name": "Bills Update and certify mover scenario", "description": "Workflow to update a user's access during a mover scenario, such as when a user changes departments or teams.", "created": "2024-09-09T15:32:48.918613102Z", "modified": "2024-09-09T15:32:48.918613102Z", "modifiedBy": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "definition": {"start": "Wait", "steps": {"Compare Strings": {"choiceList": [{"comparator": "StringEquals", "nextStep": "Get Identity", "variableA.$": "$.trigger.changes[?(@.attribute=='department')].newValue", "variableB": "Sales"}], "defaultStep": "success", "description": "Determines whether the identity's department attribute was updated to Sales. If so, the workflow proceeds. Otherwise, the workflow ends.\n\nNOTE: This template makes an assumption in later actions/nodes about the identity's former department. You could use an additional operator with branching steps for different departments for more flexibility.", "type": "choice"}, "Create Certification Campaign": {"actionId": "sp:create-campaign", "attributes": {"description": "Department Change", "duration": "1w", "emailNotificationEnabled": true, "identityId.$": "$.trigger.identity.id", "name.$": "$.trigger.identity.name", "reviewerId.$": "$.getIdentity.managerRef.id"}, "description": "Creates a certification campaign so that the identity's new manager can review their access, to ensure they have the access they need and don't have access they don't need.", "nextStep": "success", "type": "action", "versionNumber": 1}, "Get Access": {"actionId": "sp:access:get", "attributes": {"accessprofiles": false, "entitlements": false, "getAccessBy": "searchQuery", "query": "name: \"Product Role\"", "roles": true}, "description": "Gets all roles with \"Product Role\" in their name.\n\nIn this example, the identity needs to retain this access despite their department move. If the access gets removed because they no longer meet the role criteria, it must be put back by this workflow. This step retrieves the access for the Manage Access step to add.", "nextStep": "Manage Access", "type": "action", "versionNumber": 1}, "Get Identity": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.trigger.identity.id"}, "description": "Retrieves available details about the identity.", "nextStep": "Get Access", "type": "action", "versionNumber": 2}, "Get Identity 1": {"actionId": "sp:get-identity", "attributes": {"id.$": "$.getIdentity.managerRef.id"}, "description": "This node is used to gather information about the user's manager to populate their email in \"Recipient\"", "nextStep": "Send Email", "type": "action", "versionNumber": 2}, "Manage Access": {"actionId": "sp:access:manage", "attributes": {"addIdentities.$": "$.trigger.identity.id", "comments": "Automatically requested as transitory access by workflows", "removeDuration": "2w", "requestType": "GRANT_ACCESS", "requestedItems.$": "$.getAccess.accessItems"}, "description": "Adds the access from the Get Access step to the identity.", "nextStep": "Get Identity 1", "type": "action", "versionNumber": 1}, "Send Email": {"actionId": "sp:send-email", "attributes": {"body": "Attention, <br><p>User <b style=\"\">${name} </b>has recently changed departments </p><br>Thank you,<br>Your Access Team", "context": {"name.$": "$.getIdentity.attributes.displayName"}, "recipientEmailList.$": "$.getIdentity1.attributes.email", "recipientId.$": "$.getIdentity.managerRef.id", "subject": "Department Change"}, "description": "Sends an email to the identity's manager. Configure details about this email below.", "nextStep": "Create Certification Campaign", "type": "action", "versionNumber": 2}, "Wait": {"actionId": "sp:sleep", "attributes": {"duration": "1h", "type": "waitFor"}, "description": "Pauses to wait for all other provisioning activities to complete, such as automated role or access profile removals.", "nextStep": "Compare Strings", "type": "action", "versionNumber": 1}, "success": {"description": "Ends the workflow and marks it as a success.", "type": "success"}}}, "enabled": false, "executionCount": 0, "failureCount": 0, "creator": {"type": "IDENTITY", "id": "95a9b731946541a5b95728d054f880ca", "name": "slpt.support"}, "owner": {"type": "IDENTITY", "id": "9ed56b09b0f548ff888d2f73783dbd3b", "name": "adam.creaney"}, "trigger": {"type": "EVENT", "attributes": {"filter.$": "$.changes[?(@.attribute == \"department\")]", "id": "idn:identity-attributes-changed"}}}
