{"id": "idn:access-request-post-approval", "name": "Access Request Decision", "description": "An access request was approved or denied.", "type": "EVENT", "inputExample": {"accessRequestId": "4b4d982dddff4267ab12f0f1e72b5a6d", "requestedBy": {"id": "2c91808b6ef1d43e016efba0ce470906", "name": "Adam Admin", "type": "IDENTITY"}, "requestedFor": {"id": "2c91808b6ef1d43e016efba0ce470909", "name": "Ed Engineer", "type": "IDENTITY"}, "requestedItemsStatus": [{"accessRequestContext": {"contextAttributes": [{"attribute": "department", "derived": false, "value": "Engineering"}, {"attribute": "displayName", "derived": false, "value": ["John"]}]}, "approvalInfo": [{"approvalComment": " this is an approval comment", "approvalDecision": "APPROVED", "approver": {"id": "2c91808b6ef1d43e016efba0ce470910", "name": "Stephen Austin", "type": "IDENTITY"}, "approverName": "Stephen.Austin", "reauthorizationRequired": true, "reauthorizationSignature": "2c91982dddff4267ab12f0f1e72b0910"}], "clientMetadata": {"applicationName": "My application"}, "comment": "requester comments", "description": "Engineering Access", "id": "2c91808b6ef1d43e016efba0ce470904", "name": "Engineering Access", "operation": "Add", "type": "ACCESS_PROFILE"}]}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:AccessRequestPreApprovalInput", "definitions": {"record:AccessRequestPreApprovalInput": {"additionalProperties": true, "properties": {"accessRequestId": {"type": "string"}, "requestedBy": {"$ref": "#/definitions/record:requestByIdentityRef"}, "requestedFor": {"$ref": "#/definitions/record:requestForIdentityRef"}, "requestedItemsStatus": {"items": {"$ref": "#/definitions/record:requestedItemsStatusRef"}, "type": "array"}}, "required": ["accessRequestId", "requestedFor", "requestedItemsStatus", "requestedBy"], "type": "object"}, "record:accessRequestContextRef": {"additionalProperties": true, "properties": {"contextAttributes": {"items": {"$ref": "#/definitions/record:contextAttributesRef"}, "type": "array"}}, "required": ["contextAttributes"], "type": "object"}, "record:approvalInfo": {"additionalProperties": true, "optional": ["approvalComment", "reauthorizationRequired", "reauthorizationSignature"], "properties": {"approvalComment": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "approvalDecision": {"type": "string"}, "approver": {"$ref": "#/definitions/record:approverIdentityRef"}, "approverName": {"type": "string"}, "reauthorizationRequired": {"type": "boolean"}, "reauthorizationSignature": {"oneOf": [{"type": "null"}, {"type": "string"}]}}, "required": ["approvalDecision", "approverName", "approver"], "type": "object"}, "record:approverIdentityRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "type": "object"}, "record:contextAttributesRef": {"additionalProperties": true, "optional": ["value"], "properties": {"attribute": {"type": "string"}, "derived": {"type": "boolean"}, "value": {"oneOf": [{"type": "null"}, {"type": "object"}]}}, "required": ["attribute", "derived"], "type": "object"}, "record:requestByIdentityRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["type", "id", "name"], "type": "object"}, "record:requestForIdentityRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "type": "object"}, "record:requestedItemsStatusRef": {"additionalProperties": true, "optional": ["description", "comment", "clientMetadata", "accessRequestContext"], "properties": {"accessRequestContext": {"OneOf": [{"type": "null"}, {"$ref": "#/definitions/record:accessRequestContextRef"}]}, "approvalInfo": {"items": {"$ref": "#/definitions/record:approvalInfo"}, "type": "array"}, "clientMetadata": {"oneOf": [{"type": "null"}, {"additionalProperties": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "object"}]}, "comment": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "description": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "id": {"type": "string"}, "name": {"type": "string"}, "operation": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type", "operation", "approvalInfo"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:account-aggregation-completed", "name": "Account Aggregation Completed", "description": "An account aggregation completed, was terminated, or failed.", "type": "EVENT", "inputExample": {"completed": "2020-06-29T22:02:04.090Z", "errors": [], "source": {"id": "4e4d982dddff4267ab12f0f1e72b5a6d", "name": "Corporate Active Directory", "type": "SOURCE"}, "started": "2020-06-29T22:01:50.474Z", "stats": {"added": 4, "changed": 6, "removed": 3, "scanned": 200, "unchanged": 190}, "status": "Success", "warnings": ["Account skipped"]}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:AccountAggregationCompletedInput", "definitions": {"record:AccountAggregationCompletedInput": {"additionalProperties": true, "properties": {"completed": {"type": "string"}, "errors": {"oneOf": [{"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}, {"type": "null"}]}, "source": {"$ref": "#/definitions/record:sourceRef"}, "started": {"type": "string"}, "stats": {"$ref": "#/definitions/record:AccountAggregationCompletedStats"}, "status": {"type": "string"}, "warnings": {"oneOf": [{"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}, {"type": "null"}]}}, "required": ["source", "status", "started", "completed", "errors", "warnings", "stats"], "type": "object"}, "record:AccountAggregationCompletedStats": {"additionalProperties": true, "properties": {"added": {"maximum": 2147483647, "minimum": 0, "type": "number"}, "changed": {"maximum": 2147483647, "minimum": 0, "type": "number"}, "removed": {"maximum": 2147483647, "minimum": 0, "type": "number"}, "scanned": {"maximum": 2147483647, "minimum": 0, "type": "number"}, "unchanged": {"maximum": 2147483647, "minimum": 0, "type": "number"}}, "required": ["scanned", "unchanged", "changed", "added", "removed"], "type": "object"}, "record:sourceRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["type", "id", "name"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:aggregation-accounts-collected", "name": "Accounts Collected for Aggregation", "description": "New, changed, and deleted accounts have been gathered during an aggregation and are being processed.", "type": "EVENT", "inputExample": {"completed": "2020-06-29T22:02:04.090Z", "errors": [], "source": {"id": "4e4d982dddff4267ab12f0f1e72b5a6d", "name": "Corporate Active Directory", "type": "SOURCE"}, "started": "2020-06-29T22:01:50.474Z", "stats": {"added": 4, "changed": 6, "removed": 3, "scanned": 200, "unchanged": 190}, "status": "Success", "warnings": ["Account skipped"]}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:AggregationAccountsCollectedInput", "definitions": {"record:AggregationAccountsCollectedInput": {"additionalProperties": true, "properties": {"completed": {"type": "string"}, "errors": {"oneOf": [{"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}, {"type": "null"}]}, "source": {"$ref": "#/definitions/record:sourceRef"}, "started": {"type": "string"}, "stats": {"$ref": "#/definitions/record:AggregationAccountsCollectedStats"}, "status": {"type": "string"}, "warnings": {"oneOf": [{"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}, {"type": "null"}]}}, "required": ["source", "status", "started", "completed", "errors", "warnings", "stats"], "type": "object"}, "record:AggregationAccountsCollectedStats": {"additionalProperties": true, "properties": {"added": {"maximum": 2147483647, "minimum": 0, "type": "number"}, "changed": {"maximum": 2147483647, "minimum": 0, "type": "number"}, "removed": {"maximum": 2147483647, "minimum": 0, "type": "number"}, "scanned": {"maximum": 2147483647, "minimum": 0, "type": "number"}, "unchanged": {"maximum": 2147483647, "minimum": 0, "type": "number"}}, "required": ["scanned", "unchanged", "changed", "added", "removed"], "type": "object"}, "record:sourceRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["type", "id", "name"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:activate-campaign", "name": "Activate Certification Campaign", "description": "Activates a certification campaign by its ID.", "type": "ACTION", "formFields": [{"helpText": "The ID of the campaign to activate.", "label": "Campaign ID", "name": "id", "required": true, "type": "text"}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:pag-active-directory", "name": "Active Directory", "description": "View and manage objects in Active Directory.", "type": "ACTION", "formFields": [{"config": {"max": "1"}, "dynamicConfig": {"method": "GET", "path": "connector-instances?filters=requiredCommands ca \"pag:active_directory:create_group\"", "service": "sp-connect"}, "helpText": "Select a Privilege Gateway cluster.", "label": "Privilege Cluster", "name": "pagInstanceId", "required": true, "type": "pagInstancePicker", "valueOnly": true}, {"config": {"max": "1"}, "dynamicConfig": {"method": "GET", "optionConfig": {"filterKey": "type", "filterRegex": "^pag:active_directory", "label": "displayName", "source": "$.customCommands[*]", "value": "type"}, "path": "managed-connector-specifications/{id}", "service": "sp-connect"}, "helpText": "Select a command.", "label": "Command", "name": "pagCommandType", "required": true, "type": "pagCommandPicker", "valueOnly": true}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": true, "isSimulationEnabled": true}
{"id": "sp:approve-request", "name": "Approve Access Request", "description": "Selects an access request and approves it.", "type": "ACTION", "formFields": [{"helpText": "The technical ID of the access request to approve.", "label": "Access Request ID", "name": "approvalId", "required": true, "type": "text"}, {"helpText": "A comment to include with the request\u2019s approval.", "label": "Comment", "name": "comment", "required": true, "type": "textarea"}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "idn:campaign-activated", "name": "Campaign Activated", "description": "Triggered when a campaign is activated.", "type": "EVENT", "inputExample": {"campaign": {"campaignOwner": {"displayName": "William Wilson", "email": "william.wilson@example.com", "id": "37f080867702c1910177031320c40n27"}, "created": "2021-02-16T03:04:45.815Z", "deadline": "2021-03-16T03:04:45.815Z", "description": "Audit access for all employees.", "id": "2c91808576f886190176f88cac5a0010", "modified": null, "name": "Manager Access Campaign", "status": "ACTIVE", "type": "MANAGER"}}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:CampaignActivatedPayload", "definitions": {"enum:GeneratedCampaignStatuses": {"enum": ["ACTIVE"]}, "enum:type": {"enum": ["MANAGER", "SOURCE_OWNER", "SEARCH", "ROLE_COMPOSITION", "IDENTITY", "UNCORRELATED_ACCOUNT", "MACHINE_ACCOUNT"]}, "record:Campaign": {"additionalProperties": true, "optional": ["modified"], "properties": {"campaignOwner": {"$ref": "#/definitions/record:CampaignOwner"}, "created": {"type": "string"}, "deadline": {"type": "string"}, "description": {"type": "string"}, "id": {"type": "string"}, "modified": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "name": {"type": "string"}, "status": {"$ref": "#/definitions/enum:GeneratedCampaignStatuses"}, "type": {"$ref": "#/definitions/enum:type"}}, "required": ["id", "name", "description", "created", "deadline", "type", "campaignOwner", "status"], "type": "object"}, "record:CampaignActivatedPayload": {"additionalProperties": true, "properties": {"campaign": {"$ref": "#/definitions/record:Campaign"}}, "required": ["campaign"], "type": "object"}, "record:CampaignOwner": {"additionalProperties": true, "properties": {"displayName": {"type": "string"}, "email": {"type": "string"}, "id": {"type": "string"}}, "required": ["id", "displayName", "email"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:campaign-ended", "name": "Campaign Ended", "description": "Triggered when a campaign ends.", "type": "EVENT", "inputExample": {"campaign": {"campaignOwner": {"displayName": "William Wilson", "email": "william.wilson@example.com", "id": "37f080867702c1910177031320c40n27"}, "created": "2021-02-16T03:04:45.815Z", "deadline": "2021-03-16T03:04:45.815Z", "description": "Audit access for all employees.", "id": "2c91808576f886190176f88cac5a0010", "modified": null, "name": "Manager Access Campaign", "status": "COMPLETED", "type": "MANAGER"}}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:CampaignEndedPayload", "definitions": {"enum:GeneratedCampaignStatuses": {"enum": ["COMPLETED"]}, "enum:type": {"enum": ["MANAGER", "SOURCE_OWNER", "SEARCH", "ROLE_COMPOSITION", "IDENTITY", "UNCORRELATED_ACCOUNT", "MACHINE_ACCOUNT"]}, "record:Campaign": {"additionalProperties": true, "optional": ["modified"], "properties": {"campaignOwner": {"$ref": "#/definitions/record:CampaignOwner"}, "created": {"type": "string"}, "deadline": {"type": "string"}, "description": {"type": "string"}, "id": {"type": "string"}, "modified": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "name": {"type": "string"}, "status": {"$ref": "#/definitions/enum:GeneratedCampaignStatuses"}, "type": {"$ref": "#/definitions/enum:type"}}, "required": ["id", "name", "description", "created", "deadline", "type", "campaignOwner", "status"], "type": "object"}, "record:CampaignEndedPayload": {"additionalProperties": true, "properties": {"campaign": {"$ref": "#/definitions/record:Campaign"}}, "required": ["campaign"], "type": "object"}, "record:CampaignOwner": {"additionalProperties": true, "properties": {"displayName": {"type": "string"}, "email": {"type": "string"}, "id": {"type": "string"}}, "required": ["id", "displayName", "email"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:campaign-generated", "name": "Campaign Generated", "description": "Triggered when a campaign finishes generating.", "type": "EVENT", "inputExample": {"campaign": {"campaignOwner": {"displayName": "William Wilson", "email": "william.wilson@example.com", "id": "37f080867702c1910177031320c40n27"}, "created": "2021-02-16T03:04:45.815Z", "deadline": null, "description": "Audit access for all employees.", "id": "2c91808576f886190176f88cac5a0010", "modified": null, "name": "Manager Access Campaign", "status": "STAGED", "type": "MANAGER"}}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:CampaignGeneratedPayload", "definitions": {"enum:GeneratedCampaignStatuses": {"enum": ["STAGED", "ACTIVATING", "ACTIVE"]}, "enum:type": {"enum": ["MANAGER", "SOURCE_OWNER", "SEARCH", "ROLE_COMPOSITION", "IDENTITY", "UNCORRELATED_ACCOUNT", "MACHINE_ACCOUNT"]}, "record:Campaign": {"additionalProperties": true, "optional": ["modified", "deadline"], "properties": {"campaignOwner": {"$ref": "#/definitions/record:CampaignOwner"}, "created": {"type": "string"}, "deadline": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "description": {"type": "string"}, "id": {"type": "string"}, "modified": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "name": {"type": "string"}, "status": {"$ref": "#/definitions/enum:GeneratedCampaignStatuses"}, "type": {"$ref": "#/definitions/enum:type"}}, "required": ["id", "name", "description", "created", "type", "campaignOwner", "status"], "type": "object"}, "record:CampaignGeneratedPayload": {"additionalProperties": true, "properties": {"campaign": {"$ref": "#/definitions/record:Campaign"}}, "required": ["campaign"], "type": "object"}, "record:CampaignOwner": {"additionalProperties": true, "properties": {"displayName": {"type": "string"}, "email": {"type": "string"}, "id": {"type": "string"}}, "required": ["id", "displayName", "email"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:certification-signed-off", "name": "Certification Signed Off", "description": "Triggered when a certification is signed off by its reviewer.", "type": "EVENT", "inputExample": {"certification": {"campaignOwner": {"displayName": "William Wilson", "email": "william.wilson@example.com", "id": "37f080867702c1910177031320c40n27"}, "campaignRef": {"campaignType": "MANAGER", "description": "Audit access for all employees.", "id": "2c91808576f886190176f88cac5a0010", "name": "Manager Access Campaign", "type": "CAMPAIGN"}, "completed": true, "created": "2020-02-16T03:04:45.815Z", "decisionsMade": 50, "decisionsTotal": 50, "due": "2020-03-16T03:04:45.815Z", "entitiesCompleted": 12, "entitiesTotal": 12, "errorMessage": null, "hasErrors": false, "id": "2c91808576f886190176f88caf0d0067", "modified": null, "name": "Manager Access Review for Alice Baker", "phase": "SIGNED", "reassignment": {"comment": "Changing reviewer.", "from": {"id": "8a89c6de77ef762f0177ef7f52f10004", "name": "Manger Access Review for Charlie Davis", "reviewer": {"email": "charlie.davis@example.com", "id": "2c9180867702c1910177031320c4010c", "name": "Charlie Davis", "type": "IDENTITY"}, "type": "CERTIFICATION"}}, "reviewer": {"email": null, "id": "6a80311c-8d11-40bc-a3c8-29e2360b85e8", "name": "Reviewers group", "type": "GOVERNANCE_GROUP"}, "signed": "2020-03-04T03:04:45.815Z"}}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:CertificationSignOffPayload", "definitions": {"enum:CampaignType": {"enum": ["MANAGER", "SOURCE_OWNER", "SEARCH", "ROLE_COMPOSITION", "IDENTITY", "UNCORRELATED_ACCOUNT", "MACHINE_ACCOUNT"]}, "enum:CertificationPhase": {"enum": ["SIGNED"]}, "enum:CertificationRefType": {"enum": ["CERTIFICATION"]}, "enum:RefType": {"enum": ["CAMPAIGN"]}, "enum:ReviewerType": {"enum": ["IDENTITY", "GOVERNANCE_GROUP"]}, "record:CampaignOwner": {"additionalProperties": true, "properties": {"displayName": {"type": "string"}, "email": {"type": "string"}, "id": {"type": "string"}}, "required": ["id", "displayName", "email"], "type": "object"}, "record:CampaignRef": {"additionalProperties": true, "properties": {"campaignType": {"$ref": "#/definitions/enum:CampaignType"}, "description": {"type": "string"}, "id": {"type": "string"}, "name": {"type": "string"}, "type": {"$ref": "#/definitions/enum:RefType", "default": "CAMPAIGN"}}, "required": ["id", "type", "name", "description", "campaignType"], "type": "object"}, "record:Certification": {"additionalProperties": true, "optional": ["modified", "errorMessage", "reassignment"], "properties": {"campaignOwner": {"$ref": "#/definitions/record:CampaignOwner"}, "campaignRef": {"$ref": "#/definitions/record:CampaignRef"}, "completed": {"type": "boolean"}, "created": {"type": "string"}, "decisionsMade": {"maximum": 2147483647, "minimum": -2147483648, "type": "number"}, "decisionsTotal": {"maximum": 2147483647, "minimum": -2147483648, "type": "number"}, "due": {"type": "string"}, "entitiesCompleted": {"maximum": 2147483647, "minimum": -2147483648, "type": "number"}, "entitiesTotal": {"maximum": 2147483647, "minimum": -2147483648, "type": "number"}, "errorMessage": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "hasErrors": {"type": "boolean"}, "id": {"type": "string"}, "modified": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "name": {"type": "string"}, "phase": {"$ref": "#/definitions/enum:CertificationPhase"}, "reassignment": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:Reassignment"}]}, "reviewer": {"$ref": "#/definitions/record:Reviewer"}, "signed": {"type": "string"}}, "required": ["id", "name", "created", "campaignRef", "completed", "decisionsMade", "decisionsTotal", "due", "signed", "reviewer", "campaignOwner", "hasErrors", "phase", "entitiesCompleted", "entitiesTotal"], "type": "object"}, "record:CertificationRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "reviewer": {"$ref": "#/definitions/record:Reviewer"}, "type": {"$ref": "#/definitions/enum:CertificationRefType"}}, "required": ["type", "id", "name", "reviewer"], "type": "object"}, "record:CertificationSignOffPayload": {"additionalProperties": true, "properties": {"certification": {"$ref": "#/definitions/record:Certification"}}, "required": ["certification"], "type": "object"}, "record:Reassignment": {"additionalProperties": true, "properties": {"comment": {"type": "string"}, "from": {"$ref": "#/definitions/record:CertificationRef"}}, "required": ["from", "comment"], "type": "object"}, "record:Reviewer": {"additionalProperties": true, "optional": ["email"], "properties": {"email": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "id": {"type": "string"}, "name": {"type": "string"}, "type": {"$ref": "#/definitions/enum:ReviewerType"}}, "required": ["id", "name", "type"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:compare-boolean", "name": "Compare Boolean", "description": "Compare two boolean values and decide what happens based on the result.", "type": "OPERATOR", "formFields": [{"description": "First value to compare", "helpText": "Enter the JSONPath to a true or false value to compare to Value 2", "label": "Value 1", "name": "variableA.$", "required": true, "type": "text"}, {"description": "First value to compare", "helpText": "", "label": "Comparison Operator", "name": "comparator", "options": [{"label": "Equals", "value": "BooleanEquals"}], "required": true, "type": "select"}, {"description": "Second value to compare", "helpText": "", "label": "Value 2", "name": "variableB.$", "required": false, "type": "text"}, {"description": "Second value to compare", "helpText": "", "label": "Value 2", "name": "variableB", "required": false, "type": "boolean"}], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:compare-numbers", "name": "Compare Numbers", "description": "Choose two numerical values to compare and decide what happens based on the results.", "type": "OPERATOR", "formFields": [{"description": "First value to compare", "helpText": "Enter the JSONPath to a number to compare to Value 2", "label": "Value 1", "name": "variableA.$", "required": true, "type": "text"}, {"description": "", "helpText": "", "label": "Operation", "name": "comparator", "options": [{"label": "Equals", "value": "NumericEquals"}, {"label": "Is Less Than", "value": "NumericLessThan"}, {"label": "Is Greater Than", "value": "NumericGreaterThan"}, {"label": "Is Less Than or Equal To", "value": "NumericLessThanEquals"}, {"label": "Is Greater Than or Equal To", "value": "NumericGreaterThanEquals"}], "required": true, "type": "select"}, {"description": "Second value to compare", "helpText": "", "label": "Value 2", "name": "variableB.$", "required": false, "type": "text"}, {"default": 0, "description": "Second value to compare", "helpText": "", "label": "Value 2", "name": "variableB", "required": false, "type": "number"}], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:compare-strings", "name": "Compare Strings", "description": "Choose two string values to compare and decide what happens based on the results.", "type": "OPERATOR", "formFields": [{"description": "First value to compare", "helpText": "Enter the JSONPath to a string to compare to Value 2", "label": "Value 1", "name": "variableA.$", "required": true, "type": "text"}, {"description": "", "helpText": "", "label": "Operation", "name": "comparator", "options": [{"label": "Equals", "value": "StringEquals"}, {"label": "Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Contains", "value": "StringContains"}, {"label": "Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Is Less Than", "value": "StringLessThan"}, {"label": "Is Greater Than", "value": "StringGreaterThan"}, {"label": "Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Starts With", "value": "StringStartsWith"}, {"label": "Ends With", "value": "StringEndsWith"}], "required": true, "type": "select"}, {"description": "Second value to compare", "helpText": "Enter a static string value to compare to Value 1", "label": "Value 2", "name": "variableB.$", "required": false, "type": "text"}, {"description": "Second value to compare", "helpText": "Enter a static string value to compare to Value 1", "label": "Value 2", "name": "variableB", "required": false, "type": "text"}], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:compare-timestamps", "name": "Compare Timestamps", "description": "Choose two timestamp values to compare and decide what happens based on the results.", "type": "OPERATOR", "formFields": [{"description": "First value to compare", "helpText": "Enter the JSONPath to a timestamp to compare to Value 2", "label": "Value 1", "name": "variableA.$", "required": true, "type": "text"}, {"description": "", "helpText": "", "label": "Operation", "name": "comparator", "options": [{"label": "Is on the Date", "value": "TimestampEquals"}, {"label": "Is Before", "value": "TimestampLessThan"}, {"label": "Is After", "value": "TimestampGreaterThan"}, {"label": "Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "required": true, "type": "select"}, {"description": "Second value to compare", "helpText": "", "label": "Value 2", "name": "variableB.$", "required": false, "type": "text"}, {"description": "Second value to compare", "helpText": "", "label": "Value 2", "name": "variableB", "required": false, "type": "text"}], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:create-campaign", "name": "Create Certification Campaign", "description": "Generates a certification campaign.", "type": "ACTION", "formFields": [{"label": "Campaign Name", "name": "name", "required": true, "type": "text"}, {"label": "Campaign Description", "name": "description", "required": true, "type": "textarea"}, {"label": "Reviewer Type", "name": "type", "options": [{"label": "Manager", "subfields": [], "value": "MANAGER"}, {"label": "Source Owner", "subfields": [{"helpText": "The technical IDs of the sources to certify. Enter a single ID, or enter multiple IDs enclosed in square brackets and separated by spaces.", "label": "Source IDs", "name": "sourceIds", "type": "textarea"}], "value": "SOURCE_OWNER"}, {"label": "Individual", "subfields": [{"config": {"max": "1"}, "label": "Reviewer Identity", "name": "reviewerId", "required": true, "type": "identityPicker"}, {"label": "Certification Type", "name": "reviewerCertificationType", "options": [{"label": "Access Certification", "subfields": [{"label": "Access Type", "name": "reviewerAccessItemType", "options": [{"label": "Access Profile", "value": "ACCESS_PROFILE"}, {"label": "Entitlement", "value": "ENTITLEMENT"}, {"label": "Role", "value": "ROLE"}], "required": true, "type": "select", "valueOnly": true}, {"label": "Access Filter", "name": "reviewerAccessOperator", "options": [{"label": "Certify all access", "subfields": [], "value": "ALL"}, {"label": "Certify specific access", "subfields": [{"helpText": "Select the IDs of the access items to include in this campaign.", "name": "reviewerAccessConstraintIds", "type": "textarea"}], "value": "SELECTED"}], "required": true, "type": "multiType"}], "value": "ACCESS"}, {"label": "Identity Certification", "subfields": [{"config": {"max": "1000"}, "label": "Identities to Certify", "name": "reviewerIdentitiesToCertify", "required": true, "type": "identityPicker"}], "value": "IDENTITY"}], "required": true, "type": "multiType"}], "value": "REVIEWER_IDENTITY"}, {"label": "Governance Group", "subfields": [{"config": {"max": "1"}, "label": "Governance Group", "name": "governanceGroupId", "required": true, "type": "governanceGroupPicker"}, {"label": "Certification Type", "name": "governanceCertificationType", "options": [{"label": "Access Certification", "subfields": [{"label": "Access Type", "name": "governanceAccessItemType", "options": [{"label": "Access Profile", "value": "ACCESS_PROFILE"}, {"label": "Entitlement", "value": "ENTITLEMENT"}, {"label": "Role", "value": "ROLE"}], "required": true, "type": "select", "valueOnly": true}, {"label": "Access Filter", "name": "governanceAccessOperator", "options": [{"label": "All Access", "subfields": [], "value": "ALL"}, {"label": "Specific Access", "subfields": [{"helpText": "Select the IDs of the access items to include in this campaign.", "name": "governanceAccessConstraintIds", "type": "textarea"}], "value": "SELECTED"}], "required": true, "type": "multiType"}], "value": "ACCESS"}, {"label": "Identity Certification", "subfields": [{"config": {"max": "1000"}, "label": "Identities to Certify", "name": "governanceIdentitiesToCertify", "required": true, "type": "identityPicker"}], "value": "IDENTITY"}], "required": true, "type": "multiType"}], "value": "GOVERNANCE_GROUP"}], "required": true, "type": "multiType"}, {"config": {"availableDurations": ["days", "weeks"]}, "label": "Campaign Duration", "name": "duration", "required": true, "type": "duration"}, {"config": {"offLabel": "Disabled", "onLabel": "Enabled"}, "default": false, "helpText": "Include recommendations in this campaign. You must have Access Recommendations to use this feature.", "label": "AI Recommendations", "name": "recommendationsEnabled", "required": false, "type": "toggle", "valueOnly": true}, {"config": {"offLabel": "Disabled", "onLabel": "Enabled"}, "default": true, "helpText": "Send notifications and reminder emails about this campaign.", "label": "Email Notifications", "name": "emailNotificationEnabled", "required": false, "type": "toggle", "valueOnly": true}, {"config": {"offLabel": "Disabled", "onLabel": "Enabled"}, "default": true, "helpText": "The certification campaign starts upon creation. If this option is disabled, you must manually start the certification campaign.", "label": "Start Campaign when Created", "name": "activateUponCreation", "required": false, "type": "toggle", "valueOnly": true}, {"config": {"allowClear": true, "valueOnly": true}, "default": false, "label": "Undecided Access Items", "name": "undecidedAccess", "options": [{"label": "Maintain Access (Recommended)", "value": false}, {"label": "Choose to Maintain or Revoke Access (High Risk)", "value": true}], "required": false, "type": "select"}], "outputSchema": {"definitions": {}, "properties": {"autoRevokeAllowed": {"$id": "#sp:create-campaign/autoRevokeAllowed", "default": true, "examples": [false], "title": "autoRevokeAllowed", "type": "boolean"}, "deadline": {"$id": "#sp:create-campaign/deadline", "default": "", "examples": ["2020-12-25T06:00:00.468Z"], "format": "date-time", "pattern": "^.*$", "title": "deadline", "type": "string"}, "description": {"$id": "#sp:create-campaign/description", "default": "", "examples": ["A review of everyone's access by their manager."], "pattern": "^.*$", "title": "description", "type": "string"}, "emailNotificationEnabled": {"$id": "#sp:create-campaign/emailNotificationEnabled", "default": true, "examples": [false], "title": "emailNotificationEnabled", "type": "boolean"}, "filter": {"$id": "#sp:create-campaign/filter", "properties": {"id": {"$id": "#sp:create-campaign/filter/id", "default": "", "examples": ["e0adaae69852e8fe8b8a3d48e5ce757c"], "pattern": "^.*$", "title": "id", "type": "string"}, "type": {"$id": "#sp:create-campaign/filter/type", "default": "", "examples": ["CAMPAIGN_FILTER"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "filter", "type": "object"}, "id": {"$id": "#sp:create-campaign/id", "default": "", "examples": ["2c918086719eec070171a7e3355a360a"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:create-campaign/name", "default": "", "examples": ["Manager Review"], "pattern": "^.*$", "title": "name", "type": "string"}, "recommendationsEnabled": {"$id": "#sp:create-campaign/recommendationsEnabled", "default": true, "examples": [false], "title": "recommendationEnabled", "type": "boolean"}, "type": {"$id": "#sp:create-campaign/type", "default": "", "examples": ["MANAGER"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "sp:create-campaign", "type": "object"}, "exampleOutput": {"id": "2c918086719eec070171a7e3355a360a", "name": "Manager Review", "description": "A review of everyone's access by their manager.", "deadline": "2020-12-25T06:00:00.468Z", "type": "MANAGER", "emailNotificationEnabled": false, "autoRevokeAllowed": false, "recommendationsEnabled": false, "filter": {"type": "CAMPAIGN_FILTER", "id": "e0adaae69852e8fe8b8a3d48e5ce757c"}}, "versionNumber": 2, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "das:activity-alert", "name": "DAS Activity Alert", "description": "An alert was created by an activity of a DAS application", "type": "EVENT", "inputExample": {"actionType": "File Downloaded", "alertRuleNames": ["Rule name 1", "Rule name 2"], "alertRuleSeverities": ["High", "Medium"], "appId": 1, "appName": "SharePoint Online", "appTypeId": 1, "customAttribute1": null, "customAttribute2": "custom value", "dcCategories": ["SSN", "Phone Number"], "dcPolicies": ["PII"], "dcRules": ["SSN", "Phone Numbers"], "fileExtension": "xlsx", "identityCountry": "Texas", "identityDepartment": "IT", "identityEmail": "chris.wilford@acme.com", "identityFirstName": "Chris", "identityId": "ceecd993991045778b72382f103458e9", "identityJobTitle": "Support Engineer", "identityLastName": "Wilford", "identityLocation": "US", "identityManager": "Bobby Ray", "identityProfile": "Admin", "identityStatus": "UNREGISTERED", "ipAddress": "185.208.199.1", "objectName": "employees.xlsx", "objectType": "File", "path": "https://acme.sharepoint.com/sites/HR/Shared Documents/Eng", "timestamp": "2024-07-08T09:17:26.0000000Z", "userFullName": "chris.wilford@acme.com", "userName": "chris.wilford@acme.com"}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:ActivityAlert", "definitions": {"record:ActivityAlert": {"additionalProperties": true, "optional": ["objectName", "userDomain", "objectType", "newName", "newPath", "fileExtension", "ipAddress", "dcPolicies", "dcRules", "dcCategories", "identityId", "identityEmail", "identityStatus", "identityFirstName", "identityLastName", "identityManager", "identityProfile", "identityCountry", "identityLocation", "identityJobTitle", "identityDepartment", "identityLifecycleState"], "properties": {"actionType": {"type": "string"}, "alertRuleNames": {"$ref": "#/definitions/record:StringArray"}, "alertRuleSeverities": {"$ref": "#/definitions/record:StringArray"}, "appId": {"type": "number"}, "appName": {"type": "string"}, "appTypeId": {"type": "number"}, "dcCategories": {"$ref": "#/definitions/record:NullableStringArray"}, "dcPolicies": {"$ref": "#/definitions/record:NullableStringArray"}, "dcRules": {"$ref": "#/definitions/record:NullableStringArray"}, "fileExtension": {"$ref": "#/definitions/record:NullableString"}, "identityCountry": {"$ref": "#/definitions/record:NullableString"}, "identityDepartment": {"$ref": "#/definitions/record:NullableString"}, "identityEmail": {"$ref": "#/definitions/record:NullableString"}, "identityFirstName": {"$ref": "#/definitions/record:NullableString"}, "identityId": {"$ref": "#/definitions/record:NullableString"}, "identityJobTitle": {"$ref": "#/definitions/record:NullableString"}, "identityLastName": {"$ref": "#/definitions/record:NullableString"}, "identityLifecycleState": {"$ref": "#/definitions/record:NullableString"}, "identityLocation": {"$ref": "#/definitions/record:NullableString"}, "identityManager": {"$ref": "#/definitions/record:NullableString"}, "identityProfile": {"$ref": "#/definitions/record:NullableString"}, "identityStatus": {"$ref": "#/definitions/record:NullableString"}, "ipAddress": {"$ref": "#/definitions/record:NullableString"}, "newName": {"$ref": "#/definitions/record:NullableString"}, "newPath": {"$ref": "#/definitions/record:NullableString"}, "objectName": {"type": "string"}, "objectType": {"type": "string"}, "path": {"type": "string"}, "timestamp": {"type": "string"}, "userDomain": {"$ref": "#/definitions/record:NullableString"}, "userFullName": {"type": "string"}, "userName": {"type": "string"}}, "required": ["appId", "appTypeId", "appName", "timestamp", "userName", "userFullName", "actionType", "path", "alertRuleNames", "alertRuleSeverities"], "title": "DAS Activity Alert", "type": "object"}, "record:NullableString": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "record:NullableStringArray": {"oneOf": [{"type": "null"}, {"items": {"type": "string"}, "type": "array"}]}, "record:StringArray": {"items": {"type": "string"}, "type": "array"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:define-variable", "name": "Define Variable", "description": "Create a custom variable for reference within a workflow.", "type": "OPERATOR", "formFields": [{"description": "Creating a new variable relies on data that is being passed through the workflow. If you would like to create a new variable, make sure the step is ahead of steps that will call the data you would like to use.", "label": "Variables", "name": "variables", "required": true, "type": "variableCreator"}], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": true, "isSimulationEnabled": false}
{"id": "sp:reject-request", "name": "Deny Access Request", "description": "Selects an access request and denies it.", "type": "ACTION", "formFields": [{"helpText": "The technical ID of the access request to deny.", "label": "Access Request ID", "name": "approvalId", "required": true, "type": "text"}, {"helpText": "The comment to add all access requests processed by this step.", "label": "Comment", "name": "comment", "required": true, "type": "textarea"}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:operator-failure", "name": "End Step - Failure", "description": "Use this step to indicate that your workflow failed, and has stopped.", "type": "OPERATOR", "formFields": [], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:operator-success", "name": "End Step - Success", "description": "Use this step to indicate that your workflow has completed successfully.", "type": "OPERATOR", "formFields": null, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:pag-entra-id", "name": "Entra ID", "description": "View and modify users and groups in Microsoft Entra ID.", "type": "ACTION", "formFields": [{"config": {"max": "1"}, "dynamicConfig": {"method": "GET", "path": "connector-instances?filters=requiredCommands ca \"pag:entra_id:list_groups\"", "service": "sp-connect"}, "helpText": "Select a Privilege Gateway cluster.", "label": "Privilege Cluster", "name": "pagInstanceId", "required": true, "type": "pagInstancePicker", "valueOnly": true}, {"config": {"max": "1"}, "dynamicConfig": {"method": "GET", "optionConfig": {"filterKey": "type", "filterRegex": "^pag:entra_id", "label": "displayName", "source": "$.customCommands[*]", "value": "type"}, "path": "managed-connector-specifications/{id}", "service": "sp-connect"}, "helpText": "Select a command.", "label": "Command", "name": "pagCommandType", "required": true, "type": "pagCommandPicker", "valueOnly": true}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": true, "isSimulationEnabled": true}
{"id": "idn:external-http", "name": "External Trigger", "description": "Fires when an external system makes a specific HTTP POST call to IdentityNow.", "type": "EXTERNAL", "formFields": [], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:forms", "name": "Form", "description": "Assigns the selected form to the target user with a set deadline. They will receive an email notification with a link to fill out the form.", "type": "ACTION", "formFields": [{"helpText": "Select a form from the dropdown list. Search for a form by name or description.", "label": "Form", "name": "formDefinitionId", "required": true, "type": "formPicker", "valueOnly": true}, {"config": {"max": "1"}, "helpText": "Select the IdentityNow user who will fill out this form.", "label": "Recipient", "name": "recipient", "required": true, "type": "identityPicker"}, {"helpText": "", "label": "Notification Subject", "name": "notificationSubject", "placeholder": "", "required": false, "type": "text"}, {"helpText": "The body text of the notification email. The URL link of the form will be attached to the end of the notification body automatically.", "label": "Notification Body", "name": "notificationBody", "placeholder": "", "required": false, "type": "textarea"}, {"config": {"availableDurations": ["hours", "days"]}, "helpText": "Select a deadline after which the form will not be available to the recipient, up to a maximum of 30 days or 720 hours.", "label": "Form Submission Deadline", "name": "deadline", "placeholder": "", "required": true, "type": "duration"}, {"helpText": "The body text of the reminder email. The URL link of the form will be attached to the end of the reminder notification body automatically.", "label": "Reminder Body", "name": "reminderBody", "placeholder": "", "required": false, "type": "textarea"}, {"config": {"availableDurations": ["hours", "days"]}, "helpText": "Select when to send a reminder message if the form has not yet been submitted, up to a maximum of 29 days or 696 hours.", "label": "Form Submission Reminder", "name": "reminder", "placeholder": "", "required": true, "type": "duration"}], "outputSchema": {"definitions": {}, "properties": {"deadline": {"$id": "#sp:forms/deadline", "pattern": "^.*$", "title": "deadline", "type": "string"}, "formData": {"$id": "#sp:forms/formData", "pattern": "^.*$", "title": "formData", "type": "object"}, "formState": {"$id": "#sp:forms/formState", "enum": ["ASSIGNED", "IN_PROGRESS", "SUBMITTED", "COMPLETED", "CANCELLED"], "title": "formState", "type": "string"}, "recipient": {"$id": "#sp:forms/recipient", "pattern": "^.*$", "title": "recipient", "type": "string"}, "reminder": {"$id": "#sp:forms/reminder", "pattern": "^.*$", "title": "reminder", "type": "string"}, "submitted": {"$id": "#sp:forms/submitted", "title": "submitted", "type": "boolean"}}, "title": "sp:forms", "type": "object"}, "exampleOutput": {"recipient": "foobar", "deadline": "2099-01-01T00:00:00.000Z", "reminder": "2099-01-01T00:00:00.000Z", "formData": {"Jan25": "uno", "Jan25_1": "dos"}, "submitted": false}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": true, "isSimulationEnabled": true}
{"id": "sp:form-submitted", "name": "Form Submitted", "description": "A form was submitted by a user.", "type": "EVENT", "inputExample": {"createdBy": {"id": "2c9180845d1edece015d27a9717c3e19", "type": "WORKFLOW_EXECUTION"}, "formData": {"comments": "My laptop is running slow, and I need to get a shiny new laptop to get my work done.  Thanks!", "department": "IT", "laptop": "New Laptop type for Engineer", "requestType": "New Laptop"}, "formDefinitionId": "2c9180835d2e5168015d32f890ca1581", "formInstanceId": "2c9180835d2e5168015d32f890ca1582", "name": "Open Service Request", "state": "COMPLETED", "submittedAt": "2020-06-29T22:01:50.474Z", "submittedBy": {"id": "2c9180845d1edece015d27a9717c3e19", "name": "Neil McGlennon", "type": "IDENTITY"}, "tenantId": "2c9180845d1edece015d27a9717c3e19"}, "formFields": [{"label": "Description", "name": "description", "required": false, "type": "textarea", "valueOnly": true}, {"config": {"advancedSubfields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "basicSubfields": [{"helpText": "Select which form will trigger the workflow when submitted", "label": "Form to Filter", "name": "formDefinitionId", "required": true, "type": "formPicker", "valueOnly": true}]}, "name": "advanced", "type": "advancedToggle"}], "outputSchema": {"$ref": "#/definitions/record:FormSubmittedInput", "definitions": {"record:CreatedBy": {"additionalProperties": false, "properties": {"id": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "type"], "title": "CreatedBy", "type": "object"}, "record:FormSubmittedInput": {"additionalProperties": false, "properties": {"createdBy": {"$ref": "#/definitions/record:CreatedBy"}, "formData": {"type": "object"}, "formDefinitionId": {"type": "string"}, "formInstanceId": {"type": "string"}, "name": {"type": "string"}, "state": {"type": "string"}, "submittedAt": {"type": "string"}, "submittedBy": {"$ref": "#/definitions/record:SubmittedBy"}, "tenantId": {"type": "string"}}, "required": ["submittedAt", "submittedBy", "createdBy", "tenantId", "formInstanceId", "formDefinitionId", "name"], "title": "Form Submitted Input", "type": "object"}, "record:SubmittedBy": {"additionalProperties": false, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "title": "SubmittedBy", "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": true, "isSimulationEnabled": false}
{"id": "sp:access:get", "name": "Get Access", "description": "Gets one or more access items.", "type": "ACTION", "formFields": [{"helpText": "Select how to get access items.", "label": "Access Selection Method", "name": "getAccessBy", "options": [{"label": "By Identity", "subfields": [{"config": "{max:1}", "helpText": "Select an identity to return its access items.", "label": "By Identity", "name": "identityToReturn", "required": true, "type": "identityPicker"}], "value": "specificIdentity"}, {"label": "By Search Query", "subfields": [{"helpText": "Enter a search query to return specific access items.", "label": "By Search Query", "name": "query", "required": true, "type": "text", "valueOnly": true}], "value": "searchQuery"}], "required": true, "type": "multiType"}, {"checkboxLabel": "", "default": true, "label": "Get Access Profiles", "name": "accessprofiles", "required": false, "type": "checkbox", "valueOnly": "true"}, {"checkboxLabel": "", "default": true, "label": "Get Roles", "name": "roles", "required": false, "type": "checkbox", "valueOnly": "true"}, {"checkboxLabel": "", "default": true, "label": "Get Entitlements", "name": "entitlements", "required": false, "type": "checkbox", "valueOnly": "true"}], "outputSchema": {"definitions": {}, "properties": {"accessItems": {"$id": "#sp:access:get/accessItems", "default": [], "items": {"$id": "#sp:access:get/items", "properties": {"id": {"$id": "#sp:access:get/items/id", "default": "", "examples": ["2c9180857182305e0171993735622948"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:access:get/items/name", "default": "", "examples": ["Cloud Eng"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:access:get/items/type", "default": "", "examples": ["accessprofile"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "items", "type": "object"}, "title": "accessItems", "type": "array"}}, "title": "sp:access:get", "type": "object"}, "exampleOutput": {"accessItems": [{"id": "2c9180857182305e0171993735622948", "name": "Cloud Eng", "type": "accessprofile"}]}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:get-access-request-recommendations", "name": "Get Access Request Recommendations", "description": "Uses SailPoint\u2019s AI Services to provide the list of access requests that are recommended for the specified user.", "type": "ACTION", "formFields": [{"config": {"max": 1}, "helpText": "Use the dropdown list to choose an identity or enter a JSONPath expression to an identity\u2019s technical ID to return its recommended access requests.", "label": "Identity", "name": "id", "required": true, "type": "identityPicker"}], "outputSchema": {"definitions": {}, "properties": {"accessRequestRecommendations": {"$id": "#sp:get-access-request-recommendations/accessRequestRecommendations", "default": [], "items": {"$id": "#sp:get-access-request-recommendations/items", "properties": {"access": {"$id": "#sp:get-access-request-recommendations/items/access", "properties": {"description": {"$id": "#sp:get-access-request-recommendations/items/access/description", "default": "", "examples": ["This item grants an employee read and write access to the database"], "pattern": "^.*$", "title": "description", "type": "string"}, "id": {"$id": "#sp:get-access-request-recommendations/items/access/id", "default": "", "examples": ["2c9180835d2e5168015d32f890ca1581"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-access-request-recommendations/items/access/name", "default": "", "examples": ["Employee-database-read-write"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:get-access-request-recommendations/items/access/type", "default": "", "examples": ["ACCESS_PROFILE"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "access", "type": "object"}, "identityId": {"$id": "#sp:get-access-request-recommendations/items/identityId", "default": "", "examples": ["2c91808570313110017040b06f344ec9"], "pattern": "^.*$", "title": "identityId", "type": "string"}, "ignored": {"$id": "#sp:get-access-request-recommendations/items/ignored", "default": true, "examples": [true], "title": "ignored", "type": "boolean"}, "messages": {"$id": "#sp:get-access-request-recommendations/items/messages", "default": [], "items": {"$id": "#sp:get-access-request-recommendations/items/messages/items", "properties": {"interpretation": {"$id": "#sp:get-access-request-recommendations/items/messages/items/interpretation", "default": "", "examples": ["95% of your peers have this access."], "pattern": "^.*$", "title": "interpretation", "type": "string"}}, "title": "items", "type": "object"}, "title": "messages", "type": "array"}, "requested": {"$id": "#sp:get-access-request-recommendations/items/requested", "default": true, "examples": [true], "title": "requested", "type": "boolean"}, "translationMessages": {"$id": "#sp:get-access-request-recommendations/items/translationMessages", "default": [], "items": {"$id": "#sp:get-access-request-recommendations/items/translationMessages/items", "properties": {"key": {"$id": "#sp:get-access-request-recommendations/items/translationMessages/items/key", "default": "", "examples": ["recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH"], "pattern": "^.*$", "title": "key", "type": "string"}, "values": {"$id": "#sp:get-access-request-recommendations/items/translationMessages/items/values", "default": [], "items": {"$id": "#sp:get-access-request-recommendations/items/translationMessages/items/values/items", "default": "", "examples": ["75"], "pattern": "^.*$", "title": "Items", "type": "string"}, "title": "values", "type": "array"}}, "title": "items", "type": "object"}, "title": "translationMessages", "type": "array"}, "viewed": {"$id": "#sp:get-access-request-recommendations/items/viewed", "default": true, "examples": [true], "title": "viewed", "type": "boolean"}}, "title": "items", "type": "object"}, "title": "accessRequestRecommendations", "type": "array"}}, "title": "sp:get-access-request-recommendations", "type": "object"}, "exampleOutput": {"accessRequestRecommendations": [{"identityId": "2c91808570313110017040b06f344ec9", "access": {"id": "2c9180835d2e5168015d32f890ca1581", "type": "ACCESS_PROFILE", "name": "Employee-database-read-write", "description": "This item grants an employee read and write access to the database", "ignored": true, "requested": true, "viewed": true, "messages": [{"interpretation": "95% of your peers have this access."}], "translationMessages": [{"key": "recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH", "values": ["75"]}]}}]}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:get-accounts", "name": "Get Accounts", "description": "Gets the source accounts of one or more identities.", "type": "ACTION", "formFields": [{"helpText": "Select how to get accounts.", "label": "Account Selection Method", "name": "getAccountsBy", "options": [{"label": "By Identity", "subfields": [{"config": {"max": 1}, "helpText": "Use the dropdown list to choose an identity or enter a JSONPath expression to an identity\u2019s technical ID to return that identity.", "label": "Accounts by Identity", "name": "identity", "required": true, "type": "identityPicker"}], "value": "specificIdentity"}, {"label": "By Account Data", "subfields": [{"helpText": "Return accounts based on account details and connected data.", "label": "Accounts Details", "name": "filterCriteria", "options": [{"label": "Technical ID", "value": "id"}, {"label": "Identity ID", "value": "identityId"}, {"label": "Account Name", "value": "name"}, {"label": "Account ID", "value": "nativeIdentity"}, {"label": "Source ID", "value": "sourceId"}, {"label": "Uncorrelated", "value": "uncorrelated"}], "required": true, "type": "select"}, {"label": "Operator", "name": "operator", "options": [{"label": "Equals", "subfields": [{"label": "Value", "name": "value", "required": true, "type": "text"}], "value": "eq"}, {"label": "In List", "subfields": [{"label": "Value List", "name": "valueList", "required": true, "type": "json"}], "value": "in"}], "type": "multiType"}], "value": "filters"}], "required": true, "type": "multiType"}], "outputSchema": {"definitions": {}, "properties": {"accounts": {"$id": "#sp:get-accounts/accounts", "default": [], "items": {"$id": "#sp:get-accounts/items", "properties": {"attributes": {"$id": "#sp:get-accounts/items/attributes", "default": [], "items": {"$id": "#sp:get-accounts/items/attributes/items", "properties": {"key": {"$id": "#sp:get-accounts/items/attributes/items/key", "default": "", "examples": ["type"], "pattern": "^.*$", "title": "key", "type": "string"}, "name": {"$id": "#sp:get-accounts/items/attributes/items/name", "default": "", "examples": ["Type"], "pattern": "^.*$", "title": "name", "type": "string"}, "value": {"$id": "#sp:get-accounts/items/attributes/items/value", "default": "", "examples": ["Azure"], "pattern": "^.*$", "title": "value", "type": "string"}}, "title": "items", "type": "object"}, "title": "attributes", "type": "array"}, "authoritative": {"$id": "#sp:get-accounts/items/authoritative", "default": false, "examples": [false], "title": "authoritative", "type": "boolean"}, "created": {"$id": "#sp:get-accounts/created", "default": "", "examples": ["2020-12-25T06:00:00.468Z"], "format": "date-time", "pattern": "^.*$", "title": "created", "type": "string"}, "description": {"$id": "#sp:get-accounts/items/description", "default": "", "examples": ["A descriptive description"], "pattern": "^.*$", "title": "description", "type": "string"}, "disabled": {"$id": "#sp:get-accounts/items/disabled", "default": false, "examples": [false], "title": "disabled", "type": "boolean"}, "hasEntitlements": {"$id": "#sp:get-accounts/items/hasEntitlements", "default": false, "examples": [false], "title": "hasEntitlements", "type": "boolean"}, "id": {"$id": "#sp:get-accounts/items/id", "default": "", "examples": ["2c9180857182305e0171993735622948"], "pattern": "^.*$", "title": "id", "type": "string"}, "identityId": {"$id": "#sp:get-accounts/items/identityId", "default": "", "examples": ["2c9180835d2e5168015d32f890ca1581"], "pattern": "^.*$", "title": "identityId", "type": "string"}, "locked": {"$id": "#sp:get-accounts/items/locked", "default": false, "examples": [false], "title": "locked", "type": "boolean"}, "manuallyCorrelated": {"$id": "#sp:get-accounts/items/manuallyCorrelated", "default": false, "examples": [false], "title": "manuallyCorrelated", "type": "boolean"}, "modified": {"$id": "#sp:get-accounts/modified", "default": "", "examples": ["2020-12-25T06:00:00.468Z"], "format": "date-time", "pattern": "^.*$", "title": "modified", "type": "string"}, "name": {"$id": "#sp:get-accounts/items/name", "default": "", "examples": ["Account Name"], "pattern": "^.*$", "title": "name", "type": "string"}, "nativeIdentity": {"$id": "#sp:get-accounts/items/nativeIdentity", "default": "", "examples": ["CN=...."], "pattern": "^.*$", "title": "nativeIdentity", "type": "string"}, "sourceId": {"$id": "#sp:get-accounts/items/sourceId", "default": "", "examples": ["2c9180835d2e5168015d32f890ca1581"], "pattern": "^.*$", "title": "sourceId", "type": "string"}, "systemAccount": {"$id": "#sp:get-accounts/items/systemAccount", "default": false, "examples": [false], "title": "systemAccount", "type": "boolean"}, "uncorrelated": {"$id": "#sp:get-accounts/items/uncorrelated", "default": false, "examples": [false], "title": "uncorrelated", "type": "boolean"}, "uuid": {"$id": "#sp:get-accounts/items/uuid", "default": "", "examples": ["2c9180835d2e5168015d32f890ca1581"], "pattern": "^.*$", "title": "uuid", "type": "string"}}, "title": "items", "type": "object"}, "title": "accounts", "type": "array"}}, "title": "sp:get-accounts", "type": "object"}, "exampleOutput": {"accounts": [{"id": "2c9180857182305e0171993735622948", "name": "Account Name", "created": "2020-12-25T06:00:00.468Z", "modified": "2020-12-25T06:00:00.468Z", "sourceId": "2c9180835d2e5168015d32f890ca1581", "identityId": "2c9180835d2e5168015d32f890ca1581", "authoritative": false, "description": "A descriptive description", "disabled": false, "locked": false, "nativeIdentity": "CN=....", "systemAccount": false, "uncorrelated": false, "uuid": "2c9180835d2e5168015d32f890ca1581", "manuallyCorrelated": false, "hasEntitlements": false, "attributes": [{"key": "type", "name": "Type", "value": "Azure"}]}]}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:get-campaign", "name": "Get Certification Campaign", "description": "Gets a certification campaign by its ID.", "type": "ACTION", "formFields": [{"helpText": "The technical ID of the campaign to get.", "label": "Campaign ID", "name": "id", "required": true, "type": "text"}], "outputSchema": {"definitions": {}, "properties": {"autoRevokeAllowed": {"$id": "#sp:get-campaign/autoRevokeAllowed", "default": true, "examples": [false], "title": "autoRevokeAllowed", "type": "boolean"}, "deadline": {"$id": "#sp:get-campaign/deadline", "default": "", "examples": ["2020-12-25T06:00:00.123Z"], "format": "date-time", "pattern": "^.*$", "title": "deadline", "type": "string"}, "description": {"$id": "#sp:get-campaign/description", "default": "", "examples": ["A review of everyone's access by their manager."], "pattern": "^.*$", "title": "description", "type": "string"}, "emailNotificationEnabled": {"$id": "#sp:get-campaign/emailNotificationEnabled", "default": true, "examples": [false], "title": "emailNotificationEnabled", "type": "boolean"}, "id": {"$id": "#sp:get-campaign/id", "default": "", "examples": ["2c918086719eec070171a7e3355a360a"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-campaign/name", "default": "", "examples": ["Manager Review"], "pattern": "^.*$", "title": "name", "type": "string"}, "recommendationsEnabled": {"$id": "#sp:get-campaign/recommendationsEnabled", "default": true, "examples": [false], "title": "recommendationsEnabled", "type": "boolean"}, "status": {"$id": "#sp:get-campaign/status", "default": "", "examples": ["ACTIVE"], "pattern": "^.*$", "title": "status", "type": "string"}, "type": {"$id": "#sp:get-campaign/type", "default": "", "examples": ["MANAGER"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "sp:get-campaign", "type": "object"}, "exampleOutput": {"id": "2c918086719eec070171a7e3355a360a", "name": "Manager Review", "description": "A review of everyone's access by their manager.", "deadline": "2020-12-25T06:00:00.123Z", "type": "MANAGER", "status": "ACTIVE", "emailNotificationEnabled": false, "autoRevokeAllowed": false, "recommendationsEnabled": false}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:get-identity", "name": "Get Identity", "description": "Gets a single specific identity and its identity attributes.", "type": "ACTION", "formFields": [{"config": {"max": 1}, "helpText": "Use the dropdown list to choose an identity or enter a JSONPath expression to an identity\u2019s technical ID to return that identity.", "label": "Identity", "name": "id", "required": true, "type": "identityPicker"}], "outputSchema": {"definitions": {}, "properties": {"attributes": {"$id": "#sp:get-identity/attributes", "properties": {"city": {"$id": "#sp:get-identity/attributes/city", "default": "", "examples": "", "pattern": "^.*$", "title": "city", "type": "string"}, "cloudAuthoritativeSource": {"$id": "#sp:get-identity/attributes/cloudAuthoritativeSource", "default": "", "examples": ["AD-Source"], "pattern": "^.*$", "title": "cloudAuthoritativeSource", "type": "string"}, "cloudLifecycleState": {"$id": "#sp:get-identity/attributes/cloudLifecycleState", "default": "", "examples": "", "pattern": "^.*$", "title": "cloudLifecycleState", "type": "string"}, "cloudStatus": {"$id": "#sp:get-identity/attributes/cloudStatus", "default": "", "examples": ["PENDING"], "pattern": "^.*$", "title": "cloudStatus", "type": "string"}, "costCenter": {"$id": "#sp:get-identity/attributes/costCenter", "default": "", "examples": "", "pattern": "^.*$", "title": "costCenter", "type": "string"}, "country": {"$id": "#sp:get-identity/attributes/country", "default": "", "examples": "", "pattern": "^.*$", "title": "country", "type": "string"}, "department": {"$id": "#sp:get-identity/attributes/department", "default": "", "examples": "", "pattern": "^.*$", "title": "department", "type": "string"}, "displayName": {"$id": "#sp:get-identity/attributes/displayName", "default": "", "examples": ["Abdiel admin6ef3c229"], "pattern": "^.*$", "title": "displayName", "type": "string"}, "email": {"$id": "#sp:get-identity/attributes/email", "default": "", "examples": ["Abdiel.admin6ef3c229@testmail.com"], "format": "email", "pattern": "^.*$", "title": "email", "type": "string"}, "endDate": {"$id": "#sp:get-identity/attributes/endDate", "default": "", "examples": "", "pattern": "^.*$", "title": "endDate", "type": "string"}, "firstname": {"$id": "#sp:get-identity/attributes/firstname", "default": "", "examples": ["Abdiel"], "pattern": "^.*$", "title": "firstname", "type": "string"}, "googleemail": {"$id": "#sp:get-identity/attributes/googleemail", "default": "", "examples": "", "pattern": "^.*$", "title": "googleemail", "type": "string"}, "ibmiusername": {"$id": "#sp:get-identity/attributes/ibmiusername", "default": "", "examples": "", "pattern": "^.*$", "title": "ibmiusername", "type": "string"}, "identificationNumber": {"$id": "#sp:get-identity/attributes/identificationNumber", "default": "", "examples": "", "pattern": "^.*$", "title": "identificationNumber", "type": "string"}, "initials": {"$id": "#sp:get-identity/attributes/initials", "default": "", "examples": "", "pattern": "^.*$", "title": "initials", "type": "string"}, "internalCloudStatus": {"$id": "#sp:get-identity/attributes/internalCloudStatus", "default": "", "examples": ["PENDING"], "pattern": "^.*$", "title": "internalCloudStatus", "type": "string"}, "jobTitle": {"$id": "#sp:get-identity/attributes/jobTitle", "default": "", "examples": "", "pattern": "^.*$", "title": "jobTitle", "type": "string"}, "lastSyncDate": {"$id": "#sp:get-identity/attributes/lastSyncDate", "default": "", "examples": ["c25374503226ca7d384a6a3b169d38c687d4435fe717f7450c66689ec697e9ab"], "pattern": "^.*$", "title": "lastSyncDate", "type": "string"}, "lastname": {"$id": "#sp:get-identity/attributes/lastname", "default": "", "examples": ["admin6ef3c229"], "pattern": "^.*$", "title": "lastname", "type": "string"}, "licenseStatus": {"$id": "#sp:get-identity/attributes/licenseStatus", "default": "", "examples": "", "pattern": "^.*$", "title": "licenseStatus", "type": "string"}, "location": {"$id": "#sp:get-identity/attributes/location", "default": "", "examples": "", "pattern": "^.*$", "title": "location", "type": "string"}, "locationCode": {"$id": "#sp:get-identity/attributes/locationCode", "default": "", "examples": "", "pattern": "^.*$", "title": "locationCode", "type": "string"}, "manager": {"$id": "#sp:get-identity/attributes/manager", "default": "", "examples": "", "pattern": "^.*$", "title": "manager", "type": "string"}, "middleName": {"$id": "#sp:get-identity/attributes/middleName", "default": "", "examples": "", "pattern": "^.*$", "title": "middleName", "type": "string"}, "nextProcessing": {"$id": "#sp:get-identity/attributes/nextProcessing", "default": "", "examples": "", "pattern": "^.*$", "title": "nextProcessing", "type": "string"}, "organization": {"$id": "#sp:get-identity/attributes/organization", "default": "", "examples": "", "pattern": "^.*$", "title": "organization", "type": "string"}, "personalEmail": {"$id": "#sp:get-identity/attributes/personalEmail", "default": "", "examples": "", "pattern": "^.*$", "title": "personalEmail", "type": "string"}, "phone": {"$id": "#sp:get-identity/attributes/phone", "default": "", "examples": "", "pattern": "^.*$", "title": "phone", "type": "string"}, "postalCode": {"$id": "#sp:get-identity/attributes/postalCode", "default": "", "examples": "", "pattern": "^.*$", "title": "postalCode", "type": "string"}, "preferredLanguage": {"$id": "#sp:get-identity/attributes/preferredLanguage", "default": "", "examples": "", "pattern": "^.*$", "title": "preferredLanguage", "type": "string"}, "preferredName": {"$id": "#sp:get-identity/attributes/preferredName", "default": "", "examples": "", "pattern": "^.*$", "title": "preferredName", "type": "string"}, "startDate": {"$id": "#sp:get-identity/attributes/startDate", "default": "", "examples": "", "pattern": "^.*$", "title": "startDate", "type": "string"}, "state": {"$id": "#sp:get-identity/attributes/state", "default": "", "examples": "", "pattern": "^.*$", "title": "state", "type": "string"}, "streetAddress": {"$id": "#sp:get-identity/attributes/streetAddress", "default": "", "examples": "", "pattern": "^.*$", "title": "streetAddress", "type": "string"}, "timezone": {"$id": "#sp:get-identity/attributes/timezone", "default": "", "examples": "", "pattern": "^.*$", "title": "timezone", "type": "string"}, "title": {"$id": "#sp:get-identity/attributes/title", "default": "", "examples": "", "pattern": "^.*$", "title": "title", "type": "string"}, "type": {"$id": "#sp:get-identity/attributes/type", "default": "", "examples": "", "pattern": "^.*$", "title": "type", "type": "string"}, "uid": {"$id": "#sp:get-identity/attributes/uid", "default": "", "examples": ["Abdiel.admin6ef3c229"], "pattern": "^.*$", "title": "uid", "type": "string"}, "workPhone": {"$id": "#sp:get-identity/attributes/workPhone", "default": "", "examples": ["512-942-7578"], "pattern": "^.*$", "title": "workPhone", "type": "string"}}, "title": "attributes", "type": "object"}, "cloudStatus": {"$id": "#sp:get-identity/cloudStatus", "default": "", "examples": ["PENDING"], "pattern": "^.*$", "title": "cloudStatus", "type": "string"}, "detectedRoles": {"$id": "#sp:get-identity/detectedRoles", "default": [], "items": {"$id": "#sp:get-identity/detectedRoles/items", "default": "", "examples": ["Bulk-AP-ODS-AD-Source 0"], "pattern": "^.*$", "title": "items", "type": "string"}, "title": "detectedRoles", "type": "array"}, "displayName": {"$id": "#sp:get-identity/displayName", "default": "", "examples": ["Abdiel admin6ef3c229"], "pattern": "^.*$", "title": "displayName", "type": "string"}, "emailAddress": {"$id": "#sp:get-identity/emailAddress", "default": "", "examples": ["Abdiel.admin6ef3c229@testmail.com"], "format": "email", "pattern": "^.*$", "title": "emailAddress", "type": "string"}, "id": {"$id": "#sp:get-identity/id", "default": "", "examples": ["2c91808577d06add0177d630740b01c4"], "pattern": "^.*$", "title": "id", "type": "string"}, "isManager": {"$id": "#sp:get-identity/isManager", "default": true, "examples": [true], "title": "isManager", "type": "boolean"}, "lastRefresh": {"$id": "#sp:get-identity/lastRefresh", "default": "", "examples": ["1641523378841"], "pattern": "^.*$", "title": "lastRefresh", "type": "string"}, "lifecycleStateManuallyUpdated": {"$id": "#sp:get-identity/lifecycleStateManuallyUpdated", "default": true, "examples": [false], "title": "lifecycleStateManuallyUpdated", "type": "boolean"}, "managerRef": {"$id": "#sp:get-identity/managerRef", "properties": {"id": {"$id": "#sp:get-identity/managerRef/id", "default": "", "examples": ["2c91808577d06add0177d630801102ae"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-identity/managerRef/name", "default": "", "examples": ["Nicholas.e601fa9592a"], "pattern": "^.*$", "title": "name", "type": "string"}}, "title": "managerRef", "type": "object"}, "meta": {"$id": "#sp:get-identity/meta", "properties": {"created": {"$id": "#sp:get-identity/meta/created", "default": "", "examples": ["2021-02-24T22:37:15+00:00"], "format": "date-time", "pattern": "^.*$", "title": "created", "type": "string"}, "modified": {"$id": "#sp:get-identity/meta/modified", "default": "", "examples": ["2022-01-07T02:42:58+00:00"], "format": "date-time", "pattern": "^.*$", "title": "modified", "type": "string"}, "type": {"$id": "#sp:get-identity/meta/type", "default": "", "examples": ["identities"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "meta", "type": "object"}, "name": {"$id": "#sp:get-identity/name", "default": "", "examples": ["Abdiel.admin6ef3c229"], "pattern": "^.*$", "title": "name", "type": "string"}, "processingState": {"$id": "#sp:get-identity/processingState", "default": null, "examples": ["PENDING"], "pattern": "^.*$", "title": "processingState", "type": "string"}, "profileId": {"$id": "#sp:get-identity/profileId", "default": "", "examples": ["2c91808f77d142290177d63161990341"], "pattern": "^.*$", "title": "profileId", "type": "string"}, "profileRole": {"$id": "#sp:get-identity/profileRole", "default": "", "examples": ["ODS-AD-Profile"], "pattern": "^.*$", "title": "profileRole", "type": "string"}, "riskScore": {"$id": "#sp:get-identity/riskScore", "default": 0, "examples": [0], "title": "riskScore", "type": "integer"}, "stateRole": {"$id": "#sp:get-identity/stateRole", "default": null, "examples": ["A Role"], "pattern": "^.*$", "title": "stateRole", "type": "string"}}, "title": "sp:get-identity", "type": "object"}, "exampleOutput": {"displayName": "Abdiel admin6ef3c229", "emailAddress": "Abdiel.admin6ef3c229@testmail.com", "managerRef": {"id": "2c91808577d06add0177d630801102ae", "name": "Nicholas.e601fa9592a"}, "riskScore": 0, "attributes": {"uid": "Abdiel.admin6ef3c229", "firstname": "Abdiel", "cloudAuthoritativeSource": "AD-Source", "cloudStatus": "PENDING", "displayName": "Abdiel admin6ef3c229", "internalCloudStatus": "PENDING", "lastSyncDate": "c25374503226ca7d384a6a3b169d38c687d4435fe717f7450c66689ec697e9ab", "workPhone": "512-942-7578", "email": "Abdiel.admin6ef3c229@testmail.com", "lastname": "admin6ef3c229"}, "isManager": true, "profileRole": "ODS-AD-Profile", "profileId": "2c91808f77d142290177d63161990341", "stateRole": "A Role", "detectedRoles": ["Bulk-AP-ODS-AD-Source 0"], "lastRefresh": "1641523378841", "lifecycleStateManuallyUpdated": false, "processingState": "PENDING", "cloudStatus": "PENDING", "id": "2c91808577d06add0177d630740b01c4", "name": "Abdiel.admin6ef3c229", "meta": {"created": "2021-02-24T22:37:15+00:00", "modified": "2022-01-07T02:42:58+00:00", "type": "identities"}}, "versionNumber": 2, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:get-identity-history", "name": "Get Identity History", "description": "Gets audit events related to access changes for a specific identity.", "type": "ACTION", "formFields": [{"config": {"max": 1}, "helpText": "Use the dropdown list to choose an identity or enter a JSONPath expression to an identity\u2019s technical ID to return its audit events.", "label": "Identity", "name": "id", "required": true, "type": "identityPicker"}, {"helpText": "Select a date to return activity from.", "label": "From", "name": "from", "required": false, "type": "text"}, {"helpText": "Enter the type of audit event to return.", "label": "Event Types", "name": "eventTypes", "required": false, "type": "text"}], "outputSchema": {"definitions": {}, "properties": {"identityHistories": {"$id": "#sp:get-identity-history/identityHistories", "default": [], "items": {"$id": "#sp:get-identity-history/items", "properties": {"active": {"$id": "#sp:get-identity-history/items/active", "default": "", "examples": ["Adam Zampa"], "pattern": "^.*$", "title": "active", "type": "string"}, "deletedDate": {"$id": "#sp:get-identity-history/items/deletedDate", "default": "", "examples": ["2007-03-01T13:00:00.000Z"], "format": "date-time", "pattern": "^.*$", "title": "deletedDate", "type": "string"}, "displayName": {"$id": "#sp:get-identity-history/items/displayName", "default": "", "examples": ["Adam Zampa"], "pattern": "^.*$", "title": "displayName", "type": "string"}, "firstName": {"$id": "#sp:get-identity-history/items/firstName", "default": "", "examples": ["Adam"], "pattern": "^.*$", "title": "firstName", "type": "string"}, "id": {"$id": "#sp:get-identity-history/items/id", "default": "", "examples": ["bc693f07e7b645539626c25954c58554"], "pattern": "^.*$", "title": "id", "type": "string"}, "lastName": {"$id": "#sp:get-identity-history/items/lastName", "default": "", "examples": ["Zampa"], "pattern": "^.*$", "title": "lastName", "type": "string"}}, "title": "items", "type": "object"}, "title": "identityHistories", "type": "array"}}, "title": "sp:get-identity-history", "type": "object"}, "exampleOutput": {"identityHistories": [{"id": "bc693f07e7b645539626c25954c58554", "displayName": "Adam Zampa", "firstName": "Adam", "lastName": "Zampa", "active": "Adam Zampa", "deletedDate": "2007-03-01T13:00:00.000Z"}]}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:get-identities", "name": "Get List of Identities", "description": "Get identities based on specific characteristics.", "type": "ACTION", "formFields": [{"helpText": "Choose how to you want to return identities.", "label": "Find Identities By", "name": "searchBy", "options": [{"label": "Search Query", "subfields": [{"helpText": "Enter a search query to find identities.", "label": "Search Query", "name": "inputQuery", "required": true, "type": "text"}], "value": "searchQuery"}, {"label": "Saved Search", "subfields": [{"config": {"max": "1"}, "helpText": "Choose a saved search to find identities.", "label": "Saved Searches", "name": "inputSavedSearch", "required": true, "type": "savedSearchesPicker"}], "value": "savedSearch"}, {"label": "Tags", "subfields": [{"config": {"max": "1"}, "helpText": "Find identities that have a specific tag.", "label": "Tag", "name": "inputTags", "required": true, "type": "tagPicker"}], "value": "tags"}, {"label": "Managers", "subfields": [{"config": {"max": "10"}, "helpText": "Select the managers of the identities you want to retrieve.", "label": "Managers", "name": "inputManagedBy", "required": true, "type": "identityPicker"}], "value": "managedBy"}, {"label": "Direct Reports", "subfields": [{"config": {"max": "10"}, "helpText": "Select the direct reports of the identities you want to retrieve.", "label": "Direct Reports", "name": "inputManagerOf", "required": true, "type": "identityPicker"}], "value": "managerOf"}], "required": true, "type": "multiType"}], "outputSchema": {"definitions": {}, "properties": {"identities": {"$id": "#sp:get-identities/identities", "default": [], "items": {"$id": "#sp:get-identities/items", "properties": {"alias": {"$id": "#sp:get-identities/items/alias", "default": "", "examples": ["alison.ferguso"], "pattern": "^.*$", "title": "alias", "type": "string"}, "attributes": {"$id": "#sp:get-identities/items/attributes", "default": [], "items": {"$id": "#sp:get-identities/items/attributes/items", "properties": {"city": {"$id": "#sp:get-identities/items/attributes/items/city", "default": "", "examples": "", "pattern": "^.*$", "title": "city", "type": "string"}, "cloudLifecycleState": {"$id": "#sp:get-identities/items/attributes/items/cloudLifecycleState", "default": "", "examples": "", "pattern": "^.*$", "title": "cloudLifecycleState", "type": "string"}, "costCenter": {"$id": "#sp:get-identities/items/attributes/items/costCenter", "default": "", "examples": "", "pattern": "^.*$", "title": "costCenter", "type": "string"}, "country": {"$id": "#sp:get-identities/items/attributes/items/country", "default": "", "examples": "", "pattern": "^.*$", "title": "country", "type": "string"}, "department": {"$id": "#sp:get-identities/items/attributes/items/department", "default": "", "examples": "", "pattern": "^.*$", "title": "department", "type": "string"}, "displayName": {"$id": "#sp:get-identities/items/attributes/items/displayName", "default": "", "examples": "", "pattern": "^.*$", "title": "displayName", "type": "string"}, "email": {"$id": "#sp:get-identities/items/attributes/items/email", "default": "", "examples": "", "pattern": "^.*$", "title": "email", "type": "string"}, "endDate": {"$id": "#sp:get-identities/items/attributes/items/endDate", "default": "", "examples": "", "pattern": "^.*$", "title": "endDate", "type": "string"}, "firstname": {"$id": "#sp:get-identities/items/attributes/items/firstname", "default": "", "examples": "", "pattern": "^.*$", "title": "firstname", "type": "string"}, "googleemail": {"$id": "#sp:get-identities/items/attributes/items/googleemail", "default": "", "examples": "", "pattern": "^.*$", "title": "googleemail", "type": "string"}, "ibmiusername": {"$id": "#sp:get-identities/items/attributes/items/ibmiusername", "default": "", "examples": "", "pattern": "^.*$", "title": "ibmiusername", "type": "string"}, "identificationNumber": {"$id": "#sp:get-identities/items/attributes/items/identificationNumber", "default": "", "examples": "", "pattern": "^.*$", "title": "identificationNumber", "type": "string"}, "initials": {"$id": "#sp:get-identities/items/attributes/items/initials", "default": "", "examples": "", "pattern": "^.*$", "title": "initials", "type": "string"}, "jobTitle": {"$id": "#sp:get-identities/items/attributes/items/jobTitle", "default": "", "examples": "", "pattern": "^.*$", "title": "jobTitle", "type": "string"}, "key": {"$id": "#sp:get-identities/items/attributes/items/key", "default": "", "examples": ["phone"], "pattern": "^.*$", "title": "key", "type": "string"}, "lastname": {"$id": "#sp:get-identities/items/attributes/items/lastname", "default": "", "examples": "", "pattern": "^.*$", "title": "lastname", "type": "string"}, "licenseStatus": {"$id": "#sp:get-identities/items/attributes/items/licenseStatus", "default": "", "examples": "", "pattern": "^.*$", "title": "licenseStatus", "type": "string"}, "location": {"$id": "#sp:get-identities/items/attributes/items/location", "default": "", "examples": "", "pattern": "^.*$", "title": "location", "type": "string"}, "locationCode": {"$id": "#sp:get-identities/items/attributes/items/locationCode", "default": "", "examples": "", "pattern": "^.*$", "title": "locationCode", "type": "string"}, "manager": {"$id": "#sp:get-identities/items/attributes/items/manager", "default": "", "examples": "", "pattern": "^.*$", "title": "manager", "type": "string"}, "middleName": {"$id": "#sp:get-identities/items/attributes/items/middleName", "default": "", "examples": "", "pattern": "^.*$", "title": "middleName", "type": "string"}, "name": {"$id": "#sp:get-identities/items/attributes/items/name", "default": "", "examples": ["Phone"], "pattern": "^.*$", "title": "name", "type": "string"}, "nextProcessing": {"$id": "#sp:get-identities/items/attributes/items/nextProcessing", "default": "", "examples": "", "pattern": "^.*$", "title": "nextProcessing", "type": "string"}, "organization": {"$id": "#sp:get-identities/items/attributes/items/organization", "default": "", "examples": "", "pattern": "^.*$", "title": "organization", "type": "string"}, "personalEmail": {"$id": "#sp:get-identities/items/attributes/items/personalEmail", "default": "", "examples": "", "pattern": "^.*$", "title": "personalEmail", "type": "string"}, "phone": {"$id": "#sp:get-identities/items/attributes/items/phone", "default": "", "examples": "", "pattern": "^.*$", "title": "phone", "type": "string"}, "postalCode": {"$id": "#sp:get-identities/items/attributes/items/postalCode", "default": "", "examples": "", "pattern": "^.*$", "title": "postalCode", "type": "string"}, "preferredLanguage": {"$id": "#sp:get-identities/items/attributes/items/preferredLanguage", "default": "", "examples": "", "pattern": "^.*$", "title": "preferredLanguage", "type": "string"}, "preferredName": {"$id": "#sp:get-identities/items/attributes/items/preferredName", "default": "", "examples": "", "pattern": "^.*$", "title": "preferredName", "type": "string"}, "startDate": {"$id": "#sp:get-identities/items/attributes/items/startDate", "default": "", "examples": "", "pattern": "^.*$", "title": "startDate", "type": "string"}, "state": {"$id": "#sp:get-identities/items/attributes/items/state", "default": "", "examples": "", "pattern": "^.*$", "title": "state", "type": "string"}, "streetAddress": {"$id": "#sp:get-identities/items/attributes/items/streetAddress", "default": "", "examples": "", "pattern": "^.*$", "title": "streetAddress", "type": "string"}, "timezone": {"$id": "#sp:get-identities/items/attributes/items/timezone", "default": "", "examples": "", "pattern": "^.*$", "title": "timezone", "type": "string"}, "title": {"$id": "#sp:get-identities/items/attributes/items/title", "default": "", "examples": "", "pattern": "^.*$", "title": "title", "type": "string"}, "type": {"$id": "#sp:get-identities/items/attributes/items/type", "default": "", "examples": "", "pattern": "^.*$", "title": "type", "type": "string"}, "uid": {"$id": "#sp:get-identities/items/attributes/items/uid", "default": "", "examples": "", "pattern": "^.*$", "title": "uid", "type": "string"}, "value": {"$id": "#sp:get-identities/items/attributes/items/value", "default": "", "examples": ["5125551234"], "pattern": "^.*$", "title": "value", "type": "string"}, "workPhone": {"$id": "#sp:get-identities/items/attributes/items/workPhone", "default": "", "examples": "", "pattern": "^.*$", "title": "workPhone", "type": "string"}}, "title": "items", "type": "object"}, "title": "attributes", "type": "array"}, "email": {"$id": "#sp:get-identities/items/email", "default": "", "examples": ["alison.ferguso@acme-solar.com"], "format": "email", "pattern": "^.*$", "title": "email", "type": "string"}, "id": {"$id": "#sp:get-identities/items/id", "default": "", "examples": ["2c9180857182305e0171993735622948"], "pattern": "^.*$", "title": "id", "type": "string"}, "manager": {"$id": "#sp:get-identities/items/manager", "properties": {"id": {"$id": "#sp:get-identities/items/manager/id", "default": "", "examples": ["2c9180a46faadee4016fb4e018c20639"], "pattern": "^.*$", "title": "Id", "type": "string"}, "name": {"$id": "#sp:get-identities/items/manager/name", "default": "", "examples": ["Thomas Edison"], "pattern": "^.*$", "title": "Name", "type": "string"}, "type": {"$id": "#sp:get-identities/items/manager/type", "default": "", "examples": ["IDENTITY"], "pattern": "^.*$", "title": "Type", "type": "string"}}, "title": "manager", "type": "object"}, "name": {"$id": "#sp:get-identities/items/name", "default": "", "examples": ["Alison Ferguso"], "pattern": "^.*$", "title": "name", "type": "string"}, "status": {"$id": "#sp:get-identities/items/status", "default": "", "examples": ["Active"], "pattern": "^.*$", "title": "status", "type": "string"}}, "title": "items", "type": "object"}, "title": "identities", "type": "array"}}, "title": "sp:get-identities", "type": "object"}, "exampleOutput": {"identities": [{"id": "2c9180857182305e0171993735622948", "name": "Alison Ferguso", "alias": "alison.ferguso", "email": "alison.ferguso@acme-solar.com", "status": "Active", "manager": {"type": "IDENTITY", "id": "2c9180a46faadee4016fb4e018c20639", "name": "Thomas Edison"}, "attributes": [{"key": "phone", "name": "Phone", "value": "5125551234"}]}]}, "versionNumber": 2, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:get-pending-approvals", "name": "Get Pending Access Requests", "description": "Gets up to 250 pending access requests.", "type": "ACTION", "formFields": [{"config": {"max": 1}, "helpText": "Use the dropdown list to choose an identity or enter a JSONPath expression to an identity\u2019s technical ID to return all access requests that list that identity as a reviewer.", "label": "Reviewer", "name": "id", "required": false, "type": "identityPicker"}, {"helpText": "Filter which requests are returned using the V3 API Standard Collection Parameters.", "label": "Filter Results", "name": "filter", "required": false, "type": "text"}], "outputSchema": {"definitions": {}, "properties": {"pendingApprovals": {"$id": "#sp:get-pending-approvals/pendingApprovals", "default": [], "items": {"$id": "#sp:get-pending-approvals/items", "properties": {"actionInProcess": {"$id": "#sp:get-pending-approvals/items/actionInProcess", "default": "", "examples": ["APPROVED"], "pattern": "^.*$", "title": "actionInProcess", "type": "string"}, "commentRequiredWhenRejected": {"$id": "#sp:get-pending-approvals/items/commentRequiredWhenRejected", "default": true, "examples": [true], "title": "commentRequiredWhenRejected", "type": "boolean"}, "created": {"$id": "#sp:get-pending-approvals/items/created", "default": "", "examples": ["2017-07-11T18:45:37.098Z"], "format": "date-time", "pattern": "^.*$", "title": "created", "type": "string"}, "currentRemoveDate": {"$id": "#sp:get-pending-approvals/items/currentRemoveDate", "default": "", "examples": ["2020-07-11T00:00:00Z"], "format": "date-time", "pattern": "^.*$", "title": "currentRemoveDate", "type": "string"}, "forwardHistory": {"$id": "#sp:get-pending-approvals/items/forwardHistory", "default": [], "items": {"$id": "#sp:get-pending-approvals/items/forwardHistory/items", "properties": {"comment": {"$id": "#sp:get-pending-approvals/items/forwardHistory/items/comment", "default": "", "examples": ["Fusce id orci vel consectetur amet ipsum quam."], "pattern": "^.*$", "title": "comment", "type": "string"}, "modified": {"$id": "#sp:get-pending-approvals/items/forwardHistory/items/modified", "default": "", "examples": ["2019-08-23T18:52:57.398Z"], "format": "date-time", "pattern": "^.*$", "title": "Modified", "type": "string"}, "newApproverName": {"$id": "#sp:get-pending-approvals/items/forwardHistory/items/newApproverName", "default": "", "examples": ["al.volta"], "pattern": "^.*$", "title": "newApproverName", "type": "string"}, "oldApproverName": {"$id": "#sp:get-pending-approvals/items/forwardHistory/items/oldApproverName", "default": "", "examples": ["frank.mir"], "pattern": "^.*$", "title": "oldApproverName", "type": "string"}}, "title": "items", "type": "object"}, "title": "forwardHistory", "type": "array"}, "id": {"$id": "#sp:get-pending-approvals/items/id", "default": "", "examples": ["2c91808568c529c60168cca6f90c1344"], "pattern": "^.*$", "title": "id", "type": "string"}, "modified": {"$id": "#sp:get-pending-approvals/items/modified", "default": "", "examples": ["2018-07-25T20:22:28.104Z"], "format": "date-time", "pattern": "^.*$", "title": "modified", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/name", "default": "", "examples": ["jane doe"], "pattern": "^.*$", "title": "name", "type": "string"}, "owner": {"$id": "#sp:get-pending-approvals/items/owner", "properties": {"id": {"$id": "#sp:get-pending-approvals/items/owner/id", "default": "", "examples": ["2c91808568c529c60168cca6f90c1313"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/owner/name", "default": "", "examples": ["William Wilson"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:get-pending-approvals/items/owner/type", "default": "", "examples": ["IDENTITY"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "owner", "type": "object"}, "previousReviewersComments": {"$id": "#sp:get-pending-approvals/items/previousReviewersComments", "default": [], "items": {"$id": "#sp:get-pending-approvals/items/previousReviewersComments/items", "properties": {"author": {"$id": "#sp:get-pending-approvals/items/previousReviewersComments/items/author", "properties": {"id": {"$id": "#sp:get-pending-approvals/items/previousReviewersComments/items/author/id", "default": "", "examples": ["2c91808568c529c60168cca6f90c1313"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/previousReviewersComments/items/author/name", "default": "", "examples": ["Adam Kennedy"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:get-pending-approvals/items/previousReviewersComments/items/author/type", "default": "", "examples": ["IDENTITY"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "author", "type": "object"}, "comment": {"$id": "#sp:get-pending-approvals/items/previousReviewersComments/items/comment", "default": "", "examples": ["Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat"], "pattern": "^.*$", "title": "comment", "type": "string"}, "created": {"$id": "#sp:get-pending-approvals/items/previousReviewersComments/items/created", "default": "", "examples": ["2017-07-11T18:45:37.098Z"], "format": "date-time", "pattern": "^.*$", "title": "created", "type": "string"}}, "title": "items", "type": "object"}, "title": "previousReviewersComments", "type": "array"}, "removeDate": {"$id": "#sp:get-pending-approvals/items/removeDate", "default": "", "examples": ["2020-07-11T00:00:00Z"], "format": "date-time", "pattern": "^.*$", "title": "removeDate", "type": "string"}, "removeDateUpdateRequested": {"$id": "#sp:get-pending-approvals/items/removeDateUpdateRequested", "default": true, "examples": [true], "title": "removeDateUpdateRequested", "type": "boolean"}, "requestCreated": {"$id": "#sp:get-pending-approvals/items/requestCreated", "default": "", "examples": ["2017-07-11T18:45:35.098Z"], "format": "date-time", "pattern": "^.*$", "title": "requestCreated", "type": "string"}, "requestType": {"$id": "#sp:get-pending-approvals/items/requestType", "default": "", "examples": ["GRANT_ACCESS"], "pattern": "^.*$", "title": "requestType", "type": "string"}, "requestedFor": {"$id": "#sp:get-pending-approvals/items/requestedFor", "properties": {"id": {"$id": "#sp:get-pending-approvals/items/requestedFor/id", "default": "", "examples": ["2c91808568c529c60168cca6f90c1313"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/requestedFor/name", "default": "", "examples": ["William Wilson"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:get-pending-approvals/items/requestedFor/type", "default": "", "examples": ["IDENTITY"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "requestedFor", "type": "object"}, "requestedObject": {"$id": "#sp:get-pending-approvals/items/requestedObject", "properties": {"description": {"$id": "#sp:get-pending-approvals/items/requestedObject/description", "default": "", "examples": ["A description"], "pattern": "^.*$", "title": "description", "type": "string"}, "id": {"$id": "#sp:get-pending-approvals/items/requestedObject/id", "default": "", "examples": ["2c91808568c529c60168cca6f90c1313"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/requestedObject/name", "default": "", "examples": ["William Wilson"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:get-pending-approvals/items/requestedObject/type", "default": "", "examples": ["ROLE"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "requestedObject", "type": "object"}, "requester": {"$id": "#sp:get-pending-approvals/items/requester", "properties": {"id": {"$id": "#sp:get-pending-approvals/items/requester/id", "default": "", "examples": ["2c91808568c529c60168cca6f90c1313"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/requester/name", "default": "", "examples": ["William Wilson"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:get-pending-approvals/items/requester/type", "default": "", "examples": ["IDENTITY"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "requester", "type": "object"}, "requesterComment": {"$id": "#sp:get-pending-approvals/items/requesterComment", "properties": {"author": {"$id": "#sp:get-pending-approvals/items/requesterComment/author", "properties": {"id": {"$id": "#sp:get-pending-approvals/items/requesterComment/author/id", "default": "", "examples": ["2c91808568c529c60168cca6f90c1313"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/requesterComment/author/name", "default": "", "examples": ["Adam Kennedy"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:get-pending-approvals/items/requesterComment/author/type", "default": "", "examples": ["IDENTITY"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "author", "type": "object"}, "comment": {"$id": "#sp:get-pending-approvals/items/requesterComment/comment", "default": "", "examples": ["Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat"], "pattern": "^.*$", "title": "comment", "type": "string"}, "created": {"$id": "#sp:get-pending-approvals/items/requesterComment/created", "default": "", "examples": ["2017-07-11T18:45:37.098Z"], "format": "date-time", "pattern": "^.*$", "title": "created", "type": "string"}}, "title": "requesterComment", "type": "object"}, "sodViolationContext": {"$id": "#sp:get-pending-approvals/items/sodViolationContext", "properties": {"state": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/state", "default": "", "examples": ["SUCCESS"], "pattern": "^.*$", "title": "state", "type": "string"}, "uuid": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/uuid", "default": "", "examples": ["f73d16e9-a038-46c5-b217-1246e15fdbdd"], "format": "uuid", "pattern": "^.*$", "title": "uuid", "type": "string"}, "violationCheckResult": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult", "properties": {"clientMetadata": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/clientMetadata", "properties": {"requestedAppId": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/clientMetadata/requestedAppId", "default": "", "examples": ["2c91808f7892918f0178b78da4a305a1"], "pattern": "^.*$", "title": "requestedAppId", "type": "string"}, "requestedAppName": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/clientMetadata/requestedAppName", "default": "", "examples": ["test-app"], "pattern": "^.*$", "title": "requestedAppName", "type": "string"}}, "title": "clientMetadata", "type": "object"}, "message": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/message", "properties": {"locale": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/message/locale", "default": "", "examples": ["en-US"], "pattern": "^.*$", "title": "locale", "type": "string"}, "localeOrigin": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/message/localeOrigin", "default": "", "examples": ["DEFAULT"], "pattern": "^.*$", "title": "localeOrigin", "type": "string"}, "text": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/message/text", "default": "", "examples": ["The request was syntactically correct but its content is semantically invalid."], "pattern": "^.*$", "title": "text", "type": "string"}}, "title": "message", "type": "object"}, "violatedPolicies": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violatedPolicies", "default": [], "items": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violatedPolicies/items", "properties": {"id": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violatedPolicies/items/id", "default": "", "examples": ["ff8081814d977c21014da056804a0af3"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violatedPolicies/items/name", "default": "", "examples": ["Github"], "pattern": "^.*$", "title": "name", "type": "string"}}, "title": "items", "type": "object"}, "title": "violatedPolicies", "type": "array"}, "violationContexts": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts", "default": [], "items": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items", "properties": {"conflictingAccessCriteria": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/conflictingAccessCriteria", "properties": {"leftCriteria": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/conflictingAccessCriteria/leftCriteria", "properties": {"criteriaList": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/conflictingAccessCriteria/leftCriteria/criteriaList", "default": [], "items": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/conflictingAccessCriteria/leftCriteria/criteriaList/items", "properties": {}, "title": "items", "type": "object"}, "title": "criteriaList", "type": "array"}}, "title": "leftCriteria", "type": "object"}, "rightCriteria": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/conflictingAccessCriteria/rightCriteria", "properties": {"criteriaList": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/conflictingAccessCriteria/rightCriteria/criteriaList", "default": [], "items": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/conflictingAccessCriteria/rightCriteria/criteriaList/items", "properties": {}, "title": "items", "type": "object"}, "title": "criteriaList", "type": "array"}}, "title": "rightCriteria", "type": "object"}}, "title": "conflictingAccessCriteria", "type": "object"}, "policy": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/policy", "properties": {"id": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/policy/id", "default": "", "examples": ["2c91808568c529c60168cca6f90c1313"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/policy/name", "default": "", "examples": ["William Wilson"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"$id": "#sp:get-pending-approvals/items/sodViolationContext/violationCheckResult/violationContexts/items/policy/type", "default": "", "examples": ["IDENTITY"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "policy", "type": "object"}}, "title": "items", "type": "object"}, "title": "violationContexts", "type": "array"}}, "title": "violationCheckResult", "type": "object"}}, "title": "sodViolationContext", "type": "object"}}, "title": "items", "type": "object"}, "title": "pendingApprovals", "type": "array"}}, "title": "sp:get-pending-approvals", "type": "object"}, "exampleOutput": {"pendingApprovals": [{"id": "2c91808568c529c60168cca6f90c1344", "name": "jane doe", "created": "2017-07-11T18:45:37.098Z", "modified": "2018-07-25T20:22:28.104Z", "requestCreated": "2017-07-11T18:45:35.098Z", "requestType": "GRANT_ACCESS", "requester": {"type": "IDENTITY", "id": "2c91808568c529c60168cca6f90c1313", "name": "William Wilson"}, "requestedFor": {"type": "IDENTITY", "id": "2c91808568c529c60168cca6f90c1313", "name": "William Wilson"}, "owner": {"type": "IDENTITY", "id": "2c91808568c529c60168cca6f90c1313", "name": "William Wilson"}, "requestedObject": {"id": "2c91808568c529c60168cca6f90c1313", "name": "William Wilson", "description": "A description", "type": "ROLE"}, "requesterComment": {"comment": "Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat", "author": {"type": "IDENTITY", "id": "2c91808568c529c60168cca6f90c1313", "name": "Adam Kennedy", "created": "2017-07-11T18:45:37.098Z"}}, "previousReviewersComments": [{"comment": "Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum erat", "author": {"type": "IDENTITY", "id": "2c91808568c529c60168cca6f90c1313", "name": "Adam Kennedy"}, "created": "2017-07-11T18:45:37.098Z"}], "forwardHistory": [{"oldApproverName": "frank.mir", "newApproverName": "al.volta", "comment": "Fusce id orci vel consectetur amet ipsum quam.", "modified": "2019-08-23T18:52:57.398Z"}], "commentRequiredWhenRejected": true, "actionInProcess": "APPROVED", "removeDate": "2020-07-11T00:00:00Z", "removeDateUpdateRequested": true, "currentRemoveDate": "2020-07-11T00:00:00Z", "sodViolationContext": {"state": "SUCCESS", "uuid": "f73d16e9-a038-46c5-b217-1246e15fdbdd", "violationCheckResult": {"message": {"locale": "en-US", "localeOrigin": "DEFAULT", "text": "The request was syntactically correct but its content is semantically invalid."}, "clientMetadata": {"requestedAppName": "test-app", "requestedAppId": "2c91808f7892918f0178b78da4a305a1"}, "violationContexts": [{"policy": {"type": "IDENTITY", "id": "2c91808568c529c60168cca6f90c1313", "name": "William Wilson"}, "conflictingAccessCriteria": {"leftCriteria": {"criteriaList": [{}]}, "rightCriteria": {"criteriaList": [{}]}}}], "violatedPolicies": [{"id": "ff8081814d977c21014da056804a0af3", "name": "Github"}]}}}]}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:http", "name": "HTTP Request", "description": "Makes an HTTP request to an external system.", "type": "ACTION", "formFields": [{"config": {"allowClear": true}, "label": "Authentication Type", "name": "authenticationType", "options": [{"label": "Basic Authentication", "subfields": [{"label": "User Name", "name": "basicAuthUserName", "required": true, "type": "text"}, {"label": "Password", "name": "basicAuthPassword", "required": true, "type": "secret"}], "value": "basic"}, {"label": "Custom Authorization", "subfields": [{"helpText": "The name, or key, required by the HTTP service.", "label": "Header Name", "name": "headerAuthName", "required": true, "type": "text"}, {"helpText": "The value required by the HTTP service.", "label": "Header Value", "name": "headerAuthValue", "required": true, "type": "secret"}], "value": "header"}, {"label": "OAuth 2.0 - Client Credentials Grant", "subfields": [{"label": "Token URL", "name": "oAuthTokenUrl", "required": true, "type": "url"}, {"label": "Client ID", "name": "oAuthClientId", "required": true, "type": "text"}, {"label": "Client Secret", "name": "oAuthClientSecret", "required": true, "type": "secret"}, {"config": {"allowClear": true}, "helpText": "Choose where to include the OAuth credentials based on the API\u2019s requirements. Most APIs require the credentials in the header.", "label": "Credential Location", "name": "oAuthCredentialLocation", "options": [{"default": true, "label": "Header", "value": "oAuthInHeader"}, {"label": "Body", "value": "oAuthInBody"}], "required": false, "type": "select", "valueOnly": true}, {"helpText": "The scope parameter required by some third-party systems. Separate multiple values in a single scope parameter with spaces. Separate multiple values in multiple parameters using new lines.", "label": "Scope", "name": "oAuthScope", "required": false, "type": "textarea", "valueOnly": true}], "value": "OAuth"}], "required": false, "type": "multiType"}, {"helpText": "The service endpoint\u2019s URL.", "label": "Request URL", "name": "url", "required": true, "type": "url"}, {"helpText": "Add one set of parameters per line.", "label": "Request URL Parameters", "name": "urlParams", "placeholder": "Key:Value", "required": false, "type": "keyValuePairs", "valueOnly": true}, {"helpText": "Add one set of headers per line.", "label": "Request Headers", "name": "requestHeaders", "placeholder": "Header name:Value", "required": false, "type": "keyValuePairs", "valueOnly": true}, {"helpText": "The HTTP method to use.", "label": "Method", "name": "method", "options": [{"label": "DELETE", "value": "delete"}, {"label": "GET", "value": "get"}, {"label": "PATCH", "value": "patch"}, {"label": "POST", "value": "post"}, {"label": "PUT", "value": "put"}], "required": true, "type": "select", "valueOnly": true}, {"config": {"allowClear": true}, "default": null, "helpText": "Select the content type of the request body.", "label": "Request Content Type", "name": "requestContentType", "options": [{"label": "CSV", "subfields": [{"helpText": "Enter the body of your request in CSV format.", "label": "Request Body", "name": "csvRequestBody", "required": false, "type": "textarea", "valueOnly": true}], "value": "csv"}, {"label": "Text", "subfields": [{"helpText": "Enter the body of your request in plain text.", "label": "Request Body", "name": "textRequestBody", "required": false, "type": "textarea", "valueOnly": false}], "value": "text"}, {"label": "JSON", "subfields": [{"helpText": "Enter the body of your request in JSON format.", "label": "Request Body", "name": "jsonRequestBody", "required": false, "type": "json"}], "value": "json"}, {"label": "JSON Patch", "subfields": [{"helpText": "Enter the body of your request in an array of JSON Patch operation objects.", "label": "Request Body", "name": "jsonPatchRequestBody", "required": false, "type": "json"}], "value": "json-patch+json"}, {"label": "Form", "subfields": [{"helpText": "Enter the body of your request with one key-value pair per line.", "label": "Request Body", "name": "formRequestBody", "required": false, "type": "keyValuePairs"}], "value": "form"}], "required": false, "type": "multiType"}], "outputSchema": {"definitions": {}, "properties": {"body": {"$id": "#sp:http/body", "pattern": "^.*$", "title": "body", "type": "object"}, "headers": {"$id": "#sp:http/headers", "pattern": "^.*$", "title": "headers", "type": "array"}, "statusCode": {"$id": "#sp:http/statusCode", "pattern": "^.*$", "title": "statusCode", "type": "number"}}, "title": "sp:http", "type": "object"}, "exampleOutput": {"body": {"foo": "bar"}, "headers": [], "statusCode": 200}, "versionNumber": 2, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "idn:identity-attributes-changed", "name": "Identity Attributes Changed", "description": "One or more identity attributes changed.", "type": "EVENT", "inputExample": {"changes": [{"attribute": "department", "newValue": "marketing", "oldValue": "sales"}, {"attribute": "manager", "newValue": {"id": "ee769173319b41d19ccec6c235423236c", "name": "ed.engineer", "type": "IDENTITY"}, "oldValue": {"id": "ee769173319b41d19ccec6c235423237b", "name": "william.wilson", "type": "IDENTITY"}}, {"attribute": "email", "newValue": "john.doe@gmail.com", "oldValue": "john.doe@hotmail.com"}], "identity": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "john.doe", "type": "IDENTITY"}}, "formFields": [{"label": "Description", "name": "description", "required": false, "type": "textarea", "valueOnly": true}, {"config": {"advancedSubfields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "basicSubfields": [{"config": {"max": 1}, "label": "Attribute to Filter", "name": "attributeToFilter", "type": "identityAttributePicker", "valueOnly": true}]}, "name": "advanced", "type": "advancedToggle"}], "outputSchema": {"$ref": "#/definitions/record:IdentityAttributesChangedEvent", "definitions": {"record:AttributeChange": {"additionalProperties": true, "optional": ["oldValue", "newValue"], "properties": {"attribute": {"type": "string"}, "newValue": {"oneOf": [{"type": "null"}, {"type": "string"}, {"type": "boolean"}, {"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}, {"additionalProperties": {"oneOf": [{"type": "null"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "object"}]}, "oldValue": {"oneOf": [{"type": "null"}, {"type": "string"}, {"type": "boolean"}, {"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}, {"additionalProperties": {"oneOf": [{"type": "null"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "object"}]}}, "required": ["attribute"], "type": "object"}, "record:IdentityAttributesChangedEvent": {"additionalProperties": true, "properties": {"changes": {"default": [], "items": {"$ref": "#/definitions/record:AttributeChange"}, "type": "array"}, "identity": {"$ref": "#/definitions/record:IdentityReference"}}, "required": ["identity", "changes"], "type": "object"}, "record:IdentityReference": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:identity-created", "name": "Identity Created", "description": "An identity was created.", "type": "EVENT", "inputExample": {"attributes": {"created": "2020-04-27T16:48:33.597Z", "customAttribute1": "customValue", "customAttribute2": "customValue2", "department": "Sales", "displayName": "John Doe", "email": "john.doe@gmail.com", "employeeNumber": "E009", "firstname": "John", "identificationNumber": "E009", "inactive": "true", "isManager": false, "lastname": "Doe", "manager": {"id": "ee769173319b41d19ccec6c235423237b", "name": "william.wilson", "type": "IDENTITY"}, "phone": null, "uid": "E009"}, "identity": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "john.doe", "type": "IDENTITY"}}, "formFields": [{"label": "Description", "name": "description", "required": false, "type": "textarea", "valueOnly": true}, {"config": {"advancedSubfields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "basicSubfields": [{"label": "Attribute to Filter", "name": "attributeToFilter", "options": [{"label": "cloudLifecycleState", "subfields": [{"label": "Operator", "name": "operatorCloudLifecycleState", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "cloudLifecycleState"}, {"label": "department", "subfields": [{"label": "Operator", "name": "operatorDepartment", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "department"}, {"label": "nextProcessing", "subfields": [{"label": "Operator", "name": "operatorNextProcessing", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "nextProcessing"}, {"label": "postalCode", "subfields": [{"label": "Operator", "name": "operatorPostalCode", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "postalCode"}, {"label": "googleemail", "subfields": [{"label": "Operator", "name": "operatorGoogleemail", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "googleemail"}, {"label": "lastname", "subfields": [{"label": "Operator", "name": "operatorLastname", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "lastname"}, {"label": "state", "subfields": [{"label": "Operator", "name": "operatorState", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "state"}, {"label": "workPhone", "subfields": [{"label": "Operator", "name": "operatorWorkPhone", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "workPhone"}, {"label": "email", "subfields": [{"label": "Operator", "name": "operatorEmail", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "email"}, {"label": "isManager", "subfields": [{"label": "Operator", "name": "operatorIsManager", "options": [{"label": "Compare Boolean: Equals", "value": "BooleanEquals"}], "type": "select", "valueOnly": true}], "value": "isManager"}, {"label": "middleName", "subfields": [{"label": "Operator", "name": "operatorMiddleName", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "middleName"}, {"label": "preferredName", "subfields": [{"label": "Operator", "name": "operatorPreferredName", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "preferredName"}, {"label": "country", "subfields": [{"label": "Operator", "name": "operatorCountry", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "country"}, {"label": "employeeNumber", "subfields": [{"label": "Operator", "name": "operatorEmployeeNumber", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "employeeNumber"}, {"label": "ibmiusername", "subfields": [{"label": "Operator", "name": "operatorIbmiusername", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "ibmiusername"}, {"label": "identificationNumber", "subfields": [{"label": "Operator", "name": "operatorIdentificationNumber", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "identificationNumber"}, {"label": "licenseStatus", "subfields": [{"label": "Operator", "name": "operatorLicenseStatus", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "licenseStatus"}, {"label": "manager", "subfields": [{"label": "Operator", "name": "operatorManager", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "manager"}, {"label": "personalEmail", "subfields": [{"label": "Operator", "name": "operatorPersonalEmail", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "personalEmail"}, {"label": "title", "subfields": [{"label": "Operator", "name": "operatorTitle", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "title"}, {"label": "displayName", "subfields": [{"label": "Operator", "name": "operatorDisplayName", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "displayName"}, {"label": "inactive", "subfields": [{"label": "Operator", "name": "operatorInactive", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "inactive"}, {"label": "initials", "subfields": [{"label": "Operator", "name": "operatorInitials", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "initials"}, {"label": "locationCode", "subfields": [{"label": "Operator", "name": "operatorLocationCode", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "locationCode"}, {"label": "type", "subfields": [{"label": "Operator", "name": "operatorType", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "type"}, {"label": "uid", "subfields": [{"label": "Operator", "name": "operatorUid", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "uid"}, {"label": "firstname", "subfields": [{"label": "Operator", "name": "operatorFirstname", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "firstname"}, {"label": "phone", "subfields": [{"label": "Operator", "name": "operatorPhone", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "phone"}, {"label": "costCenter", "subfields": [{"label": "Operator", "name": "operatorCostCenter", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "costCenter"}, {"label": "location", "subfields": [{"label": "Operator", "name": "operatorLocation", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "location"}, {"label": "timezone", "subfields": [{"label": "Operator", "name": "operatorTimezone", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "timezone"}, {"label": "city", "subfields": [{"label": "Operator", "name": "operatorCity", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "city"}, {"label": "created", "subfields": [{"label": "Operator", "name": "operatorCreated", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "created"}, {"label": "endDate", "subfields": [{"label": "Operator", "name": "operatorEndDate", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "endDate"}, {"label": "jobTitle", "subfields": [{"label": "Operator", "name": "operatorJobTitle", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "jobTitle"}, {"label": "organization", "subfields": [{"label": "Operator", "name": "operatorOrganization", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "organization"}, {"label": "preferredLanguage", "subfields": [{"label": "Operator", "name": "operatorPreferredLanguage", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "preferredLanguage"}, {"label": "startDate", "subfields": [{"label": "Operator", "name": "operatorStartDate", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "startDate"}, {"label": "streetAddress", "subfields": [{"label": "Operator", "name": "operatorStreetAddress", "options": [{"label": "Compare Strings: Equals", "value": "StringEquals"}, {"label": "Compare Strings: Does Not Equal", "value": "StringDoesNotEquals"}, {"label": "Compare Strings: Contains", "value": "StringContains"}, {"label": "Compare Strings: Does Not Contain", "value": "StringDoesNotContains"}, {"label": "Compare Strings: Is Less Than", "value": "StringLessThan"}, {"label": "Compare Strings: Is Greater Than", "value": "StringGreaterThan"}, {"label": "Compare Strings: Is Less Than or Equal To", "value": "StringLessThanEquals"}, {"label": "Compare Strings: Is Greater Than or Equal To", "value": "StringGreaterThanEquals"}, {"label": "Compare Strings: Starts With", "value": "StringStartsWith"}, {"label": "Compare Strings: Ends With", "value": "StringEndsWith"}, {"label": "Compare Timestamps: Is on the Date", "value": "TimestampEquals"}, {"label": "Compare Timestamps: Is Before", "value": "TimestampLessThan"}, {"label": "Compare Timestamps: Is After", "value": "TimestampGreaterThan"}, {"label": "Compare Timestamps: Is On or Before", "value": "TimestampLessThanEquals"}, {"label": "Compare Timestamps: Is On of After", "value": "TimestampGreaterThanEquals"}, {"label": "Compare Timestamps: Is Before X Days Ago", "value": "TimestampLessThanXDay"}, {"label": "Compare Timestamps: Is After X Days Ago", "value": "TimestampGreaterThanXDay"}, {"label": "Compare Timestamps: Is On or Before X Days Ago", "value": "TimestampLessThanEqualsXDay"}, {"label": "Compare Timestamps: Is On or After X Days Ago", "value": "TimestampGreaterThanEqualsXDay"}, {"label": "Compare Timestamps: Is Before X Days in the Future", "value": "TimestampLessThanXDayFuture"}, {"label": "Compare Timestamps: Is After X Days in the Future", "value": "TimestampGreaterThanXDayFuture"}, {"label": "Compare Timestamps: Is On or Before X Days in the Future", "value": "TimestampLessThanEqualsXDayFuture"}, {"label": "Compare Timestamps: Is On or After X Days in the Future", "value": "TimestampGreaterThanEqualsXDayFuture"}], "type": "select", "valueOnly": true}], "value": "streetAddress"}], "required": false, "type": "multiType"}, {"helpText": "Enter a value of your selected attribute", "label": "Attribute Value", "name": "attributeValue", "type": "text", "valueOnly": true}]}, "name": "advanced", "type": "advancedToggle"}], "outputSchema": {"$ref": "#/definitions/record:IdentityCreatedEvent", "definitions": {"record:Attributes": {"additionalProperties": true, "optional": ["created", "department", "displayName", "email", "employeeNumber", "firstname", "identificationNumber", "inactive", "isManager", "lastname", "manager", "phone", "uid", "city", "costCenter", "ibmiusername", "initials", "jobTitle", "location", "locationCode", "middleName", "nextProcessing", "organization", "personalEmail", "postalCode", "preferredLanguage", "preferredName", "state", "streetAddress", "timezone", "title", "type", "cloudLifecycleState", "country", "endDate", "googleemail", "licenseStatus", "startDate", "workPhone"], "properties": {"city": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "cloudLifecycleState": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "costCenter": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "country": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "created": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "department": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "displayName": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "email": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "employeeNumber": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "endDate": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "firstname": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "googleemail": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "ibmiusername": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "identificationNumber": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "inactive": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "initials": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "isManager": {"oneOf": [{"type": "null"}, {"type": "boolean"}]}, "jobTitle": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "lastname": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "licenseStatus": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "location": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "locationCode": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "manager": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:Manager"}]}, "middleName": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "nextProcessing": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "organization": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "personalEmail": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "phone": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "postalCode": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "preferredLanguage": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "preferredName": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "startDate": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "state": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "streetAddress": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "timezone": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "title": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "uid": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "workPhone": {"oneOf": [{"type": "null"}, {"type": "string"}]}}, "required": [], "type": "object"}, "record:IdentityCreatedEvent": {"additionalProperties": true, "properties": {"attributes": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:Attributes"}]}, "identity": {"$ref": "#/definitions/record:IdentityReference"}}, "required": ["identity", "attributes"], "type": "object"}, "record:IdentityReference": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "type": "object"}, "record:Manager": {"additionalProperties": true, "properties": {"id": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "name": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": {"oneOf": [{"type": "null"}, {"type": "string"}]}}, "required": ["id", "name", "type"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:interactive-form", "name": "Interactive Form", "description": "Assigns the selected form to the user who launched the Interactive Process with a deadline of 30 days.", "type": "ACTION", "formFields": [{"helpText": "Select a form from the dropdown list. Search for a form by name or description.", "label": "Form", "name": "formDefinitionId", "required": true, "type": "formPicker", "valueOnly": true}, {"helpText": "Enter a title for the message displayed in the Interactive Process with the form.", "label": "Title", "name": "title", "required": true, "type": "text"}, {"helpText": "Add a message to display in the Interactive Process with the form.", "label": "Message", "name": "message", "required": false, "type": "htmlEditor"}], "outputSchema": {"definitions": {}, "properties": {"deadline": {"$id": "#sp:interactive-form/deadline", "pattern": "^.*$", "title": "deadline", "type": "string"}, "formData": {"$id": "#sp:interactive-form/formData", "pattern": "^.*$", "title": "formData", "type": "object"}, "formState": {"$id": "#sp:interactive-form/formState", "enum": ["ASSIGNED", "IN_PROGRESS", "SUBMITTED", "COMPLETED", "CANCELLED"], "title": "formState", "type": "string"}, "interactiveProcessId": {"$id": "#sp:interactive-form/interactiveProcessId", "pattern": "^.*$", "title": "interactiveProcessId", "type": "string"}, "launchedBy": {"$id": "#sp:interactive-form/launchedBy", "additionalProperties": false, "properties": {"id": {"$id": "#sp:interactive-form/launchedBy/id", "title": "id", "type": "string"}, "type": {"$id": "#sp:interactive-form/launchedBy/type", "title": "type", "type": "string"}}, "required": ["id", "type"], "title": "launchedBy", "type": "object"}, "submitted": {"$id": "#sp:interactive-form/submitted", "title": "submitted", "type": "boolean"}}, "title": "sp:interactive-form", "type": "object"}, "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": true, "isSimulationEnabled": true}
{"id": "sp:interactive-message", "name": "Interactive Message", "description": "Displays a message to the user in the Interactive Process.", "type": "ACTION", "formFields": [{"helpText": "Select a category for the Interactive Process block the message displays in.", "label": "Category", "name": "category", "options": [{"label": "Info", "value": "INFO"}, {"label": "Warning", "value": "WARN"}, {"label": "Error", "value": "ERROR"}], "required": true, "type": "select", "valueOnly": true}, {"helpText": "Enter a title to display with the message.", "label": "Title", "name": "title", "required": true, "type": "text"}, {"helpText": "Enter a message to display in the Interactive Process.", "label": "Message", "name": "message", "required": false, "type": "htmlEditor"}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "idn:interactive-process-launched", "name": "Interactive Trigger", "description": "Interactive Process Launched by a user.", "type": "EVENT", "inputExample": {"config": {"foo": "bar", "foo1": "bar1"}}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:InteractiveProcessLaunchedInput", "definitions": {"record:InteractiveProcessLaunchedInput": {"additionalProperties": false, "properties": {"config": {"type": "object"}, "interactiveProcessId": {"type": "string"}, "launchedAt": {"type": "string"}, "launchedBy": {"$ref": "#/definitions/record:LaunchedBy"}, "workflowId": {"type": "string"}}, "title": "Interactive Process Launched Input", "type": "object"}, "record:LaunchedBy": {"additionalProperties": false, "properties": {"id": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "type"], "title": "LaunchedBy", "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:loop:iterator", "name": "Loop", "description": "Iterate over input and perform a set of steps on each individual item, in parallel.", "type": "ACTION", "formFields": [{"helpText": "The input for loop action", "label": "Input", "name": "input", "required": true, "type": "json"}, {"helpText": "The start step for loop action", "label": "Start", "name": "start", "required": true, "type": "text", "valueOnly": true}, {"helpText": "The Steps inside loop action", "label": "Steps", "name": "steps", "required": true, "type": "json", "valueOnly": true}, {"default": {}, "helpText": "The execution context to be included for the iteration.", "label": "Context", "name": "context", "type": "json"}], "outputSchema": {"definitions": {}, "properties": {"loopInput": {"$id": "#sp:loop:iterator/loopInput", "default": {}, "pattern": "^.*$", "title": "loopInput", "type": "object"}}, "title": "sp:loop:iterator", "type": "object"}, "exampleOutput": {"loopInput": {}}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:access:manage", "name": "Manage Access", "description": "Add or remove access for one or more identities.", "type": "ACTION", "formFields": [{"helpText": "Choose whether to add or remove access.", "label": "Request Type", "name": "requestType", "options": [{"label": "Add Access", "subfields": [{"config": {"max": "10"}, "helpText": "Select one or more identities.", "label": "Identities", "name": "addIdentities", "required": true, "type": "identityPicker"}], "value": "GRANT_ACCESS"}, {"label": "Remove Access", "subfields": [{"config": {"max": "1"}, "helpText": "Select one identity.", "label": "Identity", "name": "removeIdentity", "required": true, "type": "identityPicker"}], "value": "REVOKE_ACCESS"}], "required": true, "type": "multiType", "valueOnly": true}, {"helpText": "Select one or more complete access objects from the step\u2019s input to manage.", "label": "Access to Manage", "name": "requestedItems", "required": true, "type": "json"}, {"helpText": "Provide a comment about why this access is changing.", "label": "Comments", "name": "comments", "required": true, "type": "text"}, {"config": {"availableDurations": ["days", "weeks"]}, "helpText": "Select how long the user should have this access. Currently not supported for entitlements.", "label": "Select Duration", "name": "removeDuration", "placeholder": "", "required": false, "type": "duration"}], "outputSchema": {"definitions": {}, "properties": {"failedAccessRequests": {"$id": "#sp:access:manage/failedAccessRequests", "default": [], "items": {"$id": "#sp:access:manage/failedAccessRequests/items", "default": {}, "examples": [{"id": "2c918089759466e10175c2b5486d0b85", "name": "Test Access Profile Optional Comments", "type": "ACCESS_PROFILE"}], "pattern": "^.*$", "properties": {"id": {"default": "", "examples": ["2c918089759466e10175c2b5486d0b85"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"default": "", "examples": ["Test Access Profile Optional Comments"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"default": "", "examples": ["ACCESS_PROFILE"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "items", "type": "object"}, "title": "failedAccessRequest", "type": "array"}, "successfulAccessRequests": {"$id": "#sp:access:manage/successfulAccessRequests", "default": [], "items": {"$id": "#sp:access:manage/successfulAccessRequests/items", "default": {}, "examples": [{"id": "2c918089759466e10175c2b5486d0b85", "name": "Test Access Profile Optional Comments", "type": "ACCESS_PROFILE"}], "pattern": "^.*$", "properties": {"id": {"default": "", "examples": ["2c918089759466e10175c2b5486d0b85"], "pattern": "^.*$", "title": "id", "type": "string"}, "name": {"default": "", "examples": ["Test Access Profile Optional Comments"], "pattern": "^.*$", "title": "name", "type": "string"}, "type": {"default": "", "examples": ["ACCESS_PROFILE"], "pattern": "^.*$", "title": "type", "type": "string"}}, "title": "items", "type": "object"}, "title": "successfulAccessRequest", "type": "array"}}, "title": "sp:access:manage", "type": "object"}, "exampleOutput": {"successfulAccessRequests": [{"id": "2c918089759466e10175c2b5486d0b85", "name": "Test Access Profile Optional Comments", "type": "ACCESS_PROFILE"}], "failedAccessRequests": [{"id": "2c918089759466e10175c2b5486d0b85", "name": "Test Access Profile Optional Comments", "type": "ACCESS_PROFILE"}]}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:manage-account", "name": "Manage Accounts", "description": "Manage accounts for one or more identities.", "type": "ACTION", "formFields": [{"label": "Account Action", "name": "operation", "options": [{"label": "Delete Accounts", "value": "delete"}, {"label": "Disable Accounts", "value": "disable"}, {"label": "Enable Accounts", "value": "enable"}, {"label": "Unlock Accounts", "value": "unlock"}], "required": true, "type": "select", "valueOnly": true}, {"helpText": "Select the technical IDs of the accounts to take action on (ex. $.getAccounts.accounts[*].id).", "label": "Select Accounts", "name": "accountIds", "required": true, "type": "textarea"}], "outputSchema": {"definitions": {}, "properties": {"accountsErrorDetails": {"$id": "#sp:manage-account/accountsErrorDetails", "default": [], "items": {"$id": "#sp:manage-account/items", "default": {}, "properties": {"accountID": {"$id": "#sp:manage-account/accountsErrorDetails/items/accountID", "default": "", "examples": ["2c91808474683da6017468693c260195"], "pattern": "^.*$", "title": "accountID", "type": "string"}, "errorMessage": {"$id": "#sp:manage-account/accountsErrorDetails/items/errorMessage", "default": "", "examples": ["some error"], "pattern": "^.*$", "title": "errorMessage", "type": "string"}}, "title": "items", "type": "object"}, "title": "accountsErrorDetail", "type": "array"}, "failedAccounts": {"$id": "#sp:manage-account/failedAccounts", "default": [], "items": {"$id": "#sp:manage-account/failedAccounts/items", "default": "", "examples": ["2c91808474683da6017468693c260195"], "pattern": "^.*$", "title": "items", "type": "string"}, "title": "failedAccounts", "type": "array"}, "successfulAccounts": {"$id": "#sp:manage-account/successfulAccounts", "default": [], "items": {"$id": "#sp:manage-account/successfulAccounts/items", "default": "", "examples": ["2c91808474683da6017468693c260195"], "pattern": "^.*$", "title": "items", "type": "string"}, "title": "successfulAccounts", "type": "array"}}, "title": "sp:sp:manage-account", "type": "object"}, "exampleOutput": {"successfulAccounts": ["2c91808474683da6017468693c260195"], "failedAccounts": ["2c91808474683da6017468693c260195"]}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:snow", "name": "Manage ServiceNow Ticket", "description": "Creates a new ServiceNow ticket, or returns or updates the status of an existing ticket.", "type": "ACTION", "formFields": [{"config": {"allowClear": true}, "label": "Authentication Type", "name": "authenticationType", "options": [{"label": "Basic Authentication", "subfields": [{"label": "ServiceNow Username", "name": "basicAuthUserName", "required": true, "type": "text"}, {"label": "ServiceNow Password", "name": "basicAuthPassword", "required": true, "type": "secret"}], "value": "basic"}, {"label": "OAuth 2.0 - Client Credentials Grant", "subfields": [{"label": "Token URL", "name": "oAuthTokenUrl", "required": true, "type": "url"}, {"label": "Client ID", "name": "oAuthClientId", "required": true, "type": "text"}, {"label": "Client Secret", "name": "oAuthClientSecret", "required": true, "type": "secret"}, {"label": "ServiceNow Username", "name": "oAuthUserName", "required": true, "type": "text"}, {"label": "ServiceNow Password", "name": "oAuthPassword", "required": true, "type": "secret"}], "value": "OAuth"}], "required": false, "type": "multiType"}, {"helpText": "The ServiceNow endpoint\u2019s URL.", "label": "Request URL", "name": "url", "required": true, "type": "url"}, {"label": "Action", "name": "action", "options": [{"label": "Create New Ticket", "subfields": [{"label": "Caller", "name": "caller", "required": true, "type": "text", "valueOnly": true}, {"label": "Watchlist", "name": "watchlist", "required": false, "type": "text", "valueOnly": true}, {"label": "Short Description", "name": "shortDescription", "required": true, "type": "text", "valueOnly": true}, {"label": "Description", "name": "description", "required": false, "type": "textarea", "valueOnly": true}, {"label": "Category", "name": "category", "required": false, "type": "text", "valueOnly": true}, {"label": "Sub-Category", "name": "subCategory", "required": false, "type": "text", "valueOnly": true}, {"label": "Urgency", "name": "urgency", "options": [{"label": "1 - High", "value": "1"}, {"label": "2 - Medium", "value": "2"}, {"label": "3 - Low", "value": "3"}], "required": false, "type": "select", "valueOnly": true}, {"helpText": "Enter any additional fields required by ServiceNow and their values in key:value pairs, separated by line breaks.", "label": "Additional Fields", "name": "customFields", "placeholder": "field1:value1\nfield2:value2", "required": false, "type": "textarea", "valueOnly": true}], "value": "create"}, {"label": "Update Ticket Status", "subfields": [{"label": "Ticket ID", "name": "ticketUpdate", "required": true, "type": "text", "valueOnly": true}, {"helpText": "Select the ticket's new status.", "label": "Status", "name": "stateUpdate", "options": [{"label": "New", "value": "1"}, {"label": "In Progress", "value": "2"}, {"label": "On Hold", "value": "3"}, {"label": "Resolved", "value": "6"}, {"label": "Closed", "value": "7"}, {"label": "Canceled", "value": "8"}], "required": true, "type": "select", "valueOnly": true}], "value": "update"}, {"label": "Get Ticket Status", "subfields": [{"label": "Ticket ID", "name": "ticket", "required": true, "type": "text", "valueOnly": true}], "value": "get"}], "required": true, "type": "multiType"}], "outputSchema": {"definitions": {}, "properties": {"body": {"$id": "#sp:http/body", "pattern": "^.*$", "title": "body", "type": "object"}, "headers": {"$id": "#sp:http/headers", "pattern": "^.*$", "title": "headers", "type": "array"}, "statusCode": {"$id": "#sp:http/statusCode", "pattern": "^.*$", "title": "statusCode", "type": "number"}}, "title": "sp:snow", "type": "object"}, "exampleOutput": {"body": {"foo": "bar"}, "headers": [], "statusCode": 200}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "idn:native-change-account-created", "name": "Native Change Account Created", "description": "Trigger emitted when an account is created in the native source.", "type": "EVENT", "inputExample": {"account": {"correlated": true, "id": "52170a74-ca89-11ea-87d0-0242ac130003", "name": "john.doe", "nativeIdentity": "cn=john.doe,ou=users,dc=acme,dc=com", "type": "ACCOUNT", "uuid": "1cb1f07d-3e5a-4431-becd-234fa4306108"}, "accountChangeTypes": ["ATTRIBUTES_CHANGED", "ENTITLEMENTS_ADDED"], "entitlementChanges": [{"added": [{"id": "f3638e0d-2c0d-4731-8e4b-04ebb7aeea94", "name": "User group", "owner": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "John Doe", "type": "IDENTITY"}, "value": "User"}], "attributeName": "groups", "removed": []}], "eventType": "ACCOUNT_CREATED", "identity": {"alias": "john.doe", "email": "john.doe@acme.com", "id": "ee769173319b41d19ccec6cea52f237b", "manager": {"email": "stephen.austin@acme.com", "id": "2c91808b6ef1d43e016efba0ce470910", "name": "Stephen Austin", "type": "IDENTITY"}, "name": "John Doe", "type": "IDENTITY", "uid": "john.doe"}, "multiValueAttributeChanges": [{"addedValues": ["cn=g4,ou=groups,dc=acme,dc=com"], "name": "memberOf", "removedValues": []}], "singleValueAttributeChanges": [{"name": "sn", "newValue": "dough", "oldValue": null}], "source": {"alias": "Employee AD [source]", "governanceGroup": {"id": "6a80311c-8d11-40bc-a3c8-29e2360b85e8", "type": "GOVERNANCE_GROUP"}, "id": "904852b7c54143ebb824042ee406a393", "name": "Employee AD", "owner": {"email": "william.wilson@acme.com", "id": "37f080867702c1910177031320c40n27", "name": "William Wilson", "type": "IDENTITY"}, "type": "SOURCE"}}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:NativeChangePayload", "definitions": {"record:AccountReference": {"additionalProperties": true, "optional": ["uuid", "correlated"], "properties": {"correlated": {"type": "boolean"}, "id": {"type": "string"}, "name": {"type": "string"}, "nativeIdentity": {"type": "string"}, "type": {"type": "string"}, "uuid": {"$ref": "#/definitions/record:NullableString"}}, "required": ["id", "name", "nativeIdentity", "type"], "type": "object"}, "record:Attribute": {"oneOf": [{"type": "null"}, {"type": "string"}, {"type": "boolean"}, {"type": "number"}, {"items": {"$ref": "#/definitions/record:NullableString"}, "type": "array"}]}, "record:BaseDtoReference": {"additionalProperties": true, "optional": ["name"], "properties": {"id": {"type": "string"}, "name": {"$ref": "#/definitions/record:NullableString"}, "type": {"type": "string"}}, "required": ["id", "type"], "type": "object"}, "record:EntitlementChange": {"additionalProperties": true, "optional": ["added", "removed"], "properties": {"added": {"items": {"$ref": "#/definitions/record:EntitlementValue"}, "type": "array"}, "attributeName": {"type": "string"}, "removed": {"items": {"$ref": "#/definitions/record:EntitlementValue"}, "type": "array"}}, "required": ["attributeName"], "type": "object"}, "record:EntitlementValue": {"additionalProperties": true, "optional": ["id", "name", "owner"], "properties": {"id": {"$ref": "#/definitions/record:NullableString"}, "name": {"$ref": "#/definitions/record:NullableString"}, "owner": {"$ref": "#/definitions/record:BaseDtoReference"}, "value": {"type": "string"}}, "required": ["value"], "type": "object"}, "record:IdentityReference": {"additionalProperties": true, "optional": ["email", "uid"], "properties": {"alias": {"type": "string"}, "email": {"$ref": "#/definitions/record:NullableString"}, "id": {"type": "string"}, "manager": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:OwnerDtoReference"}]}, "name": {"type": "string"}, "type": {"type": "string"}, "uid": {"$ref": "#/definitions/record:NullableString"}}, "required": ["id", "name", "type", "alias"], "type": "object"}, "record:MultiValueAttributeChange": {"additionalProperties": true, "optional": ["addedValues", "removedValues"], "properties": {"addedValues": {"items": {"$ref": "#/definitions/record:Attribute"}, "type": "array"}, "name": {"type": "string"}, "removedValues": {"items": {"$ref": "#/definitions/record:Attribute"}, "type": "array"}}, "required": ["name"], "type": "object"}, "record:NativeChangePayload": {"additionalProperties": true, "optional": ["identity"], "properties": {"account": {"$ref": "#/definitions/record:AccountReference"}, "accountChangeTypes": {"items": {"type": "string"}, "type": "array"}, "entitlementChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:EntitlementChange"}}]}, "eventType": {"type": "string"}, "identity": {"$ref": "#/definitions/record:IdentityReference"}, "multiValueAttributeChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:MultiValueAttributeChange"}}]}, "singleValueAttributeChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:SingleValueAttributeChange"}, "type": "array"}]}, "source": {"$ref": "#/definitions/record:SourceReference"}}, "required": ["eventType", "source", "account"], "type": "object"}, "record:NullableString": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "record:OwnerDtoReference": {"additionalProperties": true, "optional": ["name", "email"], "properties": {"email": {"$ref": "#/definitions/record:NullableString"}, "id": {"type": "string"}, "name": {"$ref": "#/definitions/record:NullableString"}, "type": {"type": "string"}}, "required": ["id", "type"], "type": "object"}, "record:SingleValueAttributeChange": {"additionalProperties": true, "optional": ["oldValue", "newValue"], "properties": {"name": {"type": "string"}, "newValue": {"$ref": "#/definitions/record:Attribute"}, "oldValue": {"$ref": "#/definitions/record:Attribute"}}, "required": ["name"], "type": "object"}, "record:SourceReference": {"additionalProperties": true, "properties": {"alias": {"type": "string"}, "governanceGroup": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:BaseDtoReference"}]}, "id": {"type": "string"}, "name": {"type": "string"}, "owner": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:OwnerDtoReference"}]}, "type": {"type": "string"}}, "required": ["id", "name", "type", "alias"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:native-change-account-deleted", "name": "Native Change Account Deleted", "description": "Trigger emitted when an account is deleted in the native source.", "type": "EVENT", "inputExample": {"account": {"correlated": true, "id": "52170a74-ca89-11ea-87d0-0242ac130003", "name": "john.doe", "nativeIdentity": "cn=john.doe,ou=users,dc=acme,dc=com", "type": "ACCOUNT", "uuid": "1cb1f07d-3e5a-4431-becd-234fa4306108"}, "accountChangeTypes": ["ATTRIBUTES_CHANGED", "ENTITLEMENTS_REMOVED"], "entitlementChanges": [{"added": [], "attributeName": "groups", "removed": [{"id": "f3638e0d-2c0d-4731-8e4b-04ebb7aeea94", "name": "User group", "owner": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "John Doe", "type": "IDENTITY"}, "value": "User"}]}], "eventType": "ACCOUNT_DELETED", "identity": {"alias": "john.doe", "email": "john.doe@acme.com", "id": "ee769173319b41d19ccec6cea52f237b", "manager": {"email": "stephen.austin@acme.com", "id": "2c91808b6ef1d43e016efba0ce470910", "name": "Stephen Austin", "type": "IDENTITY"}, "name": "John Doe", "type": "IDENTITY", "uid": "john.doe"}, "multiValueAttributeChanges": [{"addedValues": [], "name": "memberOf", "removedValues": ["cn=g4,ou=groups,dc=acme,dc=com"]}], "singleValueAttributeChanges": [{"name": "sn", "newValue": null, "oldValue": "doe"}], "source": {"alias": "Employee AD [source]", "governanceGroup": {"id": "6a80311c-8d11-40bc-a3c8-29e2360b85e8", "type": "GOVERNANCE_GROUP"}, "id": "904852b7c54143ebb824042ee406a393", "name": "Employee AD", "owner": {"email": "william.wilson@acme.com", "id": "37f080867702c1910177031320c40n27", "name": "William Wilson", "type": "IDENTITY"}, "type": "SOURCE"}}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:NativeChangePayload", "definitions": {"record:AccountReference": {"additionalProperties": true, "optional": ["uuid", "correlated"], "properties": {"correlated": {"type": "boolean"}, "id": {"type": "string"}, "name": {"type": "string"}, "nativeIdentity": {"type": "string"}, "type": {"type": "string"}, "uuid": {"$ref": "#/definitions/record:NullableString"}}, "required": ["id", "name", "nativeIdentity", "type"], "type": "object"}, "record:Attribute": {"oneOf": [{"type": "null"}, {"type": "string"}, {"type": "boolean"}, {"type": "number"}, {"items": {"$ref": "#/definitions/record:NullableString"}, "type": "array"}]}, "record:BaseDtoReference": {"additionalProperties": true, "optional": ["name"], "properties": {"id": {"type": "string"}, "name": {"$ref": "#/definitions/record:NullableString"}, "type": {"type": "string"}}, "required": ["id", "type"], "type": "object"}, "record:EntitlementChange": {"additionalProperties": true, "optional": ["added", "removed"], "properties": {"added": {"items": {"$ref": "#/definitions/record:EntitlementValue"}, "type": "array"}, "attributeName": {"type": "string"}, "removed": {"items": {"$ref": "#/definitions/record:EntitlementValue"}, "type": "array"}}, "required": ["attributeName"], "type": "object"}, "record:EntitlementValue": {"additionalProperties": true, "optional": ["id", "name", "owner"], "properties": {"id": {"$ref": "#/definitions/record:NullableString"}, "name": {"$ref": "#/definitions/record:NullableString"}, "owner": {"$ref": "#/definitions/record:BaseDtoReference"}, "value": {"type": "string"}}, "required": ["value"], "type": "object"}, "record:IdentityReference": {"additionalProperties": true, "optional": ["email", "uid"], "properties": {"alias": {"type": "string"}, "email": {"$ref": "#/definitions/record:NullableString"}, "id": {"type": "string"}, "manager": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:OwnerDtoReference"}]}, "name": {"type": "string"}, "type": {"type": "string"}, "uid": {"$ref": "#/definitions/record:NullableString"}}, "required": ["id", "name", "type", "alias"], "type": "object"}, "record:MultiValueAttributeChange": {"additionalProperties": true, "optional": ["addedValues", "removedValues"], "properties": {"addedValues": {"items": {"$ref": "#/definitions/record:Attribute"}, "type": "array"}, "name": {"type": "string"}, "removedValues": {"items": {"$ref": "#/definitions/record:Attribute"}, "type": "array"}}, "required": ["name"], "type": "object"}, "record:NativeChangePayload": {"additionalProperties": true, "optional": ["identity"], "properties": {"account": {"$ref": "#/definitions/record:AccountReference"}, "accountChangeTypes": {"items": {"type": "string"}, "type": "array"}, "entitlementChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:EntitlementChange"}}]}, "eventType": {"type": "string"}, "identity": {"$ref": "#/definitions/record:IdentityReference"}, "multiValueAttributeChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:MultiValueAttributeChange"}}]}, "singleValueAttributeChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:SingleValueAttributeChange"}, "type": "array"}]}, "source": {"$ref": "#/definitions/record:SourceReference"}}, "required": ["eventType", "source", "account"], "type": "object"}, "record:NullableString": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "record:OwnerDtoReference": {"additionalProperties": true, "optional": ["name", "email"], "properties": {"email": {"$ref": "#/definitions/record:NullableString"}, "id": {"type": "string"}, "name": {"$ref": "#/definitions/record:NullableString"}, "type": {"type": "string"}}, "required": ["id", "type"], "type": "object"}, "record:SingleValueAttributeChange": {"additionalProperties": true, "optional": ["oldValue", "newValue"], "properties": {"name": {"type": "string"}, "newValue": {"$ref": "#/definitions/record:Attribute"}, "oldValue": {"$ref": "#/definitions/record:Attribute"}}, "required": ["name"], "type": "object"}, "record:SourceReference": {"additionalProperties": true, "properties": {"alias": {"type": "string"}, "governanceGroup": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:BaseDtoReference"}]}, "id": {"type": "string"}, "name": {"type": "string"}, "owner": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:OwnerDtoReference"}]}, "type": {"type": "string"}}, "required": ["id", "name", "type", "alias"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:native-change-account-updated", "name": "Native Change Account Updated", "description": "Trigger emitted when one or more attributes or entitlements on an account have changed in the native source.", "type": "EVENT", "inputExample": {"account": {"correlated": true, "id": "52170a74-ca89-11ea-87d0-0242ac130003", "name": "john.doe", "nativeIdentity": "cn=john.doe,ou=users,dc=acme,dc=com", "type": "ACCOUNT", "uuid": "1cb1f07d-3e5a-4431-becd-234fa4306108"}, "accountChangeTypes": ["ATTRIBUTES_CHANGED", "ENTITLEMENTS_ADDED", "ENTITLEMENTS_REMOVED"], "entitlementChanges": [{"added": [{"id": "f3638e0d-2c0d-4731-8e4b-04ebb7aeea94", "name": "User group", "owner": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "John Doe", "type": "IDENTITY"}, "value": "User"}], "attributeName": "groups", "removed": [{"id": "69bb2859-19f7-40db-a81d-e57ee31ac485", "name": "Manager group", "owner": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "John Doe", "type": "IDENTITY"}, "value": "Manager"}]}], "eventType": "ACCOUNT_UPDATED", "identity": {"alias": "john.doe", "email": "john.doe@acme.com", "id": "ee769173319b41d19ccec6cea52f237b", "manager": {"email": "stephen.austin@acme.com", "id": "2c91808b6ef1d43e016efba0ce470910", "name": "Stephen Austin", "type": "IDENTITY"}, "name": "John Doe", "type": "IDENTITY", "uid": "john.doe"}, "multiValueAttributeChanges": [{"addedValues": ["cn=g4,ou=groups,dc=acme,dc=com"], "name": "memberOf", "removedValues": ["cn=g1,ou=groups,dc=acme,dc=com"]}], "singleValueAttributeChanges": [{"name": "sn", "newValue": "dough", "oldValue": "doe"}], "source": {"alias": "Employee AD [source]", "governanceGroup": {"id": "6a80311c-8d11-40bc-a3c8-29e2360b85e8", "type": "GOVERNANCE_GROUP"}, "id": "904852b7c54143ebb824042ee406a393", "name": "Employee AD", "owner": {"email": "william.wilson@acme.com", "id": "37f080867702c1910177031320c40n27", "name": "William Wilson", "type": "IDENTITY"}, "type": "SOURCE"}}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:NativeChangePayload", "definitions": {"record:AccountReference": {"additionalProperties": true, "optional": ["uuid", "correlated"], "properties": {"correlated": {"type": "boolean"}, "id": {"type": "string"}, "name": {"type": "string"}, "nativeIdentity": {"type": "string"}, "type": {"type": "string"}, "uuid": {"$ref": "#/definitions/record:NullableString"}}, "required": ["id", "name", "nativeIdentity", "type"], "type": "object"}, "record:Attribute": {"oneOf": [{"type": "null"}, {"type": "string"}, {"type": "boolean"}, {"type": "number"}, {"items": {"$ref": "#/definitions/record:NullableString"}, "type": "array"}]}, "record:BaseDtoReference": {"additionalProperties": true, "optional": ["name"], "properties": {"id": {"type": "string"}, "name": {"$ref": "#/definitions/record:NullableString"}, "type": {"type": "string"}}, "required": ["id", "type"], "type": "object"}, "record:EntitlementChange": {"additionalProperties": true, "optional": ["added", "removed"], "properties": {"added": {"items": {"$ref": "#/definitions/record:EntitlementValue"}, "type": "array"}, "attributeName": {"type": "string"}, "removed": {"items": {"$ref": "#/definitions/record:EntitlementValue"}, "type": "array"}}, "required": ["attributeName"], "type": "object"}, "record:EntitlementValue": {"additionalProperties": true, "optional": ["id", "name", "owner"], "properties": {"id": {"$ref": "#/definitions/record:NullableString"}, "name": {"$ref": "#/definitions/record:NullableString"}, "owner": {"$ref": "#/definitions/record:BaseDtoReference"}, "value": {"type": "string"}}, "required": ["value"], "type": "object"}, "record:IdentityReference": {"additionalProperties": true, "optional": ["email", "uid"], "properties": {"alias": {"type": "string"}, "email": {"$ref": "#/definitions/record:NullableString"}, "id": {"type": "string"}, "manager": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:OwnerDtoReference"}]}, "name": {"type": "string"}, "type": {"type": "string"}, "uid": {"$ref": "#/definitions/record:NullableString"}}, "required": ["id", "name", "type", "alias"], "type": "object"}, "record:MultiValueAttributeChange": {"additionalProperties": true, "optional": ["addedValues", "removedValues"], "properties": {"addedValues": {"items": {"$ref": "#/definitions/record:Attribute"}, "type": "array"}, "name": {"type": "string"}, "removedValues": {"items": {"$ref": "#/definitions/record:Attribute"}, "type": "array"}}, "required": ["name"], "type": "object"}, "record:NativeChangePayload": {"additionalProperties": true, "optional": ["identity"], "properties": {"account": {"$ref": "#/definitions/record:AccountReference"}, "accountChangeTypes": {"items": {"type": "string"}, "type": "array"}, "entitlementChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:EntitlementChange"}}]}, "eventType": {"type": "string"}, "identity": {"$ref": "#/definitions/record:IdentityReference"}, "multiValueAttributeChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:MultiValueAttributeChange"}}]}, "singleValueAttributeChanges": {"oneOf": [{"type": "null"}, {"items": {"$ref": "#/definitions/record:SingleValueAttributeChange"}, "type": "array"}]}, "source": {"$ref": "#/definitions/record:SourceReference"}}, "required": ["eventType", "source", "account"], "type": "object"}, "record:NullableString": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "record:OwnerDtoReference": {"additionalProperties": true, "optional": ["name", "email"], "properties": {"email": {"$ref": "#/definitions/record:NullableString"}, "id": {"type": "string"}, "name": {"$ref": "#/definitions/record:NullableString"}, "type": {"type": "string"}}, "required": ["id", "type"], "type": "object"}, "record:SingleValueAttributeChange": {"additionalProperties": true, "optional": ["oldValue", "newValue"], "properties": {"name": {"type": "string"}, "newValue": {"$ref": "#/definitions/record:Attribute"}, "oldValue": {"$ref": "#/definitions/record:Attribute"}}, "required": ["name"], "type": "object"}, "record:SourceReference": {"additionalProperties": true, "properties": {"alias": {"type": "string"}, "governanceGroup": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:BaseDtoReference"}]}, "id": {"type": "string"}, "name": {"type": "string"}, "owner": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:OwnerDtoReference"}]}, "type": {"type": "string"}}, "required": ["id", "name", "type", "alias"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "iai:outlier-detected", "name": "Outlier Detected", "description": "An identity was detected as an outlier.", "type": "EVENT", "inputExample": {"identity": {"displayName": "John Doe", "id": "ee769173319b41d19ccec6cea52f237b", "type": "IDENTITY"}, "outlierType": "LOW_SIMILARITY", "score": 0.82}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:OutlierDetectedInput", "definitions": {"record:OutlierDetectedInput": {"additionalProperties": true, "properties": {"identity": {"$ref": "#/definitions/record:outlierIdentityRef"}, "outlierType": {"enum": ["LOW_SIMILARITY", "STRUCTURAL"], "type": "string"}, "score": {"type": "number"}}, "required": ["identity", "outlierType", "score"], "type": "object"}, "record:outlierIdentityRef": {"additionalProperties": true, "properties": {"displayName": {"type": "string"}, "id": {"type": "string"}, "type": {"enum": ["IDENTITY"], "type": "string"}}, "required": ["id", "displayName", "type"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:post-provisioning", "name": "Provisioning Completed", "description": "A provisioning action completed on a source.", "type": "EVENT", "inputExample": {"accountRequests": [{"accountId": "CN=Rob.Robertson,ou=csm,ou=sales,dc=helpco,dc=com", "accountOperation": "Modify", "attributeRequests": [{"attributeName": "memberOf", "attributeValue": "CN=sales,DC=helpco,DC=com", "operation": "Add"}], "provisioningResult": "SUCCESS", "provisioningTarget": "Corp AD", "source": {"id": "4e4d982dddff4267ab12f0f1e72b5a6d", "name": "Corporate Active Directory", "type": "SOURCE"}, "ticketId": "72619262"}], "action": "IdentityRefresh", "errors": ["General Error", "Connector AD Failed"], "recipient": {"id": "2c91808b6ef1d43e016efba0ce470909", "name": "Ed Engineer", "type": "IDENTITY"}, "requester": {"id": "2c91808b6ef1d43e016efba0ce470906", "name": "Adam Admin", "type": "IDENTITY"}, "sources": "Corp AD, Corp LDAP, Corp Salesforce", "trackingNumber": "4b4d982dddff4267ab12f0f1e72b5a6d", "warnings": ["Notification Skipped due to invalid email"]}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:PostProvisioningInput", "definitions": {"record:PostProvisioningInput": {"additionalProperties": true, "optional": ["action", "errors", "warnings", "requester"], "properties": {"accountRequests": {"items": {"$ref": "#/definitions/record:accountRequestsRecord"}, "type": "array"}, "action": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "errors": {"oneOf": [{"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}, {"type": "null"}]}, "recipient": {"$ref": "#/definitions/record:requestForIdentityRef"}, "requester": {"oneOf": [{"$ref": "#/definitions/record:requestByIdentityRef"}, {"type": "null"}]}, "sources": {"type": "string"}, "trackingNumber": {"type": "string"}, "warnings": {"oneOf": [{"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}, {"type": "null"}]}}, "required": ["trackingNumber", "sources", "recipient", "accountRequests"], "type": "object"}, "record:accountRequestsRecord": {"additionalProperties": true, "optional": ["accountId", "ticketId", "attributeRequests"], "properties": {"accountId": {"type": "string"}, "accountOperation": {"type": "string"}, "attributeRequests": {"oneOf": [{"items": {"$ref": "#/definitions/record:attributeRequestsRecord"}, "type": "array"}, {"type": "null"}]}, "provisioningResult": {"type": "string"}, "provisioningTarget": {"type": "string"}, "source": {"$ref": "#/definitions/record:sourceRef"}, "ticketId": {"oneOf": [{"type": "null"}, {"type": "string"}]}}, "required": ["source", "accountOperation", "provisioningResult", "provisioningTarget"], "type": "object"}, "record:attributeRequestsRecord": {"additionalProperties": true, "optional": ["attributeValue"], "properties": {"attributeName": {"type": "string"}, "attributeValue": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "operation": {"type": "string"}}, "required": ["attributeName", "operation"], "type": "object"}, "record:requestByIdentityRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["type", "id", "name"], "type": "object"}, "record:requestForIdentityRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "type": "object"}, "record:sourceRef": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["type", "id", "name"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:saved-search-complete", "name": "Scheduled Search", "description": "A scheduled search completed and results are available.", "type": "EVENT", "inputExample": {"fileName": "Modified.zip", "ownerEmail": "test@sailpoint.com", "ownerName": "Cloud Support", "query": "modified:[now-7y/d TO now]", "searchName": "Modified Activity", "searchResults": {"Account": {"count": "3", "noun": "accounts", "preview": [["Account Name", "Native Account ID", "Source Name", "Identity Name", "Extended Attributes", "Tags"], ["Adam.Archer", "Adam.Archer", "Engineering", "Adam.Archer", "mail=adam.archer@sailpoint.com,teletexTerminalIdentifier=teletexTerminalIdentifier,postalCode=78726,carLicense=[carLicense],telexNumber=telexNumber,employeeNumber=681497,postOfficeBox=postOfficeBox,registeredAddress=registeredAddress,pager=pager,msRTCSIP-UserEnabled=false,mailNickname=mailNickname,LyncPinSet=LyncPinSet,physicalDeliveryOfficeName=abc,sAMAccountName=Adam.Archer,initials=HH,msNPAllowDialin=msNPAllowDialin,givenName=Adam,homePhone=512-942-7578,objectClass=[objectClass],destinationIndicator=destinationIndicator,postalAddress=postalAddress,internationaliSDNNumber=internationaliSDNNumber,departmentNumber=Legal,objectSid=objectSid,LyncPinLockedOut=LyncPinLockedOut,pwdLastSet=pwdLastSet,msNPCallingStationID=[msNPCallingStationID],msRADIUSFramedIPAddress=msRADIUSFramedIPAddress,preferredLanguage=preferredLanguage,roomNumber=roomNumber,telephoneNumber=512-942-7578,displayName=Adam Archer,distinguishedName=DN=Adam Archer,title=title,seeAlso=seeAlso,uid=uid,secretary=secretary,street=street,objectguid=125,memberOf=[Diagnostics],msExchHideFromAddressLists=false,sn=Archer,department=department,userPrincipalName=userPrincipalName,idNowDescription=391ff9c367aa90a0e1a0c6c174aa1d3dec1d3071148e0e62827858a562397224,st=st,manager=CN=Amanda.Ross,ou=[ou],mobile=512-942-7578,primaryGroupDN=primaryGroupDN,cn=Adam.Archer,facsimileTelephoneNumber=[512-942-7578],l=l,homeMDB=homeMDB,homePostalAddress=11305 Four Points Blvd,SipAddress=SipAddress,o=o,accountFlags=[accountFlags],employeeType=Full Time,preferredDeliveryMethod=preferredDeliveryMethod,primaryGroupID=primaryGroupID,businessCategory=Legal,RegistrarPool=RegistrarPool,msDS-PrincipalName=msDS-PrincipalName,msRADIUSFramedRoute=[msRADIUSFramedRoute],msRADIUSCallbackNumber=msRADIUSCallbackNumber", ""], ["Amanda.Ross", "Amanda.Ross", "Engineering", "Amanda.Ross", "mail=amanda.ross@sailpoint.com,teletexTerminalIdentifier=teletexTerminalIdentifier,postalCode=78726,carLicense=[carLicense],telexNumber=telexNumber,employeeNumber=681497,postOfficeBox=postOfficeBox,registeredAddress=registeredAddress,pager=pager,msRTCSIP-UserEnabled=false,mailNickname=mailNickname,LyncPinSet=LyncPinSet,physicalDeliveryOfficeName=abc,sAMAccountName=Amanda.Ross,initials=HH,msNPAllowDialin=msNPAllowDialin,givenName=Amanda,homePhone=512-942-7578,objectClass=[objectClass],destinationIndicator=destinationIndicator,postalAddress=postalAddress,internationaliSDNNumber=internationaliSDNNumber,departmentNumber=Administration,objectSid=objectSid,LyncPinLockedOut=LyncPinLockedOut,pwdLastSet=pwdLastSet,msNPCallingStationID=[msNPCallingStationID],msRADIUSFramedIPAddress=msRADIUSFramedIPAddress,preferredLanguage=preferredLanguage,roomNumber=roomNumber,telephoneNumber=512-942-7578,displayName=Amanda Ross,distinguishedName=DN=Amanda Ross,title=title,seeAlso=seeAlso,uid=uid,secretary=secretary,street=street,objectguid=125,memberOf=[Administration],msExchHideFromAddressLists=false,sn=Ross,department=department,userPrincipalName=userPrincipalName,idNowDescription=0fb7bb4cb6c086640ef098f5dd36c5c42500e3a60a116ea936f284a4f70cf45b,st=st,manager=CN=Amanda.Ross,ou=[ou],mobile=512-942-7578,primaryGroupDN=primaryGroupDN,cn=Amanda.Ross,facsimileTelephoneNumber=[512-942-7578],l=l,homeMDB=homeMDB,homePostalAddress=11305 Four Points Blvd,SipAddress=SipAddress,o=o,accountFlags=[accountFlags],employeeType=Full Time,preferredDeliveryMethod=preferredDeliveryMethod,primaryGroupID=primaryGroupID,businessCategory=Administration,RegistrarPool=RegistrarPool,msDS-PrincipalName=msDS-PrincipalName,msRADIUSFramedRoute=[msRADIUSFramedRoute],msRADIUSCallbackNumber=msRADIUSCallbackNumber", ""], ["Amy.Chen", "Amy.Chen", "Engineering", "Amy.Chen", "mail=amy.chen@sailpoint.com,teletexTerminalIdentifier=teletexTerminalIdentifier,postalCode=78726,carLicense=[carLicense],telexNumber=telexNumber,employeeNumber=681497,postOfficeBox=postOfficeBox,registeredAddress=registeredAddress,pager=pager,msRTCSIP-UserEnabled=false,mailNickname=mailNickname,LyncPinSet=LyncPinSet,physicalDeliveryOfficeName=abc,sAMAccountName=Amy.Chen,initials=HH,msNPAllowDialin=msNPAllowDialin,givenName=Amy,homePhone=512-942-7578,objectClass=[objectClass],destinationIndicator=destinationIndicator,postalAddress=postalAddress,internationaliSDNNumber=internationaliSDNNumber,departmentNumber=Diagnostics,objectSid=objectSid,LyncPinLockedOut=LyncPinLockedOut,pwdLastSet=pwdLastSet,msNPCallingStationID=[msNPCallingStationID],msRADIUSFramedIPAddress=msRADIUSFramedIPAddress,preferredLanguage=preferredLanguage,roomNumber=roomNumber,telephoneNumber=512-942-7578,displayName=Amy Chen,distinguishedName=DN=Amy Chen,title=title,seeAlso=seeAlso,uid=uid,secretary=secretary,street=street,objectguid=125,memberOf=[Diagnostics],msExchHideFromAddressLists=false,sn=Chen,department=department,userPrincipalName=userPrincipalName,idNowDescription=820ff29573b916d9630205e4cae9a21061284a2866981433c9ef012f644ea326,st=st,manager=CN=William.Wilson,ou=[ou],mobile=512-942-7578,primaryGroupDN=primaryGroupDN,cn=Amy.Chen,facsimileTelephoneNumber=[512-942-7578],l=l,homeMDB=homeMDB,homePostalAddress=11305 Four Points Blvd,SipAddress=SipAddress,o=o,accountFlags=[accountFlags],employeeType=Full Time,preferredDeliveryMethod=preferredDeliveryMethod,primaryGroupID=primaryGroupID,businessCategory=Diagnostics,RegistrarPool=RegistrarPool,msDS-PrincipalName=msDS-PrincipalName,msRADIUSFramedRoute=[msRADIUSFramedRoute],msRADIUSCallbackNumber=msRADIUSCallbackNumber", ""]]}, "Entitlement": {"count": "2", "noun": "entitlements", "preview": [["Display Name", "Name", "Description", "Source ID", "Source Name", "Attribute", "Value", "Privileged", "Tags"], ["Administrator", "Administrator", "Full administrative access to IdentityNow", "2c91808a6e236e33016e6a91f61e3b32", "IdentityNow", "assignedGroups", "ORG_ADMIN", "false", ""], ["Auditor", "Auditor", "Auditor access to IdentityNow", "2c91808a6e236e33016e6a91f61e3b32", "IdentityNow", "assignedGroups", "AUDITOR", "false", ""]]}, "Identity": {"count": "2", "noun": "identities", "preview": [["Display Name", "First Name", "Last Name", "Work Email", "Created", "Lifecycle State"], ["William Wilson", "William", "Wilson", "william.wilson@sailpoint.com", "2019-11-14T15:56:00.862Z", ""], ["Ed Engineer", "Ed", "Engineer", "ed.engineer@sailpoint.com", "2019-11-14T15:56:00.862Z", ""]]}}, "signedS3Url": "https://sptcbu-org-data-useast1.s3.amazonaws.com/arsenal-john/reports/Events%20Export.2020-05-06%2018%2759%20GMT.3e580592-86e4-4953-8aea-49e6ef20a086.zip?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20200506T185919Z&X-Amz-SignedHeaders=host&X-Amz-Expires=899&X-Amz-Credential=AKIAV5E54XOGTS4Q4L7A%2F20200506%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=2e732bb97a12a1fd8a215613e3b90fcdae8ba1fb6a25916843ab5b51d2ddefbc"}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:SavedSearchCompleteInput", "definitions": {"record:Account": {"additionalProperties": true, "properties": {"count": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "noun": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "preview": {"oneOf": [{"type": "null"}, {"items": {"oneOf": [{"type": "null"}, {"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}]}, "type": "array"}]}}, "required": ["count", "noun", "preview"], "type": "object"}, "record:Entitlement": {"additionalProperties": true, "properties": {"count": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "noun": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "preview": {"oneOf": [{"type": "null"}, {"items": {"oneOf": [{"type": "null"}, {"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}]}, "type": "array"}]}}, "required": ["count", "noun", "preview"], "type": "object"}, "record:Identity": {"additionalProperties": true, "properties": {"count": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "noun": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "preview": {"oneOf": [{"type": "null"}, {"items": {"oneOf": [{"type": "null"}, {"items": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "type": "array"}]}, "type": "array"}]}}, "required": ["count", "noun", "preview"], "type": "object"}, "record:SavedSearchCompleteInput": {"additionalProperties": true, "properties": {"fileName": {"type": "string"}, "ownerEmail": {"type": "string"}, "ownerName": {"type": "string"}, "query": {"type": "string"}, "searchName": {"type": "string"}, "searchResults": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:SearchResults"}]}, "signedS3Url": {"type": "string"}}, "required": ["fileName", "ownerEmail", "ownerName", "query", "searchName", "searchResults", "signedS3Url"], "type": "object"}, "record:SearchResults": {"additionalProperties": true, "optional": ["Account", "Entitlement", "Identity"], "properties": {"Account": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:Account"}]}, "Entitlement": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:Entitlement"}]}, "Identity": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:Identity"}]}}, "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:cron-schedule", "name": "Scheduled Trigger", "description": "Fires on a regular schedule, based on a CRON expression.", "type": "SCHEDULED", "formFields": [{"helpText": "The CRON expression to represent the time between runs.", "label": "CRON Interval", "name": "cronString", "required": true, "type": "text"}], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:send-email", "name": "Send Email", "description": "Sends an email to the specified recipients.", "type": "ACTION", "formFields": [{"config": {"max": 10}, "label": "Recipient Email Addresses", "name": "recipientEmailList", "required": true, "type": "emailPicker"}, {"label": "From", "name": "from", "required": false, "type": "email"}, {"label": "Reply To Email Address", "name": "replyTo", "required": false, "type": "email"}, {"label": "Subject", "name": "subject", "required": false, "type": "text"}, {"helpText": "The body text of the email. This can be written in HTML or plain text.", "label": "Body", "name": "body", "required": false, "type": "htmlEditor"}, {"default": {}, "helpText": "The map of template variables to render in the email.", "label": "Templating Context", "name": "context", "required": false, "type": "json", "valueOnly": true}], "exampleOutput": {}, "versionNumber": 2, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:send-slack-message", "name": "Send Slack Message", "description": "Sends a Slack message from your organization's SailPoint app to an individual user.", "type": "ACTION", "formFields": [{"config": {"max": "1"}, "helpText": "Use the dropdown list to choose an identity or enter a JSONPath expression to an identity\u2019s technical ID to send a message to that identity. If the selected identity hasn't installed the SailPoint app within Slack, this message will be sent to their email instead.", "label": "Recipient", "name": "id", "required": true, "type": "identityPicker"}, {"helpText": "Enter the message to send to the selected recipient.", "label": "Message", "name": "body", "required": true, "type": "textarea"}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "idn:source-created", "name": "Source Created", "description": "A new source was created successfully.", "type": "EVENT", "inputExample": {"actor": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "john.doe", "type": "IDENTITY"}, "connector": "active-directory", "created": "2021-03-29T22:01:50.474Z", "id": "2c9180866166b5b0016167c32ef31a66", "name": "Test source", "type": "DIRECT_CONNECT"}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:SourceCreatedEvent", "definitions": {"record:Actor": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "type": "object"}, "record:SourceCreatedEvent": {"additionalProperties": true, "properties": {"actor": {"$ref": "#/definitions/record:Actor"}, "connector": {"type": "string"}, "created": {"type": "string"}, "id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type", "created", "connector", "actor"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:source-deleted", "name": "Source Deleted", "description": "A source was deleted successfully.", "type": "EVENT", "inputExample": {"actor": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "john.doe", "type": "IDENTITY"}, "connector": "active-directory", "deleted": "2021-03-29T22:01:50.474Z", "id": "2c9180866166b5b0016167c32ef31a66", "name": "Test source", "type": "DIRECT_CONNECT"}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:SourceDeletedEvent", "definitions": {"record:Actor": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "type": "object"}, "record:SourceDeletedEvent": {"additionalProperties": true, "properties": {"actor": {"$ref": "#/definitions/record:Actor"}, "connector": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "deleted": {"type": "string"}, "id": {"type": "string"}, "name": {"type": "string"}, "type": {"oneOf": [{"type": "null"}, {"type": "string"}]}}, "required": ["id", "name", "type", "deleted", "connector", "actor"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:source-updated", "name": "Source Updated", "description": "Configuration changes were made to a source.", "type": "EVENT", "inputExample": {"actor": {"id": "ee769173319b41d19ccec6cea52f237b", "name": "john.doe", "type": "IDENTITY"}, "attributesUpdated": {"cloudDisplayName_after": "name", "cloudDisplayName_before": "None", "deleteThresholdPercentage_after": "10", "deleteThresholdPercentage_before": "None"}, "connector": "active-directory", "id": "2c9180866166b5b0016167c32ef31a66", "modified": "2021-03-29T22:01:50.474Z", "name": "Test source", "type": "DIRECT_CONNECT"}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:SourceUpdatedEvent", "definitions": {"record:Actor": {"additionalProperties": true, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "type": {"type": "string"}}, "required": ["id", "name", "type"], "type": "object"}, "record:SourceUpdatedEvent": {"additionalProperties": true, "properties": {"actor": {"$ref": "#/definitions/record:Actor"}, "attributesUpdated": {"oneOf": [{"type": "null"}, {"type": "object"}]}, "connector": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "id": {"type": "string"}, "modified": {"oneOf": [{"type": "null"}, {"type": "string"}]}, "name": {"type": "string"}, "type": {"oneOf": [{"type": "null"}, {"type": "string"}]}}, "required": ["id", "name", "type", "modified", "connector", "actor", "attributesUpdated"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "idn:va-cluster-status-change", "name": "VA Cluster Status Change Event", "description": "The VA Cluster Status Change event triggers whenever a particular VA Cluster changes status", "type": "EVENT", "inputExample": {"application": {"attributes": {"clusterId": "2c9180866166b5b0016167c32ef31a66"}, "id": "2c9180866166b5b0016167c32ef31a66", "name": "Production VA Cluster"}, "created": "2020-06-29T22:01:50.474Z", "healthCheckResult": {"message": " Test Connection failed with exception.  Error message - java.lang.Exception", "resultType": "SOURCE_STATE_FAILURE_SOURCE", "status": "Failed"}, "previousHealthCheckResult": {"message": "nothing bad happened", "resultType": "SOURCE_STATE_HEALTHY", "status": "Failed"}, "type": "Source"}, "formFields": [{"helpText": "A JSONPath expression to limit the conditions under which this trigger starts the workflow.", "label": "Filter", "name": "filter", "required": false, "type": "jsonpath"}], "outputSchema": {"$ref": "#/definitions/record:VAClusterStatusChangeEvent", "definitions": {"record:Attributes": {"additionalProperties": true, "optional": ["clusterId"], "properties": {"clusterId": {"oneOf": [{"type": "null"}, {"type": "string"}]}}, "required": [], "type": "object"}, "record:VAClusterStatusChangeEvent": {"additionalProperties": true, "properties": {"application": {"$ref": "#/definitions/record:applicationInfo"}, "created": {"type": "string"}, "healthCheckResult": {"$ref": "#/definitions/record:healthCheckResultInfo"}, "previousHealthCheckResult": {"$ref": "#/definitions/record:previousHealthCheckResultInfo"}, "type": {"type": "string"}}, "required": ["created", "type", "application", "healthCheckResult", "previousHealthCheckResult"], "type": "object"}, "record:applicationInfo": {"additionalProperties": true, "properties": {"attributes": {"oneOf": [{"type": "null"}, {"$ref": "#/definitions/record:Attributes"}]}, "id": {"type": "string"}, "name": {"type": "string"}}, "required": ["id", "name", "attributes"], "type": "object"}, "record:healthCheckResultInfo": {"additionalProperties": true, "properties": {"message": {"type": "string"}, "resultType": {"type": "string"}, "status": {"type": "string"}}, "required": ["message", "resultType", "status"], "type": "object"}, "record:previousHealthCheckResultInfo": {"additionalProperties": true, "properties": {"message": {"type": "string"}, "resultType": {"type": "string"}, "status": {"type": "string"}}, "required": ["message", "resultType", "status"], "type": "object"}}}, "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:compare-unary", "name": "Verify Data Type", "description": "Choose what happens if a selected object exists within or has a specific data type in the input.", "type": "OPERATOR", "formFields": [{"description": "First value to compare", "helpText": "Enter the JSONPath to a value to verify that it's the correct kind of data", "label": "Value", "name": "variableA.$", "required": true, "type": "text"}, {"description": "Verify that the selected value:", "helpText": "", "label": "Operation", "name": "comparator", "options": [{"label": "Is a boolean", "value": "IsBoolean"}, {"label": "Is null", "value": "IsNull"}, {"label": "Is a number", "value": "IsNumeric"}, {"label": "Exists", "value": "IsPresent"}, {"label": "Is a string", "value": "IsString"}, {"label": "Is a timestamp", "value": "IsTimestamp"}], "required": true, "type": "select"}], "deprecated": false, "deprecatedBy": "0001-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": false}
{"id": "sp:sleep", "name": "Wait", "description": "Pauses a workflow for a period of time.", "type": "ACTION", "formFields": [{"helpText": "Choose whether to wait for a period of time or until a specific date.", "label": "Wait Type", "name": "type", "options": [{"helpText": "Duration of time", "label": "Wait For", "subfields": [{"config": {"availableDurations": ["minutes", "hours", "days"]}, "helpText": "Choose how long to pause the workflow for.", "label": "Duration", "name": "duration", "placeholder": "", "required": true, "type": "duration"}], "value": "waitFor"}, {"helpText": "Specific date or variable", "label": "Wait Until", "subfields": [{"helpText": "MM-DD-YYYY", "label": "Date", "name": "date", "placeholder": "", "required": true, "type": "date"}, {"helpText": "HH:MM AM", "label": "Time", "name": "time", "placeholder": "", "required": true, "type": "time"}], "value": "waitUntil"}], "placeholder": "", "required": true, "type": "multiType"}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": false, "isSimulationEnabled": true}
{"id": "sp:pag-windows-server", "name": "Windows Server", "description": "View and modify services and firewall rules on a Windows Server.", "type": "ACTION", "formFields": [{"config": {"max": "1"}, "dynamicConfig": {"method": "GET", "path": "connector-instances?filters=requiredCommands ca \"pag:windows_server:list_services\"", "service": "sp-connect"}, "helpText": "Select a Privilege Gateway cluster.", "label": "Privilege Cluster", "name": "pagInstanceId", "required": true, "type": "pagInstancePicker", "valueOnly": true}, {"config": {"max": "1"}, "dynamicConfig": {"method": "GET", "optionConfig": {"filterKey": "type", "filterRegex": "^pag:windows_server", "label": "displayName", "source": "$.customCommands[*]", "value": "type"}, "path": "managed-connector-specifications/{id}", "service": "sp-connect"}, "helpText": "Select a command.", "label": "Command", "name": "pagCommandType", "required": true, "type": "pagCommandPicker", "valueOnly": true}], "exampleOutput": {}, "versionNumber": 1, "deprecated": false, "deprecatedBy": "2099-01-01T00:00:00Z", "isDynamicSchema": true, "isSimulationEnabled": true}
